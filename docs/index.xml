<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Envoy Gateway – Documents</title><link>http://gateway.xunzhuo.cafe/docs/</link><description>Recent content in Documents on Envoy Gateway</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="http://gateway.xunzhuo.cafe/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Quickstart</title><link>http://gateway.xunzhuo.cafe/docs/latest/user/quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/latest/user/quickstart/</guid><description>
&lt;p>This guide will help you get started with Envoy Gateway in a few simple steps.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>A Kubernetes cluster.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> Refer to the &lt;a href="../intro/compatibility.rst">Compatibility Matrix&lt;/a> for supported Kubernetes versions.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> In case your Kubernetes cluster, does not have a LoadBalancer implementation, we recommend installing one
so the &lt;code>Gateway&lt;/code> resource has an Address associated with it. We recommend using &lt;a href="https://metallb.universe.tf/installation/">MetalLB&lt;/a>.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>Install the Gateway API CRDs and Envoy Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>helm install eg oci://docker.io/envoyproxy/gateway-helm --version v0.0.0-latest -n envoy-gateway-system --create-namespace
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Wait for Envoy Gateway to become available:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl &lt;span style="color:#204a87">wait&lt;/span> --timeout&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>5m -n envoy-gateway-system deployment/envoy-gateway --for&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">condition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>Available
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the GatewayClass, Gateway, HTTPRoute and example app:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl apply -f https://github.com/envoyproxy/gateway/releases/download/latest/quickstart.yaml -n default
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note&lt;/strong>: &lt;a href="https://github.com/envoyproxy/gateway/releases/download/latest/quickstart.yaml">&lt;code>quickstart.yaml&lt;/code>&lt;/a> defines that Envoy Gateway will listen for
traffic on port 80 on its globally-routable IP address, to make it easy to use
browsers to test Envoy Gateway. When Envoy Gateway sees that its Listener is
using a privileged port (&amp;lt;1024), it will map this internally to an
unprivileged port, so that Envoy Gateway doesn&amp;rsquo;t need additional privileges.
It&amp;rsquo;s important to be aware of this mapping, since you may need to take it into
consideration when debugging.&lt;/p>
&lt;h2 id="testing-the-configuration">Testing the Configuration&lt;/h2>
&lt;p>Get the name of the Envoy service created the by the example Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get svc -n envoy-gateway-system --selector&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gateway.envoyproxy.io/owning-gateway-namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>default,gateway.envoyproxy.io/owning-gateway-name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>eg -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Port forward to the Envoy service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl -n envoy-gateway-system port-forward service/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> 8888:80 &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Curl the example app through Envoy proxy:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.example.com&amp;#34;&lt;/span> http://localhost:8888/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="external-loadbalancer-support">External LoadBalancer Support&lt;/h3>
&lt;p>You can also test the same functionality by sending traffic to the External IP. To get the external IP of the
Envoy service, run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">GATEWAY_HOST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get svc/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n envoy-gateway-system -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.status.loadBalancer.ingress[0].ip}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In certain environments, the load balancer may be exposed using a hostname, instead of an IP address. If so, replace
&lt;code>ip&lt;/code> in the above command with &lt;code>hostname&lt;/code>.&lt;/p>
&lt;p>Curl the example app through Envoy proxy:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.example.com&amp;#34;&lt;/span> http://&lt;span style="color:#000">$GATEWAY_HOST&lt;/span>/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="clean-up">Clean-Up&lt;/h2>
&lt;p>Use the steps in this section to uninstall everything from the quickstart guide.&lt;/p>
&lt;p>Delete the GatewayClass, Gateway, HTTPRoute and Example App:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl delete -f https://github.com/envoyproxy/gateway/releases/download/latest/quickstart.yaml --ignore-not-found&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Delete the Gateway API CRDs and Envoy Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>helm uninstall eg -n envoy-gateway-system
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="next-steps">Next Steps&lt;/h2>
&lt;p>Checkout the &lt;a href="../dev/README.md">Developer Guide&lt;/a> to get involved in the project.&lt;/p></description></item><item><title>Docs: Quickstart</title><link>http://gateway.xunzhuo.cafe/docs/v0.2.0/user/quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.2.0/user/quickstart/</guid><description>
&lt;p>This guide will help you get started with Envoy Gateway in a few simple steps.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>A Kubernetes cluster.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> Refer to the &lt;a href="../intro/compatibility.rst">Compatibility Matrix&lt;/a> for supported Kubernetes versions.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>Install the Gateway API CRDs and Envoy Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl apply -f https://github.com/envoyproxy/gateway/releases/download/v0.2.0/install.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Wait for Envoy Gateway to become available:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl &lt;span style="color:#204a87">wait&lt;/span> --timeout&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>5m -n envoy-gateway-system deployment/envoy-gateway --for&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">condition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>Available
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the GatewayClass, Gateway, HTTPRoute and example app:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl apply -f https://github.com/envoyproxy/gateway/releases/download/v0.2.0/quickstart.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="testing-the-configuration">Testing the Configuration&lt;/h2>
&lt;p>Get the name of the Envoy service created the by the example Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get svc -n envoy-gateway-system --selector&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gateway.envoyproxy.io/owning-gateway-namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>default,gateway.envoyproxy.io/owning-gateway-name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>eg -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Port forward to the Envoy service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl -n envoy-gateway-system port-forward service/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> 8888:8080 &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Curl the example app through Envoy proxy:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.example.com&amp;#34;&lt;/span> http://localhost:8888/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="external-loadbalancer-support">External LoadBalancer Support&lt;/h3>
&lt;p>You can also test the same functionality by sending traffic to the External IP. To get the external IP of the
Envoy service, run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">GATEWAY_HOST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get svc/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n envoy-gateway-system -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.status.loadBalancer.ingress[0].ip}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In certain environments, the load balancer may be exposed using a hostname, instead of an IP address. If so, replace
&lt;code>ip&lt;/code> in the above command with &lt;code>hostname&lt;/code>.&lt;/p>
&lt;p>Curl the example app through Envoy proxy:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.example.com&amp;#34;&lt;/span> http://&lt;span style="color:#000">$GATEWAY_HOST&lt;/span>:8080/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="clean-up">Clean-Up&lt;/h2>
&lt;p>Use the steps in this section to uninstall everything from the quickstart guide.&lt;/p>
&lt;p>Delete the GatewayClass, Gateway, HTTPRoute and Example App:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl delete -f https://github.com/envoyproxy/gateway/releases/download/v0.2.0/quickstart.yaml --ignore-not-found&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Delete the Gateway API CRDs and Envoy Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl delete -f https://github.com/envoyproxy/gateway/releases/download/v0.2.0/install.yaml --ignore-not-found&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="next-steps">Next Steps&lt;/h2>
&lt;p>Checkout the &lt;a href="../dev/README.md">Developer Guide&lt;/a> to get involved in the project.&lt;/p></description></item><item><title>Docs: Quickstart</title><link>http://gateway.xunzhuo.cafe/docs/v0.3.0/user/quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.3.0/user/quickstart/</guid><description>
&lt;p>This guide will help you get started with Envoy Gateway in a few simple steps.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>A Kubernetes cluster.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> Refer to the &lt;a href="../intro/compatibility.rst">Compatibility Matrix&lt;/a> for supported Kubernetes versions.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>Install the Gateway API CRDs and Envoy Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl apply -f https://github.com/envoyproxy/gateway/releases/download/v0.3.0/install.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Wait for Envoy Gateway to become available:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl &lt;span style="color:#204a87">wait&lt;/span> --timeout&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>5m -n envoy-gateway-system deployment/envoy-gateway --for&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">condition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>Available
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the GatewayClass, Gateway, HTTPRoute and example app:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl apply -f https://github.com/envoyproxy/gateway/releases/download/v0.3.0/quickstart.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note&lt;/strong>: &lt;a href="https://github.com/envoyproxy/gateway/releases/download/v0.3.0/quickstart.yaml">&lt;code>quickstart.yaml&lt;/code>&lt;/a> defines that Envoy Gateway will listen for
traffic on port 80 on its globally-routable IP address, to make it easy to use
browsers to test Envoy Gateway. When Envoy Gateway sees that its Listener is
using a privileged port (&amp;lt;1024), it will map this internally to an
unprivileged port, so that Envoy Gateway doesn&amp;rsquo;t need additional privileges.
It&amp;rsquo;s important to be aware of this mapping, since you may need to take it into
consideration when debugging.&lt;/p>
&lt;h2 id="testing-the-configuration">Testing the Configuration&lt;/h2>
&lt;p>Get the name of the Envoy service created the by the example Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get svc -n envoy-gateway-system --selector&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gateway.envoyproxy.io/owning-gateway-namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>default,gateway.envoyproxy.io/owning-gateway-name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>eg -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Port forward to the Envoy service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl -n envoy-gateway-system port-forward service/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> 8888:80 &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Curl the example app through Envoy proxy:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.example.com&amp;#34;&lt;/span> http://localhost:8888/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="external-loadbalancer-support">External LoadBalancer Support&lt;/h3>
&lt;p>You can also test the same functionality by sending traffic to the External IP. To get the external IP of the
Envoy service, run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">GATEWAY_HOST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get svc/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n envoy-gateway-system -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.status.loadBalancer.ingress[0].ip}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In certain environments, the load balancer may be exposed using a hostname, instead of an IP address. If so, replace
&lt;code>ip&lt;/code> in the above command with &lt;code>hostname&lt;/code>.&lt;/p>
&lt;p>Curl the example app through Envoy proxy:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.example.com&amp;#34;&lt;/span> http://&lt;span style="color:#000">$GATEWAY_HOST&lt;/span>/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="clean-up">Clean-Up&lt;/h2>
&lt;p>Use the steps in this section to uninstall everything from the quickstart guide.&lt;/p>
&lt;p>Delete the GatewayClass, Gateway, HTTPRoute and Example App:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl delete -f https://github.com/envoyproxy/gateway/releases/download/v0.3.0/quickstart.yaml --ignore-not-found&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Delete the Gateway API CRDs and Envoy Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl delete -f https://github.com/envoyproxy/gateway/releases/download/v0.3.0/install.yaml --ignore-not-found&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="next-steps">Next Steps&lt;/h2>
&lt;p>Checkout the &lt;a href="../dev/README.md">Developer Guide&lt;/a> to get involved in the project.&lt;/p></description></item><item><title>Docs: Quickstart</title><link>http://gateway.xunzhuo.cafe/docs/v0.4.0/user/quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.4.0/user/quickstart/</guid><description>
&lt;p>This guide will help you get started with Envoy Gateway in a few simple steps.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>A Kubernetes cluster.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> Refer to the &lt;a href="../intro/compatibility.rst">Compatibility Matrix&lt;/a> for supported Kubernetes versions.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>Install the Gateway API CRDs and Envoy Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>helm install eg oci://docker.io/envoyproxy/gateway-helm --version v0.4.0 -n envoy-gateway-system --create-namespace
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Wait for Envoy Gateway to become available:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl &lt;span style="color:#204a87">wait&lt;/span> --timeout&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>5m -n envoy-gateway-system deployment/envoy-gateway --for&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">condition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>Available
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the GatewayClass, Gateway, HTTPRoute and example app:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl apply -f https://github.com/envoyproxy/gateway/releases/download/v0.4.0/quickstart.yaml -n default
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note&lt;/strong>: &lt;a href="https://github.com/envoyproxy/gateway/releases/download/v0.4.0/quickstart.yaml">&lt;code>quickstart.yaml&lt;/code>&lt;/a> defines that Envoy Gateway will listen for
traffic on port 80 on its globally-routable IP address, to make it easy to use
browsers to test Envoy Gateway. When Envoy Gateway sees that its Listener is
using a privileged port (&amp;lt;1024), it will map this internally to an
unprivileged port, so that Envoy Gateway doesn&amp;rsquo;t need additional privileges.
It&amp;rsquo;s important to be aware of this mapping, since you may need to take it into
consideration when debugging.&lt;/p>
&lt;h2 id="testing-the-configuration">Testing the Configuration&lt;/h2>
&lt;p>Get the name of the Envoy service created the by the example Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get svc -n envoy-gateway-system --selector&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gateway.envoyproxy.io/owning-gateway-namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>default,gateway.envoyproxy.io/owning-gateway-name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>eg -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Port forward to the Envoy service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl -n envoy-gateway-system port-forward service/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> 8888:80 &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Curl the example app through Envoy proxy:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.example.com&amp;#34;&lt;/span> http://localhost:8888/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="external-loadbalancer-support">External LoadBalancer Support&lt;/h3>
&lt;p>You can also test the same functionality by sending traffic to the External IP. To get the external IP of the
Envoy service, run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">GATEWAY_HOST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get svc/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n envoy-gateway-system -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.status.loadBalancer.ingress[0].ip}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In certain environments, the load balancer may be exposed using a hostname, instead of an IP address. If so, replace
&lt;code>ip&lt;/code> in the above command with &lt;code>hostname&lt;/code>.&lt;/p>
&lt;p>Curl the example app through Envoy proxy:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.example.com&amp;#34;&lt;/span> http://&lt;span style="color:#000">$GATEWAY_HOST&lt;/span>/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="clean-up">Clean-Up&lt;/h2>
&lt;p>Use the steps in this section to uninstall everything from the quickstart guide.&lt;/p>
&lt;p>Delete the GatewayClass, Gateway, HTTPRoute and Example App:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl delete -f https://github.com/envoyproxy/gateway/releases/download/v0.4.0/quickstart.yaml --ignore-not-found&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Delete the Gateway API CRDs and Envoy Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>helm uninstall eg -n envoy-gateway-system
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="next-steps">Next Steps&lt;/h2>
&lt;p>Checkout the &lt;a href="../dev/README.md">Developer Guide&lt;/a> to get involved in the project.&lt;/p></description></item><item><title>Docs: Quickstart</title><link>http://gateway.xunzhuo.cafe/docs/v0.5.0/user/quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.5.0/user/quickstart/</guid><description>
&lt;p>This guide will help you get started with Envoy Gateway in a few simple steps.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>A Kubernetes cluster.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> Refer to the &lt;a href="../intro/compatibility.rst">Compatibility Matrix&lt;/a> for supported Kubernetes versions.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>Install the Gateway API CRDs and Envoy Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>helm install eg oci://docker.io/envoyproxy/gateway-helm --version v0.5.0 -n envoy-gateway-system --create-namespace
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Wait for Envoy Gateway to become available:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl &lt;span style="color:#204a87">wait&lt;/span> --timeout&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>5m -n envoy-gateway-system deployment/envoy-gateway --for&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">condition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>Available
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the GatewayClass, Gateway, HTTPRoute and example app:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl apply -f https://github.com/envoyproxy/gateway/releases/download/v0.5.0/quickstart.yaml -n default
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note&lt;/strong>: &lt;a href="https://github.com/envoyproxy/gateway/releases/download/v0.5.0/quickstart.yaml">&lt;code>quickstart.yaml&lt;/code>&lt;/a> defines that Envoy Gateway will listen for
traffic on port 80 on its globally-routable IP address, to make it easy to use
browsers to test Envoy Gateway. When Envoy Gateway sees that its Listener is
using a privileged port (&amp;lt;1024), it will map this internally to an
unprivileged port, so that Envoy Gateway doesn&amp;rsquo;t need additional privileges.
It&amp;rsquo;s important to be aware of this mapping, since you may need to take it into
consideration when debugging.&lt;/p>
&lt;h2 id="testing-the-configuration">Testing the Configuration&lt;/h2>
&lt;p>Get the name of the Envoy service created the by the example Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get svc -n envoy-gateway-system --selector&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gateway.envoyproxy.io/owning-gateway-namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>default,gateway.envoyproxy.io/owning-gateway-name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>eg -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Port forward to the Envoy service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl -n envoy-gateway-system port-forward service/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> 8888:80 &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Curl the example app through Envoy proxy:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.example.com&amp;#34;&lt;/span> http://localhost:8888/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="external-loadbalancer-support">External LoadBalancer Support&lt;/h3>
&lt;p>You can also test the same functionality by sending traffic to the External IP. To get the external IP of the
Envoy service, run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">GATEWAY_HOST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get svc/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n envoy-gateway-system -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.status.loadBalancer.ingress[0].ip}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In certain environments, the load balancer may be exposed using a hostname, instead of an IP address. If so, replace
&lt;code>ip&lt;/code> in the above command with &lt;code>hostname&lt;/code>.&lt;/p>
&lt;p>Curl the example app through Envoy proxy:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.example.com&amp;#34;&lt;/span> http://&lt;span style="color:#000">$GATEWAY_HOST&lt;/span>/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="clean-up">Clean-Up&lt;/h2>
&lt;p>Use the steps in this section to uninstall everything from the quickstart guide.&lt;/p>
&lt;p>Delete the GatewayClass, Gateway, HTTPRoute and Example App:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl delete -f https://github.com/envoyproxy/gateway/releases/download/v0.5.0/quickstart.yaml --ignore-not-found&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Delete the Gateway API CRDs and Envoy Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>helm uninstall eg -n envoy-gateway-system
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="next-steps">Next Steps&lt;/h2>
&lt;p>Checkout the &lt;a href="../dev/README.md">Developer Guide&lt;/a> to get involved in the project.&lt;/p></description></item><item><title>Docs: Add Pprof support in Envoy Gateway</title><link>http://gateway.xunzhuo.cafe/docs/latest/design/pprof/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/latest/design/pprof/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Envoy Gateway exposes endpoints at &lt;code>localhost:8899/debug/pprof&lt;/code> to run Golang profiles to aid in live debugging. The endpoints are equivalent to those found in the http/pprof package. &lt;code>/debug/pprof/&lt;/code> returns an HTML page listing the available profiles.&lt;/p>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;ul>
&lt;li>Add Debug Pprof support to Envoy Gateway control plane.&lt;/li>
&lt;li>Define an API to allow Envoy Gateway to custom debug server configuration.&lt;/li>
&lt;/ul>
&lt;p>The following are the different types of profiles end-user can run:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>PROFILE&lt;/th>
&lt;th>FUNCTION&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>/debug/pprof/allocs&lt;/td>
&lt;td>Returns a sampling of all past memory allocations.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/block&lt;/td>
&lt;td>Returns stack traces of goroutines that led to blocking on synchronization primitives.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/cmdline&lt;/td>
&lt;td>Returns the command line that was invoked by the current program.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/goroutine&lt;/td>
&lt;td>Returns stack traces of all current goroutines.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/heap&lt;/td>
&lt;td>Returns a sampling of memory allocations of live objects.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/mutex&lt;/td>
&lt;td>Returns stack traces of goroutines holding contended mutexes.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/profile&lt;/td>
&lt;td>Returns pprof-formatted cpu profile. You can specify the duration using the seconds GET parameter. The default duration is 30 seconds.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/symbol&lt;/td>
&lt;td>Returns the program counters listed in the request.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/threadcreate&lt;/td>
&lt;td>Returns stack traces that led to creation of new OS threads.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/trace&lt;/td>
&lt;td>Returns the execution trace in binary form. You can specify the duration using the seconds GET parameter. The default duration is 1 second.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="non-goals">Non Goals&lt;/h2>
&lt;h2 id="api">API&lt;/h2>
&lt;ul>
&lt;li>Add &lt;code>admin&lt;/code> field in EnvoyGateway config.&lt;/li>
&lt;li>Add &lt;code>debug&lt;/code> field under &lt;code>admin&lt;/code> field.&lt;/li>
&lt;li>Add &lt;code>enable&lt;/code>, &lt;code>port&lt;/code> and &lt;code>host&lt;/code> under &lt;code>address&lt;/code> field.&lt;/li>
&lt;/ul>
&lt;p>Here is an example configuration&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">gateway&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;gateway.envoyproxy.io/gatewayclass-controller&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">provider&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Kubernetes&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">admin&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">debug&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">address&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">8899&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">host&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;127.0.0.1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Add Pprof support in Envoy Gateway</title><link>http://gateway.xunzhuo.cafe/docs/v0.5.0/design/pprof/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.5.0/design/pprof/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Envoy Gateway exposes endpoints at &lt;code>localhost:8899/debug/pprof&lt;/code> to run Golang profiles to aid in live debugging. The endpoints are equivalent to those found in the http/pprof package. &lt;code>/debug/pprof/&lt;/code> returns an HTML page listing the available profiles.&lt;/p>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;ul>
&lt;li>Add Debug Pprof support to Envoy Gateway control plane.&lt;/li>
&lt;li>Define an API to allow Envoy Gateway to custom debug server configuration.&lt;/li>
&lt;/ul>
&lt;p>The following are the different types of profiles end-user can run:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>PROFILE&lt;/th>
&lt;th>FUNCTION&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>/debug/pprof/allocs&lt;/td>
&lt;td>Returns a sampling of all past memory allocations.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/block&lt;/td>
&lt;td>Returns stack traces of goroutines that led to blocking on synchronization primitives.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/cmdline&lt;/td>
&lt;td>Returns the command line that was invoked by the current program.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/goroutine&lt;/td>
&lt;td>Returns stack traces of all current goroutines.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/heap&lt;/td>
&lt;td>Returns a sampling of memory allocations of live objects.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/mutex&lt;/td>
&lt;td>Returns stack traces of goroutines holding contended mutexes.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/profile&lt;/td>
&lt;td>Returns pprof-formatted cpu profile. You can specify the duration using the seconds GET parameter. The default duration is 30 seconds.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/symbol&lt;/td>
&lt;td>Returns the program counters listed in the request.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/threadcreate&lt;/td>
&lt;td>Returns stack traces that led to creation of new OS threads.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/debug/pprof/trace&lt;/td>
&lt;td>Returns the execution trace in binary form. You can specify the duration using the seconds GET parameter. The default duration is 1 second.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="non-goals">Non Goals&lt;/h2>
&lt;h2 id="api">API&lt;/h2>
&lt;ul>
&lt;li>Add &lt;code>admin&lt;/code> field in EnvoyGateway config.&lt;/li>
&lt;li>Add &lt;code>debug&lt;/code> field under &lt;code>admin&lt;/code> field.&lt;/li>
&lt;li>Add &lt;code>enable&lt;/code>, &lt;code>port&lt;/code> and &lt;code>host&lt;/code> under &lt;code>address&lt;/code> field.&lt;/li>
&lt;/ul>
&lt;p>Here is an example configuration&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">gateway&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;gateway.envoyproxy.io/gatewayclass-controller&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">provider&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Kubernetes&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">admin&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">debug&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">address&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">8899&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">host&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;127.0.0.1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Bootstrap Design</title><link>http://gateway.xunzhuo.cafe/docs/latest/design/bootstrap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/latest/design/bootstrap/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>&lt;a href="https://github.com/envoyproxy/gateway/issues/31">Issue 31&lt;/a> specifies the need for allowing advanced users to specify their custom
Envoy Bootstrap configuration rather than using the default Bootstrap configuration
defined in Envoy Gateway. This allows advanced users to extend Envoy Gateway and
support their custom use cases such setting up tracing and stats configuration
that is not supported by Envoy Gateway.&lt;/p>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;ul>
&lt;li>Define an API field to allow a user to specify a custom Bootstrap&lt;/li>
&lt;li>Provide tooling to allow the user to generate the default Bootstrap configuration
as well as validate their custom Bootstrap.&lt;/li>
&lt;/ul>
&lt;h2 id="non-goals">Non Goals&lt;/h2>
&lt;ul>
&lt;li>Allow user to configure only a section of the Bootstrap&lt;/li>
&lt;/ul>
&lt;h2 id="api">API&lt;/h2>
&lt;p>Leverage the existing &lt;a href="https://gateway.envoyproxy.io/latest/api/config_types.html#envoyproxy">EnvoyProxy&lt;/a> resource which can be attached to the &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.GatewayClass">GatewayClass&lt;/a> using
the &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.ParametersReference">parametersRef&lt;/a> field, and define a &lt;code>Bootstrap&lt;/code> field within the resource. If this field is set,
the value is used as the Bootstrap configuration for all managed Envoy Proxies created by Envoy Gateway.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxySpec defines the desired state of EnvoyProxy.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxySpec&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">......&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Bootstrap defines the Envoy Bootstrap as a YAML string.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Visit https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/bootstrap/v3/bootstrap.proto#envoy-v3-api-msg-config-bootstrap-v3-bootstrap
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// to learn more about the syntax.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// If set, this is the Bootstrap configuration used for the managed Envoy Proxy fleet instead of the default Bootstrap configuration
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// set by Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Some fields within the Bootstrap that are required to communicate with the xDS Server (Envoy Gateway) and receive xDS resources
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// from it are not configurable and will result in the `EnvoyProxy` resource being rejected.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Backward compatibility across minor versions is not guaranteed.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// We strongly recommend using `egctl x translate` to generate a `EnvoyProxy` resource with the `Bootstrap` field set to the default
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Bootstrap configuration used. You can edit this configuration, and rerun `egctl x translate` to ensure there are no validation errors.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Bootstrap&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#204a87;font-weight:bold">string&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;bootstrap,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="tooling">Tooling&lt;/h2>
&lt;p>A CLI tool &lt;code>egctl x translate&lt;/code> will be provided to the user to help generate a working Bootstrap configuration.
Here is an example where a user inputs a &lt;code>GatewayClass&lt;/code> and the CLI generates the &lt;code>EnvoyProxy&lt;/code> resource with the &lt;code>Bootstrap&lt;/code> field populated.&lt;/p>
&lt;pre tabindex="0">&lt;code>cat &amp;lt;&amp;lt;EOF | egctl x translate --from gateway-api --to gateway-api -f -
apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
name: eg
spec:
controllerName: gateway.envoyproxy.io/gatewayclass-controller
---
EOF
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
name: eg
spec:
controllerName: gateway.envoyproxy.io/gatewayclass-controller
parametersRef:
group: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
name: with-bootstrap-config
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
name: with-bootstrap-config
spec:
bootstrap: |
admin:
access_log:
- name: envoy.access_loggers.file
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
path: /dev/null
address:
socket_address:
address: 127.0.0.1
port_value: 19000
dynamic_resources:
cds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
lds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
static_resources:
clusters:
- connect_timeout: 1s
load_assignment:
cluster_name: xds_cluster
endpoints:
- lb_endpoints:
- endpoint:
address:
socket_address:
address: envoy-gateway
port_value: 18000
typed_extension_protocol_options:
&amp;#34;envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;:
&amp;#34;@type&amp;#34;: &amp;#34;type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;
&amp;#34;explicit_http_config&amp;#34;:
&amp;#34;http2_protocol_options&amp;#34;: {}
name: xds_cluster
type: STRICT_DNS
transport_socket:
name: envoy.transport_sockets.tls
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
common_tls_context:
tls_params:
tls_maximum_protocol_version: TLSv1_3
tls_certificate_sds_secret_configs:
- name: xds_certificate
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-certificate.json&amp;#34;
resource_api_version: V3
validation_context_sds_secret_config:
name: xds_trusted_ca
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-trusted-ca.json&amp;#34;
resource_api_version: V3
layered_runtime:
layers:
- name: runtime-0
rtds_layer:
rtds_config:
resource_api_version: V3
api_config_source:
transport_api_version: V3
api_type: DELTA_GRPC
grpc_services:
envoy_grpc:
cluster_name: xds_cluster
name: runtime-0
&lt;/code>&lt;/pre>&lt;p>The user can now modify the output, for their use case. Lets say for this example, the user wants to change the admin server port
from &lt;code>19000&lt;/code> to &lt;code>18000&lt;/code>, they can do so by editing the previous output and running &lt;code>egctl x translate&lt;/code> again to see if there any validation
errors. Validation errors should be surfaced in the Status subresource. The internal validator will ensure that the Bootstrap string can be
unmarshalled into the Bootstrap object as well as ensure the user can override certain fields within the Bootstrap configuration such as the
&lt;code>address&lt;/code> and tls context within the &lt;code>xds_cluster&lt;/code> which are essential for xDS communication between Envoy Gateway and Envoy Proxy.&lt;/p>
&lt;pre tabindex="0">&lt;code>cat &amp;lt;&amp;lt;EOF | egctl x translate --from gateway-api --to gateway-api -f -
apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
name: eg
spec:
controllerName: gateway.envoyproxy.io/gatewayclass-controller
parametersRef:
group: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
name: with-bootstrap-config
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
name: with-bootstrap-config
spec:
bootstrap: |
admin:
access_log:
- name: envoy.access_loggers.file
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
path: /dev/null
address:
socket_address:
address: 127.0.0.1
port_value: 18000
dynamic_resources:
cds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
lds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
static_resources:
clusters:
- connect_timeout: 1s
load_assignment:
cluster_name: xds_cluster
endpoints:
- lb_endpoints:
- endpoint:
address:
socket_address:
address: envoy-gateway
port_value: 18000
typed_extension_protocol_options:
&amp;#34;envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;:
&amp;#34;@type&amp;#34;: &amp;#34;type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;
&amp;#34;explicit_http_config&amp;#34;:
&amp;#34;http2_protocol_options&amp;#34;: {}
name: xds_cluster
type: STRICT_DNS
transport_socket:
name: envoy.transport_sockets.tls
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
common_tls_context:
tls_params:
tls_maximum_protocol_version: TLSv1_3
tls_certificate_sds_secret_configs:
- name: xds_certificate
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-certificate.json&amp;#34;
resource_api_version: V3
validation_context_sds_secret_config:
name: xds_trusted_ca
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-trusted-ca.json&amp;#34;
resource_api_version: V3
layered_runtime:
layers:
- name: runtime-0
rtds_layer:
rtds_config:
resource_api_version: V3
api_config_source:
transport_api_version: V3
api_type: DELTA_GRPC
grpc_services:
envoy_grpc:
cluster_name: xds_cluster
name: runtime-0
EOF
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
name: eg
spec:
controllerName: gateway.envoyproxy.io/gatewayclass-controller
parametersRef:
group: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
name: with-bootstrap-config
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
name: with-bootstrap-config
spec:
bootstrap: |
admin:
access_log:
- name: envoy.access_loggers.file
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
path: /dev/null
address:
socket_address:
address: 127.0.0.1
port_value: 18000
dynamic_resources:
cds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
lds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
static_resources:
clusters:
- connect_timeout: 1s
load_assignment:
cluster_name: xds_cluster
endpoints:
- lb_endpoints:
- endpoint:
address:
socket_address:
address: envoy-gateway
port_value: 18000
typed_extension_protocol_options:
&amp;#34;envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;:
&amp;#34;@type&amp;#34;: &amp;#34;type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;
&amp;#34;explicit_http_config&amp;#34;:
&amp;#34;http2_protocol_options&amp;#34;: {}
name: xds_cluster
type: STRICT_DNS
transport_socket:
name: envoy.transport_sockets.tls
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
common_tls_context:
tls_params:
tls_maximum_protocol_version: TLSv1_3
tls_certificate_sds_secret_configs:
- name: xds_certificate
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-certificate.json&amp;#34;
resource_api_version: V3
validation_context_sds_secret_config:
name: xds_trusted_ca
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-trusted-ca.json&amp;#34;
resource_api_version: V3
layered_runtime:
layers:
- name: runtime-0
rtds_layer:
rtds_config:
resource_api_version: V3
api_config_source:
transport_api_version: V3
api_type: DELTA_GRPC
grpc_services:
envoy_grpc:
cluster_name: xds_cluster
name: runtime-0
&lt;/code>&lt;/pre></description></item><item><title>Docs: Bootstrap Design</title><link>http://gateway.xunzhuo.cafe/docs/v0.4.0/design/bootstrap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.4.0/design/bootstrap/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>&lt;a href="https://github.com/envoyproxy/gateway/issues/31">Issue 31&lt;/a> specifies the need for allowing advanced users to specify their custom
Envoy Bootstrap configuration rather than using the default Bootstrap configuration
defined in Envoy Gateway. This allows advanced users to extend Envoy Gateway and
support their custom use cases such setting up tracing and stats configuration
that is not supported by Envoy Gateway.&lt;/p>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;ul>
&lt;li>Define an API field to allow a user to specify a custom Bootstrap&lt;/li>
&lt;li>Provide tooling to allow the user to generate the default Bootstrap configuration
as well as validate their custom Bootstrap.&lt;/li>
&lt;/ul>
&lt;h2 id="non-goals">Non Goals&lt;/h2>
&lt;ul>
&lt;li>Allow user to configure only a section of the Bootstrap&lt;/li>
&lt;/ul>
&lt;h2 id="api">API&lt;/h2>
&lt;p>Leverage the existing &lt;a href="https://gateway.envoyproxy.io/latest/api/config_types.html#envoyproxy">EnvoyProxy&lt;/a> resource which can be attached to the &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.GatewayClass">GatewayClass&lt;/a> using
the &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.ParametersReference">parametersRef&lt;/a> field, and define a &lt;code>Bootstrap&lt;/code> field within the resource. If this field is set,
the value is used as the Bootstrap configuration for all managed Envoy Proxies created by Envoy Gateway.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxySpec defines the desired state of EnvoyProxy.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxySpec&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">......&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Bootstrap defines the Envoy Bootstrap as a YAML string.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Visit https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/bootstrap/v3/bootstrap.proto#envoy-v3-api-msg-config-bootstrap-v3-bootstrap
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// to learn more about the syntax.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// If set, this is the Bootstrap configuration used for the managed Envoy Proxy fleet instead of the default Bootstrap configuration
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// set by Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Some fields within the Bootstrap that are required to communicate with the xDS Server (Envoy Gateway) and receive xDS resources
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// from it are not configurable and will result in the `EnvoyProxy` resource being rejected.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Backward compatibility across minor versions is not guaranteed.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// We strongly recommend using `egctl x translate` to generate a `EnvoyProxy` resource with the `Bootstrap` field set to the default
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Bootstrap configuration used. You can edit this configuration, and rerun `egctl x translate` to ensure there are no validation errors.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Bootstrap&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#204a87;font-weight:bold">string&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;bootstrap,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="tooling">Tooling&lt;/h2>
&lt;p>A CLI tool &lt;code>egctl x translate&lt;/code> will be provided to the user to help generate a working Bootstrap configuration.
Here is an example where a user inputs a &lt;code>GatewayClass&lt;/code> and the CLI generates the &lt;code>EnvoyProxy&lt;/code> resource with the &lt;code>Bootstrap&lt;/code> field populated.&lt;/p>
&lt;pre tabindex="0">&lt;code>cat &amp;lt;&amp;lt;EOF | egctl x translate --from gateway-api --to gateway-api -f -
apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
name: eg
spec:
controllerName: gateway.envoyproxy.io/gatewayclass-controller
---
EOF
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
name: eg
spec:
controllerName: gateway.envoyproxy.io/gatewayclass-controller
parametersRef:
group: config.gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
name: with-bootstrap-config
---
apiVersion: config.gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
name: with-bootstrap-config
spec:
bootstrap: |
admin:
access_log:
- name: envoy.access_loggers.file
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
path: /dev/null
address:
socket_address:
address: 127.0.0.1
port_value: 19000
dynamic_resources:
cds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
lds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
static_resources:
clusters:
- connect_timeout: 1s
load_assignment:
cluster_name: xds_cluster
endpoints:
- lb_endpoints:
- endpoint:
address:
socket_address:
address: envoy-gateway
port_value: 18000
typed_extension_protocol_options:
&amp;#34;envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;:
&amp;#34;@type&amp;#34;: &amp;#34;type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;
&amp;#34;explicit_http_config&amp;#34;:
&amp;#34;http2_protocol_options&amp;#34;: {}
name: xds_cluster
type: STRICT_DNS
transport_socket:
name: envoy.transport_sockets.tls
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
common_tls_context:
tls_params:
tls_maximum_protocol_version: TLSv1_3
tls_certificate_sds_secret_configs:
- name: xds_certificate
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-certificate.json&amp;#34;
resource_api_version: V3
validation_context_sds_secret_config:
name: xds_trusted_ca
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-trusted-ca.json&amp;#34;
resource_api_version: V3
layered_runtime:
layers:
- name: runtime-0
rtds_layer:
rtds_config:
resource_api_version: V3
api_config_source:
transport_api_version: V3
api_type: DELTA_GRPC
grpc_services:
envoy_grpc:
cluster_name: xds_cluster
name: runtime-0
&lt;/code>&lt;/pre>&lt;p>The user can now modify the output, for their use case. Lets say for this example, the user wants to change the admin server port
from &lt;code>19000&lt;/code> to &lt;code>18000&lt;/code>, they can do so by editing the previous output and running &lt;code>egctl x translate&lt;/code> again to see if there any validation
errors. Validation errors should be surfaced in the Status subresource. The internal validator will ensure that the Bootstrap string can be
unmarshalled into the Bootstrap object as well as ensure the user can override certain fields within the Bootstrap configuration such as the
&lt;code>address&lt;/code> and tls context within the &lt;code>xds_cluster&lt;/code> which are essential for xDS communication between Envoy Gateway and Envoy Proxy.&lt;/p>
&lt;pre tabindex="0">&lt;code>cat &amp;lt;&amp;lt;EOF | egctl x translate --from gateway-api --to gateway-api -f -
apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
name: eg
spec:
controllerName: gateway.envoyproxy.io/gatewayclass-controller
parametersRef:
group: config.gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
name: with-bootstrap-config
---
apiVersion: config.gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
name: with-bootstrap-config
spec:
bootstrap: |
admin:
access_log:
- name: envoy.access_loggers.file
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
path: /dev/null
address:
socket_address:
address: 127.0.0.1
port_value: 18000
dynamic_resources:
cds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
lds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
static_resources:
clusters:
- connect_timeout: 1s
load_assignment:
cluster_name: xds_cluster
endpoints:
- lb_endpoints:
- endpoint:
address:
socket_address:
address: envoy-gateway
port_value: 18000
typed_extension_protocol_options:
&amp;#34;envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;:
&amp;#34;@type&amp;#34;: &amp;#34;type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;
&amp;#34;explicit_http_config&amp;#34;:
&amp;#34;http2_protocol_options&amp;#34;: {}
name: xds_cluster
type: STRICT_DNS
transport_socket:
name: envoy.transport_sockets.tls
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
common_tls_context:
tls_params:
tls_maximum_protocol_version: TLSv1_3
tls_certificate_sds_secret_configs:
- name: xds_certificate
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-certificate.json&amp;#34;
resource_api_version: V3
validation_context_sds_secret_config:
name: xds_trusted_ca
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-trusted-ca.json&amp;#34;
resource_api_version: V3
layered_runtime:
layers:
- name: runtime-0
rtds_layer:
rtds_config:
resource_api_version: V3
api_config_source:
transport_api_version: V3
api_type: DELTA_GRPC
grpc_services:
envoy_grpc:
cluster_name: xds_cluster
name: runtime-0
EOF
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
name: eg
spec:
controllerName: gateway.envoyproxy.io/gatewayclass-controller
parametersRef:
group: config.gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
name: with-bootstrap-config
---
apiVersion: config.gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
name: with-bootstrap-config
spec:
bootstrap: |
admin:
access_log:
- name: envoy.access_loggers.file
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
path: /dev/null
address:
socket_address:
address: 127.0.0.1
port_value: 18000
dynamic_resources:
cds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
lds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
static_resources:
clusters:
- connect_timeout: 1s
load_assignment:
cluster_name: xds_cluster
endpoints:
- lb_endpoints:
- endpoint:
address:
socket_address:
address: envoy-gateway
port_value: 18000
typed_extension_protocol_options:
&amp;#34;envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;:
&amp;#34;@type&amp;#34;: &amp;#34;type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;
&amp;#34;explicit_http_config&amp;#34;:
&amp;#34;http2_protocol_options&amp;#34;: {}
name: xds_cluster
type: STRICT_DNS
transport_socket:
name: envoy.transport_sockets.tls
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
common_tls_context:
tls_params:
tls_maximum_protocol_version: TLSv1_3
tls_certificate_sds_secret_configs:
- name: xds_certificate
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-certificate.json&amp;#34;
resource_api_version: V3
validation_context_sds_secret_config:
name: xds_trusted_ca
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-trusted-ca.json&amp;#34;
resource_api_version: V3
layered_runtime:
layers:
- name: runtime-0
rtds_layer:
rtds_config:
resource_api_version: V3
api_config_source:
transport_api_version: V3
api_type: DELTA_GRPC
grpc_services:
envoy_grpc:
cluster_name: xds_cluster
name: runtime-0
&lt;/code>&lt;/pre></description></item><item><title>Docs: Bootstrap Design</title><link>http://gateway.xunzhuo.cafe/docs/v0.5.0/design/bootstrap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.5.0/design/bootstrap/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>&lt;a href="https://github.com/envoyproxy/gateway/issues/31">Issue 31&lt;/a> specifies the need for allowing advanced users to specify their custom
Envoy Bootstrap configuration rather than using the default Bootstrap configuration
defined in Envoy Gateway. This allows advanced users to extend Envoy Gateway and
support their custom use cases such setting up tracing and stats configuration
that is not supported by Envoy Gateway.&lt;/p>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;ul>
&lt;li>Define an API field to allow a user to specify a custom Bootstrap&lt;/li>
&lt;li>Provide tooling to allow the user to generate the default Bootstrap configuration
as well as validate their custom Bootstrap.&lt;/li>
&lt;/ul>
&lt;h2 id="non-goals">Non Goals&lt;/h2>
&lt;ul>
&lt;li>Allow user to configure only a section of the Bootstrap&lt;/li>
&lt;/ul>
&lt;h2 id="api">API&lt;/h2>
&lt;p>Leverage the existing &lt;a href="https://gateway.envoyproxy.io/latest/api/config_types.html#envoyproxy">EnvoyProxy&lt;/a> resource which can be attached to the &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.GatewayClass">GatewayClass&lt;/a> using
the &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.ParametersReference">parametersRef&lt;/a> field, and define a &lt;code>Bootstrap&lt;/code> field within the resource. If this field is set,
the value is used as the Bootstrap configuration for all managed Envoy Proxies created by Envoy Gateway.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxySpec defines the desired state of EnvoyProxy.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxySpec&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">......&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Bootstrap defines the Envoy Bootstrap as a YAML string.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Visit https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/bootstrap/v3/bootstrap.proto#envoy-v3-api-msg-config-bootstrap-v3-bootstrap
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// to learn more about the syntax.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// If set, this is the Bootstrap configuration used for the managed Envoy Proxy fleet instead of the default Bootstrap configuration
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// set by Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Some fields within the Bootstrap that are required to communicate with the xDS Server (Envoy Gateway) and receive xDS resources
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// from it are not configurable and will result in the `EnvoyProxy` resource being rejected.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Backward compatibility across minor versions is not guaranteed.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// We strongly recommend using `egctl x translate` to generate a `EnvoyProxy` resource with the `Bootstrap` field set to the default
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Bootstrap configuration used. You can edit this configuration, and rerun `egctl x translate` to ensure there are no validation errors.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Bootstrap&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#204a87;font-weight:bold">string&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;bootstrap,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="tooling">Tooling&lt;/h2>
&lt;p>A CLI tool &lt;code>egctl x translate&lt;/code> will be provided to the user to help generate a working Bootstrap configuration.
Here is an example where a user inputs a &lt;code>GatewayClass&lt;/code> and the CLI generates the &lt;code>EnvoyProxy&lt;/code> resource with the &lt;code>Bootstrap&lt;/code> field populated.&lt;/p>
&lt;pre tabindex="0">&lt;code>cat &amp;lt;&amp;lt;EOF | egctl x translate --from gateway-api --to gateway-api -f -
apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
name: eg
spec:
controllerName: gateway.envoyproxy.io/gatewayclass-controller
---
EOF
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
name: eg
spec:
controllerName: gateway.envoyproxy.io/gatewayclass-controller
parametersRef:
group: config.gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
name: with-bootstrap-config
---
apiVersion: config.gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
name: with-bootstrap-config
spec:
bootstrap: |
admin:
access_log:
- name: envoy.access_loggers.file
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
path: /dev/null
address:
socket_address:
address: 127.0.0.1
port_value: 19000
dynamic_resources:
cds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
lds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
static_resources:
clusters:
- connect_timeout: 1s
load_assignment:
cluster_name: xds_cluster
endpoints:
- lb_endpoints:
- endpoint:
address:
socket_address:
address: envoy-gateway
port_value: 18000
typed_extension_protocol_options:
&amp;#34;envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;:
&amp;#34;@type&amp;#34;: &amp;#34;type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;
&amp;#34;explicit_http_config&amp;#34;:
&amp;#34;http2_protocol_options&amp;#34;: {}
name: xds_cluster
type: STRICT_DNS
transport_socket:
name: envoy.transport_sockets.tls
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
common_tls_context:
tls_params:
tls_maximum_protocol_version: TLSv1_3
tls_certificate_sds_secret_configs:
- name: xds_certificate
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-certificate.json&amp;#34;
resource_api_version: V3
validation_context_sds_secret_config:
name: xds_trusted_ca
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-trusted-ca.json&amp;#34;
resource_api_version: V3
layered_runtime:
layers:
- name: runtime-0
rtds_layer:
rtds_config:
resource_api_version: V3
api_config_source:
transport_api_version: V3
api_type: DELTA_GRPC
grpc_services:
envoy_grpc:
cluster_name: xds_cluster
name: runtime-0
&lt;/code>&lt;/pre>&lt;p>The user can now modify the output, for their use case. Lets say for this example, the user wants to change the admin server port
from &lt;code>19000&lt;/code> to &lt;code>18000&lt;/code>, they can do so by editing the previous output and running &lt;code>egctl x translate&lt;/code> again to see if there any validation
errors. Validation errors should be surfaced in the Status subresource. The internal validator will ensure that the Bootstrap string can be
unmarshalled into the Bootstrap object as well as ensure the user can override certain fields within the Bootstrap configuration such as the
&lt;code>address&lt;/code> and tls context within the &lt;code>xds_cluster&lt;/code> which are essential for xDS communication between Envoy Gateway and Envoy Proxy.&lt;/p>
&lt;pre tabindex="0">&lt;code>cat &amp;lt;&amp;lt;EOF | egctl x translate --from gateway-api --to gateway-api -f -
apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
name: eg
spec:
controllerName: gateway.envoyproxy.io/gatewayclass-controller
parametersRef:
group: config.gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
name: with-bootstrap-config
---
apiVersion: config.gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
name: with-bootstrap-config
spec:
bootstrap: |
admin:
access_log:
- name: envoy.access_loggers.file
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
path: /dev/null
address:
socket_address:
address: 127.0.0.1
port_value: 18000
dynamic_resources:
cds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
lds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
static_resources:
clusters:
- connect_timeout: 1s
load_assignment:
cluster_name: xds_cluster
endpoints:
- lb_endpoints:
- endpoint:
address:
socket_address:
address: envoy-gateway
port_value: 18000
typed_extension_protocol_options:
&amp;#34;envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;:
&amp;#34;@type&amp;#34;: &amp;#34;type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;
&amp;#34;explicit_http_config&amp;#34;:
&amp;#34;http2_protocol_options&amp;#34;: {}
name: xds_cluster
type: STRICT_DNS
transport_socket:
name: envoy.transport_sockets.tls
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
common_tls_context:
tls_params:
tls_maximum_protocol_version: TLSv1_3
tls_certificate_sds_secret_configs:
- name: xds_certificate
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-certificate.json&amp;#34;
resource_api_version: V3
validation_context_sds_secret_config:
name: xds_trusted_ca
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-trusted-ca.json&amp;#34;
resource_api_version: V3
layered_runtime:
layers:
- name: runtime-0
rtds_layer:
rtds_config:
resource_api_version: V3
api_config_source:
transport_api_version: V3
api_type: DELTA_GRPC
grpc_services:
envoy_grpc:
cluster_name: xds_cluster
name: runtime-0
EOF
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
name: eg
spec:
controllerName: gateway.envoyproxy.io/gatewayclass-controller
parametersRef:
group: config.gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
name: with-bootstrap-config
---
apiVersion: config.gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
name: with-bootstrap-config
spec:
bootstrap: |
admin:
access_log:
- name: envoy.access_loggers.file
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
path: /dev/null
address:
socket_address:
address: 127.0.0.1
port_value: 18000
dynamic_resources:
cds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
lds_config:
resource_api_version: V3
api_config_source:
api_type: DELTA_GRPC
transport_api_version: V3
grpc_services:
- envoy_grpc:
cluster_name: xds_cluster
set_node_on_first_message_only: true
static_resources:
clusters:
- connect_timeout: 1s
load_assignment:
cluster_name: xds_cluster
endpoints:
- lb_endpoints:
- endpoint:
address:
socket_address:
address: envoy-gateway
port_value: 18000
typed_extension_protocol_options:
&amp;#34;envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;:
&amp;#34;@type&amp;#34;: &amp;#34;type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;
&amp;#34;explicit_http_config&amp;#34;:
&amp;#34;http2_protocol_options&amp;#34;: {}
name: xds_cluster
type: STRICT_DNS
transport_socket:
name: envoy.transport_sockets.tls
typed_config:
&amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
common_tls_context:
tls_params:
tls_maximum_protocol_version: TLSv1_3
tls_certificate_sds_secret_configs:
- name: xds_certificate
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-certificate.json&amp;#34;
resource_api_version: V3
validation_context_sds_secret_config:
name: xds_trusted_ca
sds_config:
path_config_source:
path: &amp;#34;/sds/xds-trusted-ca.json&amp;#34;
resource_api_version: V3
layered_runtime:
layers:
- name: runtime-0
rtds_layer:
rtds_config:
resource_api_version: V3
api_config_source:
transport_api_version: V3
api_type: DELTA_GRPC
grpc_services:
envoy_grpc:
cluster_name: xds_cluster
name: runtime-0
&lt;/code>&lt;/pre></description></item><item><title>Docs: ClientTrafficPolicy</title><link>http://gateway.xunzhuo.cafe/docs/latest/design/client-traffic-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/latest/design/client-traffic-policy/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This design document introduces the &lt;code>ClientTrafficPolicy&lt;/code> API allowing system administrators to configure
the behavior for how the Envoy Proxy server behaves with downstream clients.&lt;/p>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;ul>
&lt;li>Add an API definition to hold settings for configuring behavior of the connection between the downstream
client and Envoy Proxy listener.&lt;/li>
&lt;/ul>
&lt;h2 id="non-goals">Non Goals&lt;/h2>
&lt;ul>
&lt;li>Define the API configuration fields in this API.&lt;/li>
&lt;/ul>
&lt;h2 id="implementation">Implementation&lt;/h2>
&lt;p>&lt;code>ClientTrafficPolicy&lt;/code> is a &lt;a href="https://gateway-api.sigs.k8s.io/references/policy-attachment/#direct-policy-attachment">Direct Policy Attachment&lt;/a> type API that can be used to extend &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a>
to define configuration that affect the connection between the downstream client and Envoy Proxy listener.&lt;/p>
&lt;h3 id="example">Example&lt;/h3>
&lt;p>Here is an example highlighting how a user can configure this API.&lt;/p>
&lt;pre tabindex="0">&lt;code>apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
name: eg
spec:
controllerName: gateway.envoyproxy.io/gatewayclass-controller
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
name: eg
namespace: default
spec:
gatewayClassName: eg
listeners:
- name: http
protocol: HTTP
port: 80
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
name: backend
namespace: default
spec:
parentRefs:
- name: eg
hostnames:
- &amp;#34;www.example.com&amp;#34;
rules:
- backendRefs:
- group: &amp;#34;&amp;#34;
kind: Service
name: backend
port: 3000
weight: 1
matches:
- path:
type: PathPrefix
value: /
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: ClientTrafficPolicy
metadata:
name: enable-proxy-protocol-policy
namespace: default
spec:
targetRef:
group: gateway.networking.k8s.io
kind: Gateway
name: eg
namespace: default
enableProxyProtocol: true
&lt;/code>&lt;/pre>&lt;h2 id="features--api-fields">Features / API Fields&lt;/h2>
&lt;p>Here is a list of features that can be included in this API&lt;/p>
&lt;ul>
&lt;li>Downstream ProxyProtocol&lt;/li>
&lt;li>Downstream Keep Alives&lt;/li>
&lt;li>IP Blocking&lt;/li>
&lt;li>Downstream HTTP3&lt;/li>
&lt;/ul>
&lt;h2 id="design-decisions">Design Decisions&lt;/h2>
&lt;ul>
&lt;li>This API will only support a single &lt;code>targetRef&lt;/code> and can bind to only a &lt;code>Gateway&lt;/code> resource.&lt;/li>
&lt;li>This API resource MUST be part of same namespace as the &lt;code>Gateway&lt;/code> resource&lt;/li>
&lt;li>There can be only be ONE policy resource attached to a specific &lt;code>Listener&lt;/code> (section) within a &lt;code>Gateway&lt;/code>&lt;/li>
&lt;li>If the policy targets a resource but cannot attach to it, this information should be reflected
in the Policy Status field using the &lt;code>Conflicted=True&lt;/code> condition.&lt;/li>
&lt;li>If multiple polices target the same resource, the oldest resource (based on creation timestamp) will
attach to the Gateway Listeners, the others will not.&lt;/li>
&lt;li>If Policy A has a &lt;code>targetRef&lt;/code> that includes a &lt;code>sectionName&lt;/code> i.e.
it targets a specific Listener within a &lt;code>Gateway&lt;/code> and Policy B has a &lt;code>targetRef&lt;/code> that targets the same
entire Gateway then
&lt;ul>
&lt;li>Policy A will be applied/attached to the specific Listener defined in the &lt;code>targetRef.SectionName&lt;/code>&lt;/li>
&lt;li>Policy B will be applied to the remaining Listeners within the Gateway. Policy B will have an additional
status condition &lt;code>Overridden=True&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="alternatives">Alternatives&lt;/h2>
&lt;ul>
&lt;li>The project can indefintely wait for these configuration parameters to be part of the &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a>.&lt;/li>
&lt;/ul></description></item><item><title>Docs: Community Code of Conduct</title><link>http://gateway.xunzhuo.cafe/docs/latest/dev/code_of_conduct/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/latest/dev/code_of_conduct/</guid><description>
&lt;p>Gateway follows the &lt;a href="https://github.com/cncf/foundation/blob/main/code-of-conduct.md">CNCF Code of Conduct&lt;/a>.&lt;/p></description></item><item><title>Docs: Community Code of Conduct</title><link>http://gateway.xunzhuo.cafe/docs/v0.2.0/dev/code_of_conduct/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.2.0/dev/code_of_conduct/</guid><description>
&lt;p>Gateway follows the &lt;a href="https://github.com/cncf/foundation/blob/main/code-of-conduct.md">CNCF Code of Conduct&lt;/a>.&lt;/p></description></item><item><title>Docs: Community Code of Conduct</title><link>http://gateway.xunzhuo.cafe/docs/v0.3.0/dev/code_of_conduct/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.3.0/dev/code_of_conduct/</guid><description>
&lt;p>Gateway follows the &lt;a href="https://github.com/cncf/foundation/blob/main/code-of-conduct.md">CNCF Code of Conduct&lt;/a>.&lt;/p></description></item><item><title>Docs: Community Code of Conduct</title><link>http://gateway.xunzhuo.cafe/docs/v0.4.0/dev/code_of_conduct/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.4.0/dev/code_of_conduct/</guid><description>
&lt;p>Gateway follows the &lt;a href="https://github.com/cncf/foundation/blob/main/code-of-conduct.md">CNCF Code of Conduct&lt;/a>.&lt;/p></description></item><item><title>Docs: Community Code of Conduct</title><link>http://gateway.xunzhuo.cafe/docs/v0.5.0/dev/code_of_conduct/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.5.0/dev/code_of_conduct/</guid><description>
&lt;p>Gateway follows the &lt;a href="https://github.com/cncf/foundation/blob/main/code-of-conduct.md">CNCF Code of Conduct&lt;/a>.&lt;/p></description></item><item><title>Docs: Config APIs</title><link>http://gateway.xunzhuo.cafe/docs/v0.3.0/api/config_types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.3.0/api/config_types/</guid><description>
&lt;h2 id="packages">Packages&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="#configgatewayenvoyproxyiov1alpha1">config.gateway.envoyproxy.io/v1alpha1&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="configgatewayenvoyproxyiov1alpha1">config.gateway.envoyproxy.io/v1alpha1&lt;/h2>
&lt;p>Package v1alpha1 contains API schema definitions for the config.gateway.envoyproxy.io
API group.&lt;/p>
&lt;h3 id="resource-types">Resource Types&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoyproxy">EnvoyProxy&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="envoygateway">EnvoyGateway&lt;/h2>
&lt;p>EnvoyGateway is the schema for the envoygateways API.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>config.gateway.envoyproxy.io/v1alpha1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>EnvoyGateway&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>EnvoyGatewaySpec&lt;/code> &lt;em>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>EnvoyGatewaySpec defines the desired state of EnvoyGateway.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayspec">EnvoyGatewaySpec&lt;/h2>
&lt;p>EnvoyGatewaySpec defines the desired state of Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>gateway&lt;/code> &lt;em>&lt;a href="#gateway">Gateway&lt;/a>&lt;/em>&lt;/td>
&lt;td>Gateway defines desired Gateway API specific configuration. If unset, default configuration parameters will apply.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>provider&lt;/code> &lt;em>&lt;a href="#provider">Provider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Provider defines the desired provider and provider-specific configuration. If unspecified, the Kubernetes provider is used with default configuration parameters.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>rateLimit&lt;/code> &lt;em>&lt;a href="#ratelimit">RateLimit&lt;/a>&lt;/em>&lt;/td>
&lt;td>RateLimit defines the configuration associated with the Rate Limit service deployed by Envoy Gateway required to implement the Global Rate limiting functionality. The specific rate limit service used here is the reference implementation in Envoy. For more details visit &lt;a href="https://github.com/envoyproxy/ratelimit">https://github.com/envoyproxy/ratelimit&lt;/a>. This configuration is unneeded for &amp;ldquo;Local&amp;rdquo; rate limiting.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoyproxy">EnvoyProxy&lt;/h2>
&lt;p>EnvoyProxy is the schema for the envoyproxies API.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>config.gateway.envoyproxy.io/v1alpha1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>EnvoyProxy&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>metadata&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#objectmeta-v1-meta">ObjectMeta&lt;/a>&lt;/em>&lt;/td>
&lt;td>Refer to Kubernetes API documentation for fields of &lt;code>metadata&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>spec&lt;/code> &lt;em>&lt;a href="#envoyproxyspec">EnvoyProxySpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>EnvoyProxySpec defines the desired state of EnvoyProxy.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoyproxyspec">EnvoyProxySpec&lt;/h2>
&lt;p>EnvoyProxySpec defines the desired state of EnvoyProxy.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxy">EnvoyProxy&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>provider&lt;/code> &lt;em>&lt;a href="#resourceprovider">ResourceProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Provider defines the desired resource provider and provider-specific configuration. If unspecified, the &amp;ldquo;Kubernetes&amp;rdquo; resource provider is used with default configuration parameters.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>logging&lt;/code> &lt;em>&lt;a href="#proxylogging">ProxyLogging&lt;/a>&lt;/em>&lt;/td>
&lt;td>Logging defines logging parameters for managed proxies. If unspecified, default settings apply. This type is not implemented until &lt;a href="https://github.com/envoyproxy/gateway/issues/280">https://github.com/envoyproxy/gateway/issues/280&lt;/a> is fixed.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="fileprovider">FileProvider&lt;/h2>
&lt;p>FileProvider defines configuration for the File provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#provider">Provider&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="gateway">Gateway&lt;/h2>
&lt;p>Gateway defines the desired Gateway API configuration of Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>controllerName&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>ControllerName defines the name of the Gateway API controller. If unspecified, defaults to &amp;ldquo;gateway.envoyproxy.io/gatewayclass-controller&amp;rdquo;. See the following for additional details: &lt;a href="https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass">https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="kubernetesdeploymentspec">KubernetesDeploymentSpec&lt;/h2>
&lt;p>KubernetesDeploymentSpec defines the desired state of the Kubernetes deployment resource.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#kubernetesresourceprovider">KubernetesResourceProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>replicas&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>Replicas is the number of desired pods. Defaults to 1.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="kubernetesprovider">KubernetesProvider&lt;/h2>
&lt;p>KubernetesProvider defines configuration for the Kubernetes provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#provider">Provider&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="kubernetesresourceprovider">KubernetesResourceProvider&lt;/h2>
&lt;p>KubernetesResourceProvider defines configuration for the Kubernetes resource provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#resourceprovider">ResourceProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>envoyDeployment&lt;/code> &lt;em>&lt;a href="#kubernetesdeploymentspec">KubernetesDeploymentSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>EnvoyDeployment defines the desired state of the Envoy deployment resource. If unspecified, default settings for the managed Envoy deployment resource are applied.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="logcomponent">LogComponent&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>LogComponent defines a component that supports a configured logging level. This type is not implemented until &lt;a href="https://github.com/envoyproxy/gateway/issues/280">https://github.com/envoyproxy/gateway/issues/280&lt;/a> is fixed.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxylogging">ProxyLogging&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="loglevel">LogLevel&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>LogLevel defines a log level for system logs. This type is not implemented until &lt;a href="https://github.com/envoyproxy/gateway/issues/280">https://github.com/envoyproxy/gateway/issues/280&lt;/a> is fixed.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxylogging">ProxyLogging&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="provider">Provider&lt;/h2>
&lt;p>Provider defines the desired configuration of a provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#providertype">ProviderType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the type of provider to use. Supported types are &amp;ldquo;Kubernetes&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kubernetes&lt;/code> &lt;em>&lt;a href="#kubernetesprovider">KubernetesProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Kubernetes defines the configuration of the Kubernetes provider. Kubernetes provides runtime configuration via the Kubernetes API.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>file&lt;/code> &lt;em>&lt;a href="#fileprovider">FileProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>File defines the configuration of the File provider. File provides runtime configuration defined by one or more files. This type is not implemented until &lt;a href="https://github.com/envoyproxy/gateway/issues/1001">https://github.com/envoyproxy/gateway/issues/1001&lt;/a> is fixed.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="providertype">ProviderType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>ProviderType defines the types of providers supported by Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#provider">Provider&lt;/a>&lt;/li>
&lt;li>&lt;a href="#resourceprovider">ResourceProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="proxylogging">ProxyLogging&lt;/h2>
&lt;p>ProxyLogging defines logging parameters for managed proxies. This type is not implemented until &lt;a href="https://github.com/envoyproxy/gateway/issues/280">https://github.com/envoyproxy/gateway/issues/280&lt;/a> is fixed.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxyspec">EnvoyProxySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>level&lt;/code> &lt;em>object (keys:&lt;a href="#logcomponent">LogComponent&lt;/a>, values:&lt;a href="#loglevel">LogLevel&lt;/a>)&lt;/em>&lt;/td>
&lt;td>Level is a map of logging level per component, where the component is the key and the log level is the value. If unspecified, defaults to &amp;ldquo;System: Info&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ratelimit">RateLimit&lt;/h2>
&lt;p>RateLimit defines the configuration associated with the Rate Limit Service used for Global Rate Limiting.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>backend&lt;/code> &lt;em>&lt;a href="#ratelimitdatabasebackend">RateLimitDatabaseBackend&lt;/a>&lt;/em>&lt;/td>
&lt;td>Backend holds the configuration associated with the database backend used by the rate limit service to store state associated with global ratelimiting.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ratelimitdatabasebackend">RateLimitDatabaseBackend&lt;/h2>
&lt;p>RateLimitDatabaseBackend defines the configuration associated with the database backend used by the rate limit service.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimit">RateLimit&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#ratelimitdatabasebackendtype">RateLimitDatabaseBackendType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the type of database backend to use. Supported types are: * Redis: Connects to a Redis database.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>redis&lt;/code> &lt;em>&lt;a href="#ratelimitredissettings">RateLimitRedisSettings&lt;/a>&lt;/em>&lt;/td>
&lt;td>Redis defines the settings needed to connect to a Redis database.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ratelimitdatabasebackendtype">RateLimitDatabaseBackendType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>RateLimitDatabaseBackendType specifies the types of database backend to be used by the rate limit service.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitdatabasebackend">RateLimitDatabaseBackend&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ratelimitredissettings">RateLimitRedisSettings&lt;/h2>
&lt;p>RateLimitRedisSettings defines the configuration for connecting to a Redis database.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitdatabasebackend">RateLimitDatabaseBackend&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>url&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>URL of the Redis Database.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="resourceprovider">ResourceProvider&lt;/h2>
&lt;p>ResourceProvider defines the desired state of a resource provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxyspec">EnvoyProxySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#providertype">ProviderType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the type of resource provider to use. A resource provider provides infrastructure resources for running the data plane, e.g. Envoy proxy, and optional auxiliary control planes. Supported types are &amp;ldquo;Kubernetes&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kubernetes&lt;/code> &lt;em>&lt;a href="#kubernetesresourceprovider">KubernetesResourceProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Kubernetes defines the desired state of the Kubernetes resource provider. Kubernetes provides infrastructure resources for running the data plane, e.g. Envoy proxy. If unspecified and type is &amp;ldquo;Kubernetes&amp;rdquo;, default settings for managed Kubernetes resources are applied.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: Config APIs</title><link>http://gateway.xunzhuo.cafe/docs/v0.4.0/api/config_types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.4.0/api/config_types/</guid><description>
&lt;h2 id="packages">Packages&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="#configgatewayenvoyproxyiov1alpha1">config.gateway.envoyproxy.io/v1alpha1&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="configgatewayenvoyproxyiov1alpha1">config.gateway.envoyproxy.io/v1alpha1&lt;/h2>
&lt;p>Package v1alpha1 contains API schema definitions for the config.gateway.envoyproxy.io
API group.&lt;/p>
&lt;h3 id="resource-types">Resource Types&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoyproxy">EnvoyProxy&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="envoygateway">EnvoyGateway&lt;/h2>
&lt;p>EnvoyGateway is the schema for the envoygateways API.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>config.gateway.envoyproxy.io/v1alpha1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>EnvoyGateway&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>EnvoyGatewaySpec&lt;/code> &lt;em>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>EnvoyGatewaySpec defines the desired state of EnvoyGateway.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayfileprovider">EnvoyGatewayFileProvider&lt;/h2>
&lt;p>EnvoyGatewayFileProvider defines configuration for the File provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayprovider">EnvoyGatewayProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="envoygatewaykubernetesprovider">EnvoyGatewayKubernetesProvider&lt;/h2>
&lt;p>EnvoyGatewayKubernetesProvider defines configuration for the Kubernetes provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayprovider">EnvoyGatewayProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>rateLimitDeployment&lt;/code> &lt;em>&lt;a href="#kubernetesdeploymentspec">KubernetesDeploymentSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>RateLimitDeployment defines the desired state of the Envoy ratelimit deployment resource. If unspecified, default settings for the managed Envoy ratelimit deployment resource are applied.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayprovider">EnvoyGatewayProvider&lt;/h2>
&lt;p>EnvoyGatewayProvider defines the desired configuration of a provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#providertype">ProviderType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the type of provider to use. Supported types are &amp;ldquo;Kubernetes&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kubernetes&lt;/code> &lt;em>&lt;a href="#envoygatewaykubernetesprovider">EnvoyGatewayKubernetesProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Kubernetes defines the configuration of the Kubernetes provider. Kubernetes provides runtime configuration via the Kubernetes API.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>file&lt;/code> &lt;em>&lt;a href="#envoygatewayfileprovider">EnvoyGatewayFileProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>File defines the configuration of the File provider. File provides runtime configuration defined by one or more files. This type is not implemented until &lt;a href="https://github.com/envoyproxy/gateway/issues/1001">https://github.com/envoyproxy/gateway/issues/1001&lt;/a> is fixed.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayspec">EnvoyGatewaySpec&lt;/h2>
&lt;p>EnvoyGatewaySpec defines the desired state of Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>gateway&lt;/code> &lt;em>&lt;a href="#gateway">Gateway&lt;/a>&lt;/em>&lt;/td>
&lt;td>Gateway defines desired Gateway API specific configuration. If unset, default configuration parameters will apply.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>provider&lt;/code> &lt;em>&lt;a href="#envoygatewayprovider">EnvoyGatewayProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Provider defines the desired provider and provider-specific configuration. If unspecified, the Kubernetes provider is used with default configuration parameters.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>rateLimit&lt;/code> &lt;em>&lt;a href="#ratelimit">RateLimit&lt;/a>&lt;/em>&lt;/td>
&lt;td>RateLimit defines the configuration associated with the Rate Limit service deployed by Envoy Gateway required to implement the Global Rate limiting functionality. The specific rate limit service used here is the reference implementation in Envoy. For more details visit &lt;a href="https://github.com/envoyproxy/ratelimit">https://github.com/envoyproxy/ratelimit&lt;/a>. This configuration is unneeded for &amp;ldquo;Local&amp;rdquo; rate limiting.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>extension&lt;/code> &lt;em>&lt;a href="#extension">Extension&lt;/a>&lt;/em>&lt;/td>
&lt;td>Extension defines an extension to register for the Envoy Gateway Control Plane.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoyproxy">EnvoyProxy&lt;/h2>
&lt;p>EnvoyProxy is the schema for the envoyproxies API.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>config.gateway.envoyproxy.io/v1alpha1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>EnvoyProxy&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>metadata&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#objectmeta-v1-meta">ObjectMeta&lt;/a>&lt;/em>&lt;/td>
&lt;td>Refer to Kubernetes API documentation for fields of &lt;code>metadata&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>spec&lt;/code> &lt;em>&lt;a href="#envoyproxyspec">EnvoyProxySpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>EnvoyProxySpec defines the desired state of EnvoyProxy.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoyproxykubernetesprovider">EnvoyProxyKubernetesProvider&lt;/h2>
&lt;p>EnvoyProxyKubernetesProvider defines configuration for the Kubernetes resource provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxyprovider">EnvoyProxyProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>envoyDeployment&lt;/code> &lt;em>&lt;a href="#kubernetesdeploymentspec">KubernetesDeploymentSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>EnvoyDeployment defines the desired state of the Envoy deployment resource. If unspecified, default settings for the managed Envoy deployment resource are applied.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>envoyService&lt;/code> &lt;em>&lt;a href="#kubernetesservicespec">KubernetesServiceSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>EnvoyService defines the desired state of the Envoy service resource. If unspecified, default settings for the managed Envoy service resource are applied.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoyproxyprovider">EnvoyProxyProvider&lt;/h2>
&lt;p>EnvoyProxyProvider defines the desired state of a resource provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxyspec">EnvoyProxySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#providertype">ProviderType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the type of resource provider to use. A resource provider provides infrastructure resources for running the data plane, e.g. Envoy proxy, and optional auxiliary control planes. Supported types are &amp;ldquo;Kubernetes&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kubernetes&lt;/code> &lt;em>&lt;a href="#envoyproxykubernetesprovider">EnvoyProxyKubernetesProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Kubernetes defines the desired state of the Kubernetes resource provider. Kubernetes provides infrastructure resources for running the data plane, e.g. Envoy proxy. If unspecified and type is &amp;ldquo;Kubernetes&amp;rdquo;, default settings for managed Kubernetes resources are applied.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoyproxyspec">EnvoyProxySpec&lt;/h2>
&lt;p>EnvoyProxySpec defines the desired state of EnvoyProxy.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxy">EnvoyProxy&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>provider&lt;/code> &lt;em>&lt;a href="#envoyproxyprovider">EnvoyProxyProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Provider defines the desired resource provider and provider-specific configuration. If unspecified, the &amp;ldquo;Kubernetes&amp;rdquo; resource provider is used with default configuration parameters.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>logging&lt;/code> &lt;em>&lt;a href="#proxylogging">ProxyLogging&lt;/a>&lt;/em>&lt;/td>
&lt;td>Logging defines logging parameters for managed proxies. If unspecified, default settings apply. This type is not implemented until &lt;a href="https://github.com/envoyproxy/gateway/issues/280">https://github.com/envoyproxy/gateway/issues/280&lt;/a> is fixed.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>bootstrap&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Bootstrap defines the Envoy Bootstrap as a YAML string. Visit &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/bootstrap/v3/bootstrap.proto#envoy-v3-api-msg-config-bootstrap-v3-bootstrap">https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/bootstrap/v3/bootstrap.proto#envoy-v3-api-msg-config-bootstrap-v3-bootstrap&lt;/a> to learn more about the syntax. If set, this is the Bootstrap configuration used for the managed Envoy Proxy fleet instead of the default Bootstrap configuration set by Envoy Gateway. Some fields within the Bootstrap that are required to communicate with the xDS Server (Envoy Gateway) and receive xDS resources from it are not configurable and will result in the &lt;code>EnvoyProxy&lt;/code> resource being rejected. Backward compatibility across minor versions is not guaranteed. We strongly recommend using &lt;code>egctl x translate&lt;/code> to generate a &lt;code>EnvoyProxy&lt;/code> resource with the &lt;code>Bootstrap&lt;/code> field set to the default Bootstrap configuration used. You can edit this configuration, and rerun &lt;code>egctl x translate&lt;/code> to ensure there are no validation errors.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="extension">Extension&lt;/h2>
&lt;p>Extension defines the configuration for registering an extension to the Envoy Gateway control plane.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>resources&lt;/code> &lt;em>&lt;a href="#groupversionkind">GroupVersionKind&lt;/a> array&lt;/em>&lt;/td>
&lt;td>Resources defines the set of K8s resources the extension will handle.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>hooks&lt;/code> &lt;em>&lt;a href="#extensionhooks">ExtensionHooks&lt;/a>&lt;/em>&lt;/td>
&lt;td>Hooks defines the set of hooks the extension supports&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code> &lt;em>&lt;a href="#extensionservice">ExtensionService&lt;/a>&lt;/em>&lt;/td>
&lt;td>Service defines the configuration of the extension service that the Envoy Gateway Control Plane will call through extension hooks.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="extensionhooks">ExtensionHooks&lt;/h2>
&lt;p>ExtensionHooks defines extension hooks across all supported runners&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#extension">Extension&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>xdsTranslator&lt;/code> &lt;em>&lt;a href="#xdstranslatorhooks">XDSTranslatorHooks&lt;/a>&lt;/em>&lt;/td>
&lt;td>XDSTranslator defines all the supported extension hooks for the xds-translator runner&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="extensionservice">ExtensionService&lt;/h2>
&lt;p>ExtensionService defines the configuration for connecting to a registered extension service.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#extension">Extension&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>host&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Host define the extension service hostname.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>port&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>Port defines the port the extension service is exposed on.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tls&lt;/code> &lt;em>&lt;a href="#extensiontls">ExtensionTLS&lt;/a>&lt;/em>&lt;/td>
&lt;td>TLS defines TLS configuration for communication between Envoy Gateway and the extension service.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="extensiontls">ExtensionTLS&lt;/h2>
&lt;p>ExtensionTLS defines the TLS configuration when connecting to an extension service&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#extensionservice">ExtensionService&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>certificateRef&lt;/code> &lt;em>&lt;a href="#secretobjectreference">SecretObjectReference&lt;/a>&lt;/em>&lt;/td>
&lt;td>CertificateRef contains a references to objects (Kubernetes objects or otherwise) that contains a TLS certificate and private keys. These certificates are used to establish a TLS handshake to the extension server.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CertificateRef can only reference a Kubernetes Secret at this time.&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="gateway">Gateway&lt;/h2>
&lt;p>Gateway defines the desired Gateway API configuration of Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>controllerName&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>ControllerName defines the name of the Gateway API controller. If unspecified, defaults to &amp;ldquo;gateway.envoyproxy.io/gatewayclass-controller&amp;rdquo;. See the following for additional details: &lt;a href="https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass">https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="groupversionkind">GroupVersionKind&lt;/h2>
&lt;p>GroupVersionKind unambiguously identifies a Kind. It can be converted to k8s.io/apimachinery/pkg/runtime/schema.GroupVersionKind&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#extension">Extension&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>group&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>version&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="kubernetescontainerspec">KubernetesContainerSpec&lt;/h2>
&lt;p>KubernetesContainerSpec defines the desired state of the Kubernetes container resource.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#kubernetesdeploymentspec">KubernetesDeploymentSpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>resources&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#resourcerequirements-v1-core">ResourceRequirements&lt;/a>&lt;/em>&lt;/td>
&lt;td>Resources required by this container. More info: &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>securityContext&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#securitycontext-v1-core">SecurityContext&lt;/a>&lt;/em>&lt;/td>
&lt;td>SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/security-context/">https://kubernetes.io/docs/tasks/configure-pod-container/security-context/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>image&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Image specifies the EnvoyProxy container image to be used, instead of the default image.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="kubernetesdeploymentspec">KubernetesDeploymentSpec&lt;/h2>
&lt;p>KubernetesDeploymentSpec defines the desired state of the Kubernetes deployment resource.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewaykubernetesprovider">EnvoyGatewayKubernetesProvider&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoyproxykubernetesprovider">EnvoyProxyKubernetesProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>replicas&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>Replicas is the number of desired pods. Defaults to 1.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>pod&lt;/code> &lt;em>&lt;a href="#kubernetespodspec">KubernetesPodSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>Pod defines the desired annotations and securityContext of container.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>container&lt;/code> &lt;em>&lt;a href="#kubernetescontainerspec">KubernetesContainerSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>Container defines the resources and securityContext of container.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="kubernetespodspec">KubernetesPodSpec&lt;/h2>
&lt;p>KubernetesPodSpec defines the desired state of the Kubernetes pod resource.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#kubernetesdeploymentspec">KubernetesDeploymentSpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>annotations&lt;/code> &lt;em>object (keys:string, values:string)&lt;/em>&lt;/td>
&lt;td>Annotations are the annotations that should be appended to the pods. By default, no pod annotations are appended.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>securityContext&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#podsecuritycontext-v1-core">PodSecurityContext&lt;/a>&lt;/em>&lt;/td>
&lt;td>SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty. See type description for default values of each field.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="kubernetesservicespec">KubernetesServiceSpec&lt;/h2>
&lt;p>KubernetesServiceSpec defines the desired state of the Kubernetes service resource.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxykubernetesprovider">EnvoyProxyKubernetesProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>annotations&lt;/code> &lt;em>object (keys:string, values:string)&lt;/em>&lt;/td>
&lt;td>Annotations that should be appended to the service. By default, no annotations are appended.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#servicetype">ServiceType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type determines how the Service is exposed. Defaults to LoadBalancer. Valid options are ClusterIP and LoadBalancer. &amp;ldquo;LoadBalancer&amp;rdquo; means a service will be exposed via an external load balancer (if the cloud provider supports it). &amp;ldquo;ClusterIP&amp;rdquo; means a service will only be accessible inside the cluster, via the cluster IP.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="logcomponent">LogComponent&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>LogComponent defines a component that supports a configured logging level. This type is not implemented until &lt;a href="https://github.com/envoyproxy/gateway/issues/280">https://github.com/envoyproxy/gateway/issues/280&lt;/a> is fixed.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxylogging">ProxyLogging&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="loglevel">LogLevel&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>LogLevel defines a log level for system logs. This type is not implemented until &lt;a href="https://github.com/envoyproxy/gateway/issues/280">https://github.com/envoyproxy/gateway/issues/280&lt;/a> is fixed.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxylogging">ProxyLogging&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="providertype">ProviderType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>ProviderType defines the types of providers supported by Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayprovider">EnvoyGatewayProvider&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoyproxyprovider">EnvoyProxyProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="proxylogging">ProxyLogging&lt;/h2>
&lt;p>ProxyLogging defines logging parameters for managed proxies. This type is not implemented until &lt;a href="https://github.com/envoyproxy/gateway/issues/280">https://github.com/envoyproxy/gateway/issues/280&lt;/a> is fixed.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxyspec">EnvoyProxySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>level&lt;/code> &lt;em>object (keys:&lt;a href="#logcomponent">LogComponent&lt;/a>, values:&lt;a href="#loglevel">LogLevel&lt;/a>)&lt;/em>&lt;/td>
&lt;td>Level is a map of logging level per component, where the component is the key and the log level is the value. If unspecified, defaults to &amp;ldquo;System: Info&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ratelimit">RateLimit&lt;/h2>
&lt;p>RateLimit defines the configuration associated with the Rate Limit Service used for Global Rate Limiting.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>backend&lt;/code> &lt;em>&lt;a href="#ratelimitdatabasebackend">RateLimitDatabaseBackend&lt;/a>&lt;/em>&lt;/td>
&lt;td>Backend holds the configuration associated with the database backend used by the rate limit service to store state associated with global ratelimiting.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ratelimitdatabasebackend">RateLimitDatabaseBackend&lt;/h2>
&lt;p>RateLimitDatabaseBackend defines the configuration associated with the database backend used by the rate limit service.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimit">RateLimit&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#ratelimitdatabasebackendtype">RateLimitDatabaseBackendType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the type of database backend to use. Supported types are: * Redis: Connects to a Redis database.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>redis&lt;/code> &lt;em>&lt;a href="#ratelimitredissettings">RateLimitRedisSettings&lt;/a>&lt;/em>&lt;/td>
&lt;td>Redis defines the settings needed to connect to a Redis database.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ratelimitdatabasebackendtype">RateLimitDatabaseBackendType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>RateLimitDatabaseBackendType specifies the types of database backend to be used by the rate limit service.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitdatabasebackend">RateLimitDatabaseBackend&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ratelimitredissettings">RateLimitRedisSettings&lt;/h2>
&lt;p>RateLimitRedisSettings defines the configuration for connecting to a Redis database.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitdatabasebackend">RateLimitDatabaseBackend&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>url&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>URL of the Redis Database.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="servicetype">ServiceType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>ServiceType string describes ingress methods for a service&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#kubernetesservicespec">KubernetesServiceSpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="xdstranslatorhook">XDSTranslatorHook&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>XDSTranslatorHook defines the types of hooks that an Envoy Gateway extension may support for the xds-translator&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#xdstranslatorhooks">XDSTranslatorHooks&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="xdstranslatorhooks">XDSTranslatorHooks&lt;/h2>
&lt;p>XDSTranslatorHooks contains all the pre and post hooks for the xds-translator runner.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#extensionhooks">ExtensionHooks&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>pre&lt;/code> &lt;em>&lt;a href="#xdstranslatorhook">XDSTranslatorHook&lt;/a> array&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>post&lt;/code> &lt;em>&lt;a href="#xdstranslatorhook">XDSTranslatorHook&lt;/a> array&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: Config APIs</title><link>http://gateway.xunzhuo.cafe/docs/v0.5.0/api/config_types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.5.0/api/config_types/</guid><description>
&lt;h2 id="packages">Packages&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="#configgatewayenvoyproxyiov1alpha1">config.gateway.envoyproxy.io/v1alpha1&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="configgatewayenvoyproxyiov1alpha1">config.gateway.envoyproxy.io/v1alpha1&lt;/h2>
&lt;p>Package v1alpha1 contains API schema definitions for the config.gateway.envoyproxy.io
API group.&lt;/p>
&lt;h3 id="resource-types">Resource Types&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoyproxy">EnvoyProxy&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="customtag">CustomTag&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxytracing">ProxyTracing&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#customtagtype">CustomTagType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type defines the type of custom tag.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>literal&lt;/code> &lt;em>&lt;a href="#literalcustomtag">LiteralCustomTag&lt;/a>&lt;/em>&lt;/td>
&lt;td>Literal adds hard-coded value to each span. It&amp;rsquo;s required when the type is &amp;ldquo;Literal&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>environment&lt;/code> &lt;em>&lt;a href="#environmentcustomtag">EnvironmentCustomTag&lt;/a>&lt;/em>&lt;/td>
&lt;td>Environment adds value from environment variable to each span. It&amp;rsquo;s required when the type is &amp;ldquo;Environment&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>requestHeader&lt;/code> &lt;em>&lt;a href="#requestheadercustomtag">RequestHeaderCustomTag&lt;/a>&lt;/em>&lt;/td>
&lt;td>RequestHeader adds value from request header to each span. It&amp;rsquo;s required when the type is &amp;ldquo;RequestHeader&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="customtagtype">CustomTagType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#customtag">CustomTag&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="environmentcustomtag">EnvironmentCustomTag&lt;/h2>
&lt;p>EnvironmentCustomTag adds value from environment variable to each span.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#customtag">CustomTag&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>name&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Name defines the name of the environment variable which to extract the value from.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>defaultValue&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>DefaultValue defines the default value to use if the environment variable is not set.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygateway">EnvoyGateway&lt;/h2>
&lt;p>EnvoyGateway is the schema for the envoygateways API.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>config.gateway.envoyproxy.io/v1alpha1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>EnvoyGateway&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>gateway&lt;/code> &lt;em>&lt;a href="#gateway">Gateway&lt;/a>&lt;/em>&lt;/td>
&lt;td>Gateway defines desired Gateway API specific configuration. If unset, default configuration parameters will apply.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>provider&lt;/code> &lt;em>&lt;a href="#envoygatewayprovider">EnvoyGatewayProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Provider defines the desired provider and provider-specific configuration. If unspecified, the Kubernetes provider is used with default configuration parameters.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>logging&lt;/code> &lt;em>&lt;a href="#envoygatewaylogging">EnvoyGatewayLogging&lt;/a>&lt;/em>&lt;/td>
&lt;td>Logging defines logging parameters for Envoy Gateway.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>admin&lt;/code> &lt;em>&lt;a href="#envoygatewayadmin">EnvoyGatewayAdmin&lt;/a>&lt;/em>&lt;/td>
&lt;td>Admin defines the desired admin related abilities. If unspecified, the Admin is used with default configuration parameters.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>rateLimit&lt;/code> &lt;em>&lt;a href="#ratelimit">RateLimit&lt;/a>&lt;/em>&lt;/td>
&lt;td>RateLimit defines the configuration associated with the Rate Limit service deployed by Envoy Gateway required to implement the Global Rate limiting functionality. The specific rate limit service used here is the reference implementation in Envoy. For more details visit &lt;a href="https://github.com/envoyproxy/ratelimit">https://github.com/envoyproxy/ratelimit&lt;/a>. This configuration is unneeded for &amp;ldquo;Local&amp;rdquo; rate limiting.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>extensionManager&lt;/code> &lt;em>&lt;a href="#extensionmanager">ExtensionManager&lt;/a>&lt;/em>&lt;/td>
&lt;td>ExtensionManager defines an extension manager to register for the Envoy Gateway Control Plane.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>extensionApis&lt;/code> &lt;em>&lt;a href="#extensionapisettings">ExtensionAPISettings&lt;/a>&lt;/em>&lt;/td>
&lt;td>ExtensionAPIs defines the settings related to specific Gateway API Extensions implemented by Envoy Gateway&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayadmin">EnvoyGatewayAdmin&lt;/h2>
&lt;p>EnvoyGatewayAdmin defines the Envoy Gateway Admin configuration.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>address&lt;/code> &lt;em>&lt;a href="#envoygatewayadminaddress">EnvoyGatewayAdminAddress&lt;/a>&lt;/em>&lt;/td>
&lt;td>Address defines the address of Envoy Gateway Admin Server.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>debug&lt;/code> &lt;em>boolean&lt;/em>&lt;/td>
&lt;td>Debug defines if enable the /debug endpoint of Envoy Gateway.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayadminaddress">EnvoyGatewayAdminAddress&lt;/h2>
&lt;p>EnvoyGatewayAdminAddress defines the Envoy Gateway Admin Address configuration.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayadmin">EnvoyGatewayAdmin&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>port&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>Port defines the port the admin server is exposed on.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>host&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Host defines the admin server hostname.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewaycustomprovider">EnvoyGatewayCustomProvider&lt;/h2>
&lt;p>EnvoyGatewayCustomProvider defines configuration for the Custom provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayprovider">EnvoyGatewayProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>resource&lt;/code> &lt;em>&lt;a href="#envoygatewayresourceprovider">EnvoyGatewayResourceProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Resource defines the desired resource provider. This provider is used to specify the provider to be used to retrieve the resource configurations such as Gateway API resources&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>infrastructure&lt;/code> &lt;em>&lt;a href="#envoygatewayinfrastructureprovider">EnvoyGatewayInfrastructureProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Infrastructure defines the desired infrastructure provider. This provider is used to specify the provider to be used to provide an environment to deploy the out resources like the Envoy Proxy data plane.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayfileresourceprovider">EnvoyGatewayFileResourceProvider&lt;/h2>
&lt;p>EnvoyGatewayFileResourceProvider defines configuration for the File Resource provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayresourceprovider">EnvoyGatewayResourceProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>paths&lt;/code> &lt;em>string array&lt;/em>&lt;/td>
&lt;td>Paths are the paths to a directory or file containing the resource configuration. Recursive sub directories are not currently supported.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayhostinfrastructureprovider">EnvoyGatewayHostInfrastructureProvider&lt;/h2>
&lt;p>EnvoyGatewayHostInfrastructureProvider defines configuration for the Host Infrastructure provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayinfrastructureprovider">EnvoyGatewayInfrastructureProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="envoygatewayinfrastructureprovider">EnvoyGatewayInfrastructureProvider&lt;/h2>
&lt;p>EnvoyGatewayInfrastructureProvider defines configuration for the Custom Infrastructure provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewaycustomprovider">EnvoyGatewayCustomProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#infrastructureprovidertype">InfrastructureProviderType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the type of infrastructure providers to use. Supported types are &amp;ldquo;Host&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>host&lt;/code> &lt;em>&lt;a href="#envoygatewayhostinfrastructureprovider">EnvoyGatewayHostInfrastructureProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Host defines the configuration of the Host provider. Host provides runtime deployment of the data plane as a child process on the host environment.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewaykubernetesprovider">EnvoyGatewayKubernetesProvider&lt;/h2>
&lt;p>EnvoyGatewayKubernetesProvider defines configuration for the Kubernetes provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayprovider">EnvoyGatewayProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>rateLimitDeployment&lt;/code> &lt;em>&lt;a href="#kubernetesdeploymentspec">KubernetesDeploymentSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>RateLimitDeployment defines the desired state of the Envoy ratelimit deployment resource. If unspecified, default settings for the managed Envoy ratelimit deployment resource are applied.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>watch&lt;/code> &lt;em>&lt;a href="#kuberneteswatchmode">KubernetesWatchMode&lt;/a>&lt;/em>&lt;/td>
&lt;td>Watch holds configuration of which input resources should be watched and reconciled.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>deploy&lt;/code> &lt;em>&lt;a href="#kubernetesdeploymode">KubernetesDeployMode&lt;/a>&lt;/em>&lt;/td>
&lt;td>Deploy holds configuration of how output managed resources such as the Envoy Proxy data plane should be deployed&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>overwrite_control_plane_certs&lt;/code> &lt;em>boolean&lt;/em>&lt;/td>
&lt;td>OverwriteControlPlaneCerts updates the secrets containing the control plane certs, when set.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewaylogcomponent">EnvoyGatewayLogComponent&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>EnvoyGatewayLogComponent defines a component that supports a configured logging level.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewaylogging">EnvoyGatewayLogging&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="envoygatewaylogging">EnvoyGatewayLogging&lt;/h2>
&lt;p>EnvoyGatewayLogging defines logging for Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>level&lt;/code> &lt;em>object (keys:&lt;a href="#envoygatewaylogcomponent">EnvoyGatewayLogComponent&lt;/a>, values:&lt;a href="#loglevel">LogLevel&lt;/a>)&lt;/em>&lt;/td>
&lt;td>Level is the logging level. If unspecified, defaults to &amp;ldquo;info&amp;rdquo;. EnvoyGatewayLogComponent options: default/provider/gateway-api/xds-translator/xds-server/infrastructure/global-ratelimit. LogLevel options: debug/info/error/warn.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayprovider">EnvoyGatewayProvider&lt;/h2>
&lt;p>EnvoyGatewayProvider defines the desired configuration of a provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#providertype">ProviderType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the type of provider to use. Supported types are &amp;ldquo;Kubernetes&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kubernetes&lt;/code> &lt;em>&lt;a href="#envoygatewaykubernetesprovider">EnvoyGatewayKubernetesProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Kubernetes defines the configuration of the Kubernetes provider. Kubernetes provides runtime configuration via the Kubernetes API.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>custom&lt;/code> &lt;em>&lt;a href="#envoygatewaycustomprovider">EnvoyGatewayCustomProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Custom defines the configuration for the Custom provider. This provider allows you to define a specific resource provider and a infrastructure provider.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayresourceprovider">EnvoyGatewayResourceProvider&lt;/h2>
&lt;p>EnvoyGatewayResourceProvider defines configuration for the Custom Resource provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewaycustomprovider">EnvoyGatewayCustomProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#resourceprovidertype">ResourceProviderType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the type of resource provider to use. Supported types are &amp;ldquo;File&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>file&lt;/code> &lt;em>&lt;a href="#envoygatewayfileresourceprovider">EnvoyGatewayFileResourceProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>File defines the configuration of the File provider. File provides runtime configuration defined by one or more files.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayspec">EnvoyGatewaySpec&lt;/h2>
&lt;p>EnvoyGatewaySpec defines the desired state of Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>gateway&lt;/code> &lt;em>&lt;a href="#gateway">Gateway&lt;/a>&lt;/em>&lt;/td>
&lt;td>Gateway defines desired Gateway API specific configuration. If unset, default configuration parameters will apply.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>provider&lt;/code> &lt;em>&lt;a href="#envoygatewayprovider">EnvoyGatewayProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Provider defines the desired provider and provider-specific configuration. If unspecified, the Kubernetes provider is used with default configuration parameters.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>logging&lt;/code> &lt;em>&lt;a href="#envoygatewaylogging">EnvoyGatewayLogging&lt;/a>&lt;/em>&lt;/td>
&lt;td>Logging defines logging parameters for Envoy Gateway.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>admin&lt;/code> &lt;em>&lt;a href="#envoygatewayadmin">EnvoyGatewayAdmin&lt;/a>&lt;/em>&lt;/td>
&lt;td>Admin defines the desired admin related abilities. If unspecified, the Admin is used with default configuration parameters.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>rateLimit&lt;/code> &lt;em>&lt;a href="#ratelimit">RateLimit&lt;/a>&lt;/em>&lt;/td>
&lt;td>RateLimit defines the configuration associated with the Rate Limit service deployed by Envoy Gateway required to implement the Global Rate limiting functionality. The specific rate limit service used here is the reference implementation in Envoy. For more details visit &lt;a href="https://github.com/envoyproxy/ratelimit">https://github.com/envoyproxy/ratelimit&lt;/a>. This configuration is unneeded for &amp;ldquo;Local&amp;rdquo; rate limiting.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>extensionManager&lt;/code> &lt;em>&lt;a href="#extensionmanager">ExtensionManager&lt;/a>&lt;/em>&lt;/td>
&lt;td>ExtensionManager defines an extension manager to register for the Envoy Gateway Control Plane.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>extensionApis&lt;/code> &lt;em>&lt;a href="#extensionapisettings">ExtensionAPISettings&lt;/a>&lt;/em>&lt;/td>
&lt;td>ExtensionAPIs defines the settings related to specific Gateway API Extensions implemented by Envoy Gateway&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoyproxy">EnvoyProxy&lt;/h2>
&lt;p>EnvoyProxy is the schema for the envoyproxies API.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>config.gateway.envoyproxy.io/v1alpha1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>EnvoyProxy&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>metadata&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#objectmeta-v1-meta">ObjectMeta&lt;/a>&lt;/em>&lt;/td>
&lt;td>Refer to Kubernetes API documentation for fields of &lt;code>metadata&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>spec&lt;/code> &lt;em>&lt;a href="#envoyproxyspec">EnvoyProxySpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>EnvoyProxySpec defines the desired state of EnvoyProxy.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoyproxykubernetesprovider">EnvoyProxyKubernetesProvider&lt;/h2>
&lt;p>EnvoyProxyKubernetesProvider defines configuration for the Kubernetes resource provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxyprovider">EnvoyProxyProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>envoyDeployment&lt;/code> &lt;em>&lt;a href="#kubernetesdeploymentspec">KubernetesDeploymentSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>EnvoyDeployment defines the desired state of the Envoy deployment resource. If unspecified, default settings for the managed Envoy deployment resource are applied.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>envoyService&lt;/code> &lt;em>&lt;a href="#kubernetesservicespec">KubernetesServiceSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>EnvoyService defines the desired state of the Envoy service resource. If unspecified, default settings for the managed Envoy service resource are applied.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoyproxyprovider">EnvoyProxyProvider&lt;/h2>
&lt;p>EnvoyProxyProvider defines the desired state of a resource provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxyspec">EnvoyProxySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#providertype">ProviderType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the type of resource provider to use. A resource provider provides infrastructure resources for running the data plane, e.g. Envoy proxy, and optional auxiliary control planes. Supported types are &amp;ldquo;Kubernetes&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kubernetes&lt;/code> &lt;em>&lt;a href="#envoyproxykubernetesprovider">EnvoyProxyKubernetesProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Kubernetes defines the desired state of the Kubernetes resource provider. Kubernetes provides infrastructure resources for running the data plane, e.g. Envoy proxy. If unspecified and type is &amp;ldquo;Kubernetes&amp;rdquo;, default settings for managed Kubernetes resources are applied.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoyproxyspec">EnvoyProxySpec&lt;/h2>
&lt;p>EnvoyProxySpec defines the desired state of EnvoyProxy.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxy">EnvoyProxy&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>provider&lt;/code> &lt;em>&lt;a href="#envoyproxyprovider">EnvoyProxyProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Provider defines the desired resource provider and provider-specific configuration. If unspecified, the &amp;ldquo;Kubernetes&amp;rdquo; resource provider is used with default configuration parameters.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>logging&lt;/code> &lt;em>&lt;a href="#proxylogging">ProxyLogging&lt;/a>&lt;/em>&lt;/td>
&lt;td>Logging defines logging parameters for managed proxies.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>telemetry&lt;/code> &lt;em>&lt;a href="#proxytelemetry">ProxyTelemetry&lt;/a>&lt;/em>&lt;/td>
&lt;td>Telemetry defines telemetry parameters for managed proxies.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>bootstrap&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Bootstrap defines the Envoy Bootstrap as a YAML string. Visit &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/bootstrap/v3/bootstrap.proto#envoy-v3-api-msg-config-bootstrap-v3-bootstrap">https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/bootstrap/v3/bootstrap.proto#envoy-v3-api-msg-config-bootstrap-v3-bootstrap&lt;/a> to learn more about the syntax. If set, this is the Bootstrap configuration used for the managed Envoy Proxy fleet instead of the default Bootstrap configuration set by Envoy Gateway. Some fields within the Bootstrap that are required to communicate with the xDS Server (Envoy Gateway) and receive xDS resources from it are not configurable and will result in the &lt;code>EnvoyProxy&lt;/code> resource being rejected. Backward compatibility across minor versions is not guaranteed. We strongly recommend using &lt;code>egctl x translate&lt;/code> to generate a &lt;code>EnvoyProxy&lt;/code> resource with the &lt;code>Bootstrap&lt;/code> field set to the default Bootstrap configuration used. You can edit this configuration, and rerun &lt;code>egctl x translate&lt;/code> to ensure there are no validation errors.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="extensionapisettings">ExtensionAPISettings&lt;/h2>
&lt;p>ExtensionAPISettings defines the settings specific to Gateway API Extensions.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>enableEnvoyPatchPolicy&lt;/code> &lt;em>boolean&lt;/em>&lt;/td>
&lt;td>EnableEnvoyPatchPolicy enables Envoy Gateway to reconcile and implement the EnvoyPatchPolicy resources.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="extensionhooks">ExtensionHooks&lt;/h2>
&lt;p>ExtensionHooks defines extension hooks across all supported runners&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#extensionmanager">ExtensionManager&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>xdsTranslator&lt;/code> &lt;em>&lt;a href="#xdstranslatorhooks">XDSTranslatorHooks&lt;/a>&lt;/em>&lt;/td>
&lt;td>XDSTranslator defines all the supported extension hooks for the xds-translator runner&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="extensionmanager">ExtensionManager&lt;/h2>
&lt;p>ExtensionManager defines the configuration for registering an extension manager to the Envoy Gateway control plane.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>resources&lt;/code> &lt;em>&lt;a href="#groupversionkind">GroupVersionKind&lt;/a> array&lt;/em>&lt;/td>
&lt;td>Resources defines the set of K8s resources the extension will handle.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>hooks&lt;/code> &lt;em>&lt;a href="#extensionhooks">ExtensionHooks&lt;/a>&lt;/em>&lt;/td>
&lt;td>Hooks defines the set of hooks the extension supports&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code> &lt;em>&lt;a href="#extensionservice">ExtensionService&lt;/a>&lt;/em>&lt;/td>
&lt;td>Service defines the configuration of the extension service that the Envoy Gateway Control Plane will call through extension hooks.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="extensionservice">ExtensionService&lt;/h2>
&lt;p>ExtensionService defines the configuration for connecting to a registered extension service.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#extensionmanager">ExtensionManager&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>host&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Host define the extension service hostname.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>port&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>Port defines the port the extension service is exposed on.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tls&lt;/code> &lt;em>&lt;a href="#extensiontls">ExtensionTLS&lt;/a>&lt;/em>&lt;/td>
&lt;td>TLS defines TLS configuration for communication between Envoy Gateway and the extension service.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="extensiontls">ExtensionTLS&lt;/h2>
&lt;p>ExtensionTLS defines the TLS configuration when connecting to an extension service&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#extensionservice">ExtensionService&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>certificateRef&lt;/code> &lt;em>&lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.SecretObjectReference">SecretObjectReference&lt;/a>&lt;/em>&lt;/td>
&lt;td>CertificateRef contains a references to objects (Kubernetes objects or otherwise) that contains a TLS certificate and private keys. These certificates are used to establish a TLS handshake to the extension server.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CertificateRef can only reference a Kubernetes Secret at this time.&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="fileenvoyproxyaccesslog">FileEnvoyProxyAccessLog&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxyaccesslogsink">ProxyAccessLogSink&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>path&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Path defines the file path used to expose envoy access log(e.g. /dev/stdout). Empty value disables accesslog.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="gateway">Gateway&lt;/h2>
&lt;p>Gateway defines the desired Gateway API configuration of Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>controllerName&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>ControllerName defines the name of the Gateway API controller. If unspecified, defaults to &amp;ldquo;gateway.envoyproxy.io/gatewayclass-controller&amp;rdquo;. See the following for additional details: &lt;a href="https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass">https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="groupversionkind">GroupVersionKind&lt;/h2>
&lt;p>GroupVersionKind unambiguously identifies a Kind. It can be converted to k8s.io/apimachinery/pkg/runtime/schema.GroupVersionKind&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#extensionmanager">ExtensionManager&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>group&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>version&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="infrastructureprovidertype">InfrastructureProviderType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>InfrastructureProviderType defines the types of custom infrastructure providers supported by Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayinfrastructureprovider">EnvoyGatewayInfrastructureProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="kubernetescontainerspec">KubernetesContainerSpec&lt;/h2>
&lt;p>KubernetesContainerSpec defines the desired state of the Kubernetes container resource.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#kubernetesdeploymentspec">KubernetesDeploymentSpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>env&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#envvar-v1-core">EnvVar&lt;/a> array&lt;/em>&lt;/td>
&lt;td>List of environment variables to set in the container.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>resources&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#resourcerequirements-v1-core">ResourceRequirements&lt;/a>&lt;/em>&lt;/td>
&lt;td>Resources required by this container. More info: &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>securityContext&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#securitycontext-v1-core">SecurityContext&lt;/a>&lt;/em>&lt;/td>
&lt;td>SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/security-context/">https://kubernetes.io/docs/tasks/configure-pod-container/security-context/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>image&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Image specifies the EnvoyProxy container image to be used, instead of the default image.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>volumeMounts&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#volumemount-v1-core">VolumeMount&lt;/a> array&lt;/em>&lt;/td>
&lt;td>VolumeMounts are volumes to mount into the container&amp;rsquo;s filesystem. Cannot be updated.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="kubernetesdeploymode">KubernetesDeployMode&lt;/h2>
&lt;p>KubernetesDeployMode holds configuration for how to deploy managed resources such as the Envoy Proxy data plane fleet.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewaykubernetesprovider">EnvoyGatewayKubernetesProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="kubernetesdeploymentspec">KubernetesDeploymentSpec&lt;/h2>
&lt;p>KubernetesDeploymentSpec defines the desired state of the Kubernetes deployment resource.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewaykubernetesprovider">EnvoyGatewayKubernetesProvider&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoyproxykubernetesprovider">EnvoyProxyKubernetesProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>replicas&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>Replicas is the number of desired pods. Defaults to 1.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>strategy&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#deploymentstrategy-v1-apps">DeploymentStrategy&lt;/a>&lt;/em>&lt;/td>
&lt;td>The deployment strategy to use to replace existing pods with new ones.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>pod&lt;/code> &lt;em>&lt;a href="#kubernetespodspec">KubernetesPodSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>Pod defines the desired annotations and securityContext of container.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>container&lt;/code> &lt;em>&lt;a href="#kubernetescontainerspec">KubernetesContainerSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>Container defines the resources and securityContext of container.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="kubernetespodspec">KubernetesPodSpec&lt;/h2>
&lt;p>KubernetesPodSpec defines the desired state of the Kubernetes pod resource.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#kubernetesdeploymentspec">KubernetesDeploymentSpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>annotations&lt;/code> &lt;em>object (keys:string, values:string)&lt;/em>&lt;/td>
&lt;td>Annotations are the annotations that should be appended to the pods. By default, no pod annotations are appended.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>labels&lt;/code> &lt;em>object (keys:string, values:string)&lt;/em>&lt;/td>
&lt;td>Labels are the additional labels that should be tagged to the pods. By default, no additional pod labels are tagged.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>securityContext&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#podsecuritycontext-v1-core">PodSecurityContext&lt;/a>&lt;/em>&lt;/td>
&lt;td>SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty. See type description for default values of each field.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>affinity&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#affinity-v1-core">Affinity&lt;/a>&lt;/em>&lt;/td>
&lt;td>If specified, the pod&amp;rsquo;s scheduling constraints.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tolerations&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#toleration-v1-core">Toleration&lt;/a> array&lt;/em>&lt;/td>
&lt;td>If specified, the pod&amp;rsquo;s tolerations.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>volumes&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#volume-v1-core">Volume&lt;/a> array&lt;/em>&lt;/td>
&lt;td>Volumes that can be mounted by containers belonging to the pod. More info: &lt;a href="https://kubernetes.io/docs/concepts/storage/volumes">https://kubernetes.io/docs/concepts/storage/volumes&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="kubernetesservicespec">KubernetesServiceSpec&lt;/h2>
&lt;p>KubernetesServiceSpec defines the desired state of the Kubernetes service resource.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxykubernetesprovider">EnvoyProxyKubernetesProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>annotations&lt;/code> &lt;em>object (keys:string, values:string)&lt;/em>&lt;/td>
&lt;td>Annotations that should be appended to the service. By default, no annotations are appended.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#servicetype">ServiceType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type determines how the Service is exposed. Defaults to LoadBalancer. Valid options are ClusterIP, LoadBalancer and NodePort. &amp;ldquo;LoadBalancer&amp;rdquo; means a service will be exposed via an external load balancer (if the cloud provider supports it). &amp;ldquo;ClusterIP&amp;rdquo; means a service will only be accessible inside the cluster, via the cluster IP. &amp;ldquo;NodePort&amp;rdquo; means a service will be exposed on a static Port on all Nodes of the cluster.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="kuberneteswatchmode">KubernetesWatchMode&lt;/h2>
&lt;p>KubernetesWatchMode holds the configuration for which input resources to watch and reconcile.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewaykubernetesprovider">EnvoyGatewayKubernetesProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>Namespaces&lt;/code> &lt;em>string array&lt;/em>&lt;/td>
&lt;td>Namespaces holds the list of namespaces that Envoy Gateway will watch for namespaced scoped resources such as Gateway, HTTPRoute and Service. Note that Envoy Gateway will continue to reconcile relevant cluster scoped resources such as GatewayClass that it is linked to. By default, when this field is unset or empty, Envoy Gateway will watch for input namespaced resources from all namespaces.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="literalcustomtag">LiteralCustomTag&lt;/h2>
&lt;p>LiteralCustomTag adds hard-coded value to each span.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#customtag">CustomTag&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>value&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Value defines the hard-coded value to add to each span.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="logcomponent">LogComponent&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>LogComponent defines a component that supports a configured logging level.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxylogging">ProxyLogging&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="loglevel">LogLevel&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>LogLevel defines a log level for Envoy Gateway and EnvoyProxy system logs. This type is not implemented for EnvoyProxy until &lt;a href="https://github.com/envoyproxy/gateway/issues/280">https://github.com/envoyproxy/gateway/issues/280&lt;/a> is fixed.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewaylogging">EnvoyGatewayLogging&lt;/a>&lt;/li>
&lt;li>&lt;a href="#proxylogging">ProxyLogging&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="metricsink">MetricSink&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxymetrics">ProxyMetrics&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#metricsinktype">MetricSinkType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type defines the metric sink type. EG currently only supports OpenTelemetry.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>openTelemetry&lt;/code> &lt;em>&lt;a href="#opentelemetrysink">OpenTelemetrySink&lt;/a>&lt;/em>&lt;/td>
&lt;td>OpenTelemetry defines the configuration for OpenTelemetry sink. It&amp;rsquo;s required if the sink type is OpenTelemetry.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="metricsinktype">MetricSinkType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#metricsink">MetricSink&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="opentelemetryenvoyproxyaccesslog">OpenTelemetryEnvoyProxyAccessLog&lt;/h2>
&lt;p>TODO: consider reuse ExtensionService?&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxyaccesslogsink">ProxyAccessLogSink&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>host&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Host define the extension service hostname.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>port&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>Port defines the port the extension service is exposed on.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>resources&lt;/code> &lt;em>object (keys:string, values:string)&lt;/em>&lt;/td>
&lt;td>Resources is a set of labels that describe the source of a log entry, including envoy node info. It&amp;rsquo;s recommended to follow &lt;a href="https://opentelemetry.io/docs/reference/specification/resource/semantic_conventions/">semantic conventions&lt;/a>.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="opentelemetrysink">OpenTelemetrySink&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#metricsink">MetricSink&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>host&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Host define the service hostname.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>port&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>Port defines the port the service is exposed on.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="prometheusprovider">PrometheusProvider&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxymetrics">ProxyMetrics&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="providertype">ProviderType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>ProviderType defines the types of providers supported by Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayprovider">EnvoyGatewayProvider&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoyproxyprovider">EnvoyProxyProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="proxyaccesslog">ProxyAccessLog&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxytelemetry">ProxyTelemetry&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>disable&lt;/code> &lt;em>boolean&lt;/em>&lt;/td>
&lt;td>Disable disables access logging for managed proxies if set to true.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>settings&lt;/code> &lt;em>&lt;a href="#proxyaccesslogsetting">ProxyAccessLogSetting&lt;/a> array&lt;/em>&lt;/td>
&lt;td>Settings defines accesslog settings for managed proxies. If unspecified, will send default format to stdout.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="proxyaccesslogformat">ProxyAccessLogFormat&lt;/h2>
&lt;p>ProxyAccessLogFormat defines the format of accesslog.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxyaccesslogsetting">ProxyAccessLogSetting&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#proxyaccesslogformattype">ProxyAccessLogFormatType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type defines the type of accesslog format.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>text&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Text defines the text accesslog format, following Envoy accesslog formatting, empty value results in proxy&amp;rsquo;s default access log format. It&amp;rsquo;s required when the format type is &amp;ldquo;Text&amp;rdquo;. Envoy &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#command-operators">command operators&lt;/a> may be used in the format. The &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#config-access-log-format-strings">format string documentation&lt;/a> provides more information.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>json&lt;/code> &lt;em>object (keys:string, values:string)&lt;/em>&lt;/td>
&lt;td>JSON is additional attributes that describe the specific event occurrence. Structured format for the envoy access logs. Envoy &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#command-operators">command operators&lt;/a> can be used as values for fields within the Struct. It&amp;rsquo;s required when the format type is &amp;ldquo;JSON&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="proxyaccesslogformattype">ProxyAccessLogFormatType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxyaccesslogformat">ProxyAccessLogFormat&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="proxyaccesslogsetting">ProxyAccessLogSetting&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxyaccesslog">ProxyAccessLog&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>format&lt;/code> &lt;em>&lt;a href="#proxyaccesslogformat">ProxyAccessLogFormat&lt;/a>&lt;/em>&lt;/td>
&lt;td>Format defines the format of accesslog.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sinks&lt;/code> &lt;em>&lt;a href="#proxyaccesslogsink">ProxyAccessLogSink&lt;/a> array&lt;/em>&lt;/td>
&lt;td>Sinks defines the sinks of accesslog.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="proxyaccesslogsink">ProxyAccessLogSink&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxyaccesslogsetting">ProxyAccessLogSetting&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#proxyaccesslogsinktype">ProxyAccessLogSinkType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type defines the type of accesslog sink.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>file&lt;/code> &lt;em>&lt;a href="#fileenvoyproxyaccesslog">FileEnvoyProxyAccessLog&lt;/a>&lt;/em>&lt;/td>
&lt;td>File defines the file accesslog sink.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>openTelemetry&lt;/code> &lt;em>&lt;a href="#opentelemetryenvoyproxyaccesslog">OpenTelemetryEnvoyProxyAccessLog&lt;/a>&lt;/em>&lt;/td>
&lt;td>OpenTelemetry defines the OpenTelemetry accesslog sink.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="proxyaccesslogsinktype">ProxyAccessLogSinkType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxyaccesslogsink">ProxyAccessLogSink&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="proxylogging">ProxyLogging&lt;/h2>
&lt;p>ProxyLogging defines logging parameters for managed proxies.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxyspec">EnvoyProxySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>level&lt;/code> &lt;em>object (keys:&lt;a href="#logcomponent">LogComponent&lt;/a>, values:&lt;a href="#loglevel">LogLevel&lt;/a>)&lt;/em>&lt;/td>
&lt;td>Level is a map of logging level per component, where the component is the key and the log level is the value. If unspecified, defaults to &amp;ldquo;default: warn&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="proxymetrics">ProxyMetrics&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxytelemetry">ProxyTelemetry&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>prometheus&lt;/code> &lt;em>&lt;a href="#prometheusprovider">PrometheusProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Prometheus defines the configuration for Admin endpoint &lt;code>/stats/prometheus&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sinks&lt;/code> &lt;em>&lt;a href="#metricsink">MetricSink&lt;/a> array&lt;/em>&lt;/td>
&lt;td>Sinks defines the metric sinks where metrics are sent to.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="proxytelemetry">ProxyTelemetry&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxyspec">EnvoyProxySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>accessLog&lt;/code> &lt;em>&lt;a href="#proxyaccesslog">ProxyAccessLog&lt;/a>&lt;/em>&lt;/td>
&lt;td>AccessLogs defines accesslog parameters for managed proxies. If unspecified, will send default format to stdout.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tracing&lt;/code> &lt;em>&lt;a href="#proxytracing">ProxyTracing&lt;/a>&lt;/em>&lt;/td>
&lt;td>Tracing defines tracing configuration for managed proxies. If unspecified, will not send tracing data.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>metrics&lt;/code> &lt;em>&lt;a href="#proxymetrics">ProxyMetrics&lt;/a>&lt;/em>&lt;/td>
&lt;td>Metrics defines metrics configuration for managed proxies.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="proxytracing">ProxyTracing&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxytelemetry">ProxyTelemetry&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>samplingRate&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>SamplingRate controls the rate at which traffic will be selected for tracing if no prior sampling decision has been made. Defaults to 100, valid values [0-100]. 100 indicates 100% sampling.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>customTags&lt;/code> &lt;em>object (keys:string, values:&lt;a href="#customtag">CustomTag&lt;/a>)&lt;/em>&lt;/td>
&lt;td>CustomTags defines the custom tags to add to each span. If provider is kubernetes, pod name and namespace are added by default.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>provider&lt;/code> &lt;em>&lt;a href="#tracingprovider">TracingProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Provider defines the tracing provider. Only OpenTelemetry is supported currently.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ratelimit">RateLimit&lt;/h2>
&lt;p>RateLimit defines the configuration associated with the Rate Limit Service used for Global Rate Limiting.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>backend&lt;/code> &lt;em>&lt;a href="#ratelimitdatabasebackend">RateLimitDatabaseBackend&lt;/a>&lt;/em>&lt;/td>
&lt;td>Backend holds the configuration associated with the database backend used by the rate limit service to store state associated with global ratelimiting.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ratelimitdatabasebackend">RateLimitDatabaseBackend&lt;/h2>
&lt;p>RateLimitDatabaseBackend defines the configuration associated with the database backend used by the rate limit service.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimit">RateLimit&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#ratelimitdatabasebackendtype">RateLimitDatabaseBackendType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the type of database backend to use. Supported types are: * Redis: Connects to a Redis database.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>redis&lt;/code> &lt;em>&lt;a href="#ratelimitredissettings">RateLimitRedisSettings&lt;/a>&lt;/em>&lt;/td>
&lt;td>Redis defines the settings needed to connect to a Redis database.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ratelimitdatabasebackendtype">RateLimitDatabaseBackendType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>RateLimitDatabaseBackendType specifies the types of database backend to be used by the rate limit service.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitdatabasebackend">RateLimitDatabaseBackend&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ratelimitredissettings">RateLimitRedisSettings&lt;/h2>
&lt;p>RateLimitRedisSettings defines the configuration for connecting to redis database.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitdatabasebackend">RateLimitDatabaseBackend&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>url&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>URL of the Redis Database.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tls&lt;/code> &lt;em>&lt;a href="#redistlssettings">RedisTLSSettings&lt;/a>&lt;/em>&lt;/td>
&lt;td>TLS defines TLS configuration for connecting to redis database.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="redistlssettings">RedisTLSSettings&lt;/h2>
&lt;p>RedisTLSSettings defines the TLS configuration for connecting to redis database.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitredissettings">RateLimitRedisSettings&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>certificateRef&lt;/code> &lt;em>&lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.SecretObjectReference">SecretObjectReference&lt;/a>&lt;/em>&lt;/td>
&lt;td>CertificateRef defines the client certificate reference for TLS connections. Currently only a Kubernetes Secret of type TLS is supported.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="requestheadercustomtag">RequestHeaderCustomTag&lt;/h2>
&lt;p>RequestHeaderCustomTag adds value from request header to each span.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#customtag">CustomTag&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>name&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Name defines the name of the request header which to extract the value from.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>defaultValue&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>DefaultValue defines the default value to use if the request header is not set.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="resourceprovidertype">ResourceProviderType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>ResourceProviderType defines the types of custom resource providers supported by Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayresourceprovider">EnvoyGatewayResourceProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="servicetype">ServiceType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>ServiceType string describes ingress methods for a service&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#kubernetesservicespec">KubernetesServiceSpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="tracingprovider">TracingProvider&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxytracing">ProxyTracing&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#tracingprovidertype">TracingProviderType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type defines the tracing provider type. EG currently only supports OpenTelemetry.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>host&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Host define the provider service hostname.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>port&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>Port defines the port the provider service is exposed on.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="tracingprovidertype">TracingProviderType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#tracingprovider">TracingProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="xdstranslatorhook">XDSTranslatorHook&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>XDSTranslatorHook defines the types of hooks that an Envoy Gateway extension may support for the xds-translator&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#xdstranslatorhooks">XDSTranslatorHooks&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="xdstranslatorhooks">XDSTranslatorHooks&lt;/h2>
&lt;p>XDSTranslatorHooks contains all the pre and post hooks for the xds-translator runner.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#extensionhooks">ExtensionHooks&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>pre&lt;/code> &lt;em>&lt;a href="#xdstranslatorhook">XDSTranslatorHook&lt;/a> array&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>post&lt;/code> &lt;em>&lt;a href="#xdstranslatorhook">XDSTranslatorHook&lt;/a> array&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: Configuration API Design</title><link>http://gateway.xunzhuo.cafe/docs/latest/design/config-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/latest/design/config-api/</guid><description>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>&lt;a href="https://github.com/envoyproxy/gateway/issues/51">Issue 51&lt;/a> specifies the need to design an API for configuring Envoy Gateway. The control plane is configured
statically at startup and the data plane is configured dynamically through Kubernetes resources, primarily
&lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> objects. Refer to the Envoy Gateway &lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/design/SYSTEM_DESIGN.md">design doc&lt;/a> for additional details regarding
Envoy Gateway terminology and configuration.&lt;/p>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;ul>
&lt;li>Define an &lt;strong>initial&lt;/strong> API to configure Envoy Gateway at startup.&lt;/li>
&lt;li>Define an &lt;strong>initial&lt;/strong> API for configuring the managed data plane, e.g. Envoy proxies.&lt;/li>
&lt;/ul>
&lt;h2 id="non-goals">Non-Goals&lt;/h2>
&lt;ul>
&lt;li>Implementation of the configuration APIs.&lt;/li>
&lt;li>Define the &lt;code>status&lt;/code> subresource of the configuration APIs.&lt;/li>
&lt;li>Define a &lt;strong>complete&lt;/strong> set of APIs for configuring Envoy Gateway. As stated in the &lt;a href="#goals">Goals&lt;/a>, this document
defines the initial configuration APIs.&lt;/li>
&lt;li>Define an API for deploying/provisioning/operating Envoy Gateway. If needed, a future Envoy Gateway operator would be
responsible for designing and implementing this type of API.&lt;/li>
&lt;li>Specify tooling for managing the API, e.g. generate protos, CRDs, controller RBAC, etc.&lt;/li>
&lt;/ul>
&lt;h2 id="control-plane-api">Control Plane API&lt;/h2>
&lt;p>The &lt;code>EnvoyGateway&lt;/code> API defines the control plane configuration, e.g. Envoy Gateway. Key points of this API are:&lt;/p>
&lt;ul>
&lt;li>It will define Envoy Gateway&amp;rsquo;s startup configuration file. If the file does not exist, Envoy Gateway will start up
with default configuration parameters.&lt;/li>
&lt;li>EnvoyGateway inlines the &lt;code>TypeMeta&lt;/code> API. This allows EnvoyGateway to be versioned and managed as a GroupVersionKind
scheme.&lt;/li>
&lt;li>EnvoyGateway does not contain a metadata field since it&amp;rsquo;s currently represented as a static configuration file instead of
a Kubernetes resource.&lt;/li>
&lt;li>Since EnvoyGateway does not surface status, EnvoyGatewaySpec is inlined.&lt;/li>
&lt;li>If data plane static configuration is required in the future, Envoy Gateway will use a separate file for this purpose.&lt;/li>
&lt;/ul>
&lt;p>The &lt;code>v1alpha1&lt;/code> version and &lt;code>gateway.envoyproxy.io&lt;/code> API group get generated:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// gateway/api/config/v1alpha1/doc.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// Package v1alpha1 contains API Schema definitions for the gateway.envoyproxy.io API group.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// +groupName=gateway.envoyproxy.io
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">v1alpha1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The initial &lt;code>EnvoyGateway&lt;/code> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// gateway/api/config/v1alpha1/envoygateway.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">valpha1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/apimachinery/pkg/apis/meta/v1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGateway is the Schema for the envoygateways API
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGateway&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">TypeMeta&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;,inline&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewaySpec defines the desired state of Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">EnvoyGatewaySpec&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;,inline&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewaySpec defines the desired state of Envoy Gateway configuration.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGatewaySpec&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Gateway defines Gateway-API specific configuration. If unset, default
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// configuration parameters will apply.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Gateway&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">Gateway&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;gateway,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Provider defines the desired provider configuration. If unspecified,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// the Kubernetes provider is used with default parameters.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Provider&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">EnvoyGatewayProvider&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;provider,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// Gateway defines desired Gateway API configuration of Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">Gateway&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// ControllerName defines the name of the Gateway API controller. If unspecified,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// defaults to &amp;#34;gateway.envoyproxy.io/gatewayclass-controller&amp;#34;. See the following
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// for additional details:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ControllerName&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;controllerName,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewayProvider defines the desired configuration of a provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// +union
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGatewayProvider&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Type is the type of provider to use. If unset, the Kubernetes provider is used.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +unionDiscriminator
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Type&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;type,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Kubernetes defines the configuration of the Kubernetes provider. Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// provides runtime configuration via the Kubernetes API.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Kubernetes&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">EnvoyGatewayKubernetesProvider&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;kubernetes,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// File defines the configuration of the File provider. File provides runtime
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// configuration defined by one or more files.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">File&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">EnvoyGatewayFileProvider&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;file,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// ProviderType defines the types of providers supported by Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// KubernetesProviderType defines the &amp;#34;Kubernetes&amp;#34; provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">KubernetesProviderType&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Kubernetes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// FileProviderType defines the &amp;#34;File&amp;#34; provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">FileProviderType&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;File&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewayKubernetesProvider defines configuration for the Kubernetes provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGatewayKubernetesProvider&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// TODO: Add config as use cases are better understood.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewayFileProvider defines configuration for the File provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGatewayFileProvider&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// TODO: Add config as use cases are better understood.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> Provider-specific configuration is defined in the &lt;code>{$PROVIDER_NAME}Provider&lt;/code> API.&lt;/p>
&lt;h3 id="gateway">Gateway&lt;/h3>
&lt;p>Gateway defines desired configuration of &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> controllers that reconcile and translate Gateway API
resources into the Intermediate Representation (IR). Refer to the Envoy Gateway &lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/design/SYSTEM_DESIGN.md">design doc&lt;/a> for additional
details.&lt;/p>
&lt;h3 id="provider">Provider&lt;/h3>
&lt;p>Provider defines the desired configuration of an Envoy Gateway provider. A provider is an infrastructure component that
Envoy Gateway calls to establish its runtime configuration. Provider is a &lt;a href="https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#unions">union type&lt;/a>. Therefore, Envoy Gateway
can be configured with only one provider based on the &lt;code>type&lt;/code> discriminator field. Refer to the Envoy Gateway
&lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/design/SYSTEM_DESIGN.md">design doc&lt;/a> for additional details.&lt;/p>
&lt;h3 id="control-plane-configuration">Control Plane Configuration&lt;/h3>
&lt;p>The configuration file is defined by the EnvoyGateway API type. At startup, Envoy Gateway searches for the configuration
at &amp;ldquo;/etc/envoy-gateway/config.yaml&amp;rdquo;.&lt;/p>
&lt;p>Start Envoy Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ ./envoy-gateway
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since the configuration file does not exist, Envoy Gateway will start with default configuration parameters.&lt;/p>
&lt;p>The Kubernetes provider can be configured explicitly using &lt;code>provider.kubernetes&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">provider&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Kubernetes&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kubernetes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">EOF&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This configuration will cause Envoy Gateway to use the Kubernetes provider with default configuration parameters.&lt;/p>
&lt;p>The Kubernetes provider can be configured using the &lt;code>provider&lt;/code> field. For example, the &lt;code>foo&lt;/code> field can be set to &amp;ldquo;bar&amp;rdquo;:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">provider&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Kubernetes&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kubernetes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">foo&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">bar&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">EOF&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> The Provider API from the Kubernetes package is currently undefined and &lt;code>foo: bar&lt;/code> is provided for
illustration purposes only.&lt;/p>
&lt;p>The same API structure is followed for each supported provider. The following example causes Envoy Gateway to use the
File provider:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">provider&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">File&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">file&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">foo&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">bar&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">EOF&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> The Provider API from the File package is currently undefined and &lt;code>foo: bar&lt;/code> is provided for illustration
purposes only.&lt;/p>
&lt;p>Gateway API-related configuration is expressed through the &lt;code>gateway&lt;/code> field. If unspecified, Envoy Gateway will use
default configuration parameters for &lt;code>gateway&lt;/code>. The following example causes the &lt;a href="https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass">GatewayClass&lt;/a> controller to
manage GatewayClasses with controllerName &lt;code>foo&lt;/code> instead of the default &lt;code>gateway.envoyproxy.io/gatewayclass-controller&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">gateway&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">foo&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With any of the above configuration examples, Envoy Gateway can be started without any additional arguments:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ ./envoy-gateway
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="data-plane-api">Data Plane API&lt;/h2>
&lt;p>The data plane is configured dynamically through Kubernetes resources, primarily &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> objects.
Optionally, the data plane infrastructure can be configured by referencing a &lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/">custom resource (CR)&lt;/a> through
&lt;code>spec.parametersRef&lt;/code> of the managed GatewayClass. The &lt;code>EnvoyProxy&lt;/code> API defines the data plane infrastructure
configuration and is represented as the CR referenced by the managed GatewayClass. Key points of this API are:&lt;/p>
&lt;ul>
&lt;li>If unreferenced by &lt;code>gatewayclass.spec.parametersRef&lt;/code>, default parameters will be used to configure the data plane
infrastructure, e.g. expose Envoy network endpoints using a LoadBalancer service.&lt;/li>
&lt;li>Envoy Gateway will follow Gateway API &lt;a href="https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass">recommendations&lt;/a> regarding updates to the EnvoyProxy CR:
&lt;blockquote>
&lt;p>It is recommended that this resource be used as a template for Gateways. This means that a Gateway is based on the
state of the GatewayClass at the time it was created and changes to the GatewayClass or associated parameters are
not propagated down to existing Gateways.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;p>The initial &lt;code>EnvoyProxy&lt;/code> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// gateway/api/config/v1alpha1/envoyproxy.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">v1alpha1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/apimachinery/pkg/apis/meta/v1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxy is the Schema for the envoyproxies API.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxy&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">TypeMeta&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;,inline&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ObjectMeta&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;metadata,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Spec&lt;/span> &lt;span style="color:#000">EnvoyProxySpec&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;spec,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Status&lt;/span> &lt;span style="color:#000">EnvoyProxyStatus&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;status,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxySpec defines the desired state of Envoy Proxy infrastructure
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// configuration.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxySpec&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Undefined by this design spec.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxyStatus defines the observed state of EnvoyProxy.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxyStatus&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Undefined by this design spec.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The EnvoyProxySpec and EnvoyProxyStatus fields will be defined in the future as proxy infrastructure configuration use
cases are better understood.&lt;/p>
&lt;h3 id="data-plane-configuration">Data Plane Configuration&lt;/h3>
&lt;p>GatewayClass and Gateway resources define the data plane infrastructure. Note that all examples assume Envoy Gateway is
running with the Kubernetes provider.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">GatewayClass&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/gatewayclass-controller&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">gatewayClassName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">listeners&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">http&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">protocol&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">HTTP&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since the GatewayClass does not define &lt;code>spec.parametersRef&lt;/code>, the data plane is provisioned using default configuration
parameters. The Envoy proxies will be configured with a http listener and a Kubernetes LoadBalancer service listening
on port 80.&lt;/p>
&lt;p>The following example will configure the data plane to use a ClusterIP service instead of the default LoadBalancer
service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">GatewayClass&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/gatewayclass-controller&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">parametersRef&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-config&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyProxy&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">gatewayClassName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">listeners&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">http&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">protocol&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">HTTP&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyProxy&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-config&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">networkPublishing&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ClusterIPService&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> The NetworkPublishing API is currently undefined and is provided here for illustration purposes only.&lt;/p></description></item><item><title>Docs: Configuration API Design</title><link>http://gateway.xunzhuo.cafe/docs/v0.2.0/design/config-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.2.0/design/config-api/</guid><description>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>&lt;a href="https://github.com/envoyproxy/gateway/issues/51">Issue 51&lt;/a> specifies the need to design an API for configuring Envoy Gateway. The control plane is configured
statically at startup and the data plane is configured dynamically through Kubernetes resources, primarily
&lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> objects. Refer to the Envoy Gateway &lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/design/SYSTEM_DESIGN.md">design doc&lt;/a> for additional details regarding
Envoy Gateway terminology and configuration.&lt;/p>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;ul>
&lt;li>Define an &lt;strong>initial&lt;/strong> API to configure Envoy Gateway at startup.&lt;/li>
&lt;li>Define an &lt;strong>initial&lt;/strong> API for configuring the managed data plane, e.g. Envoy proxies.&lt;/li>
&lt;/ul>
&lt;h2 id="non-goals">Non-Goals&lt;/h2>
&lt;ul>
&lt;li>Implementation of the configuration APIs.&lt;/li>
&lt;li>Define the &lt;code>status&lt;/code> subresource of the configuration APIs.&lt;/li>
&lt;li>Define a &lt;strong>complete&lt;/strong> set of APIs for configuring Envoy Gateway. As stated in the &lt;a href="#goals">Goals&lt;/a>, this document
defines the initial configuration APIs.&lt;/li>
&lt;li>Define an API for deploying/provisioning/operating Envoy Gateway. If needed, a future Envoy Gateway operator would be
responsible for designing and implementing this type of API.&lt;/li>
&lt;li>Specify tooling for managing the API, e.g. generate protos, CRDs, controller RBAC, etc.&lt;/li>
&lt;/ul>
&lt;h2 id="control-plane-api">Control Plane API&lt;/h2>
&lt;p>The &lt;code>EnvoyGateway&lt;/code> API defines the control plane configuration, e.g. Envoy Gateway. Key points of this API are:&lt;/p>
&lt;ul>
&lt;li>It will define Envoy Gateway&amp;rsquo;s startup configuration file. If the file does not exist, Envoy Gateway will start up
with default configuration parameters.&lt;/li>
&lt;li>EnvoyGateway inlines the &lt;code>TypeMeta&lt;/code> API. This allows EnvoyGateway to be versioned and managed as a GroupVersionKind
scheme.&lt;/li>
&lt;li>EnvoyGateway does not contain a metadata field since it&amp;rsquo;s currently represented as a static configuration file instead of
a Kubernetes resource.&lt;/li>
&lt;li>Since EnvoyGateway does not surface status, EnvoyGatewaySpec is inlined.&lt;/li>
&lt;li>If data plane static configuration is required in the future, Envoy Gateway will use a separate file for this purpose.&lt;/li>
&lt;/ul>
&lt;p>The &lt;code>v1alpha1&lt;/code> version and &lt;code>config.gateway.envoyproxy.io&lt;/code> API group get generated:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// gateway/api/config/v1alpha1/doc.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// Package v1alpha1 contains API Schema definitions for the config.gateway.envoyproxy.io API group.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// +groupName=config.gateway.envoyproxy.io
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">v1alpha1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The initial &lt;code>EnvoyGateway&lt;/code> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// gateway/api/config/v1alpha1/envoygateway.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">valpha1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/apimachinery/pkg/apis/meta/v1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGateway is the Schema for the envoygateways API
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGateway&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">TypeMeta&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;,inline&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewaySpec defines the desired state of Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">EnvoyGatewaySpec&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;,inline&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewaySpec defines the desired state of Envoy Gateway configuration.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGatewaySpec&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Gateway defines Gateway-API specific configuration. If unset, default
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// configuration parameters will apply.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Gateway&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">Gateway&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;gateway,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Provider defines the desired provider configuration. If unspecified,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// the Kubernetes provider is used with default parameters.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Provider&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">Provider&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;provider,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// Gateway defines desired Gateway API configuration of Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">Gateway&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// ControllerName defines the name of the Gateway API controller. If unspecified,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// defaults to &amp;#34;gateway.envoyproxy.io/gatewayclass-controller&amp;#34;. See the following
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// for additional details:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ControllerName&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;controllerName,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// Provider defines the desired configuration of a provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// +union
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">Provider&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Type is the type of provider to use. If unset, the Kubernetes provider is used.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +unionDiscriminator
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Type&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;type,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Kubernetes defines the configuration of the Kubernetes provider. Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// provides runtime configuration via the Kubernetes API.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Kubernetes&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">KubernetesProvider&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;kubernetes,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// File defines the configuration of the File provider. File provides runtime
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// configuration defined by one or more files.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">File&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">FileProvider&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;file,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// ProviderType defines the types of providers supported by Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// KubernetesProviderType defines the &amp;#34;Kubernetes&amp;#34; provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">KubernetesProviderType&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Kubernetes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// FileProviderType defines the &amp;#34;File&amp;#34; provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">FileProviderType&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;File&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// KubernetesProvider defines configuration for the Kubernetes provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">KubernetesProvider&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// TODO: Add config as use cases are better understood.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// FileProvider defines configuration for the File provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">FileProvider&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// TODO: Add config as use cases are better understood.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> Provider-specific configuration is defined in the &lt;code>{$PROVIDER_NAME}Provider&lt;/code> API.&lt;/p>
&lt;h3 id="gateway">Gateway&lt;/h3>
&lt;p>Gateway defines desired configuration of &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> controllers that reconcile and translate Gateway API
resources into the Intermediate Representation (IR). Refer to the Envoy Gateway &lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/design/SYSTEM_DESIGN.md">design doc&lt;/a> for additional
details.&lt;/p>
&lt;h3 id="provider">Provider&lt;/h3>
&lt;p>Provider defines the desired configuration of an Envoy Gateway provider. A provider is an infrastructure component that
Envoy Gateway calls to establish its runtime configuration. Provider is a &lt;a href="https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#unions">union type&lt;/a>. Therefore, Envoy Gateway
can be configured with only one provider based on the &lt;code>type&lt;/code> discriminator field. Refer to the Envoy Gateway
&lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/design/SYSTEM_DESIGN.md">design doc&lt;/a> for additional details.&lt;/p>
&lt;h3 id="control-plane-configuration">Control Plane Configuration&lt;/h3>
&lt;p>The configuration file is defined by the EnvoyGateway API type. At startup, Envoy Gateway searches for the configuration
at &amp;ldquo;/etc/envoy-gateway/config.yaml&amp;rdquo;.&lt;/p>
&lt;p>Start Envoy Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ ./envoy-gateway
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since the configuration file does not exist, Envoy Gateway will start with default configuration parameters.&lt;/p>
&lt;p>The Kubernetes provider can be configured explicitly using &lt;code>provider.kubernetes&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">provider&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Kubernetes&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kubernetes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">EOF&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This configuration will cause Envoy Gateway to use the Kubernetes provider with default configuration parameters.&lt;/p>
&lt;p>The Kubernetes provider can be configured using the &lt;code>provider&lt;/code> field. For example, the &lt;code>foo&lt;/code> field can be set to &amp;ldquo;bar&amp;rdquo;:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">provider&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Kubernetes&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kubernetes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">foo&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">bar&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">EOF&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> The Provider API from the Kubernetes package is currently undefined and &lt;code>foo: bar&lt;/code> is provided for
illustration purposes only.&lt;/p>
&lt;p>The same API structure is followed for each supported provider. The following example causes Envoy Gateway to use the
File provider:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">provider&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">File&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">file&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">foo&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">bar&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">EOF&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> The Provider API from the File package is currently undefined and &lt;code>foo: bar&lt;/code> is provided for illustration
purposes only.&lt;/p>
&lt;p>Gateway API-related configuration is expressed through the &lt;code>gateway&lt;/code> field. If unspecified, Envoy Gateway will use
default configuration parameters for &lt;code>gateway&lt;/code>. The following example causes the &lt;a href="https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass">GatewayClass&lt;/a> controller to
manage GatewayClasses with controllerName &lt;code>foo&lt;/code> instead of the default &lt;code>gateway.envoyproxy.io/gatewayclass-controller&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">gateway&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">foo&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With any of the above configuration examples, Envoy Gateway can be started without any additional arguments:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ ./envoy-gateway
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="data-plane-api">Data Plane API&lt;/h2>
&lt;p>The data plane is configured dynamically through Kubernetes resources, primarily &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> objects.
Optionally, the data plane infrastructure can be configured by referencing a &lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/">custom resource (CR)&lt;/a> through
&lt;code>spec.parametersRef&lt;/code> of the managed GatewayClass. The &lt;code>EnvoyProxy&lt;/code> API defines the data plane infrastructure
configuration and is represented as the CR referenced by the managed GatewayClass. Key points of this API are:&lt;/p>
&lt;ul>
&lt;li>If unreferenced by &lt;code>gatewayclass.spec.parametersRef&lt;/code>, default parameters will be used to configure the data plane
infrastructure, e.g. expose Envoy network endpoints using a LoadBalancer service.&lt;/li>
&lt;li>Envoy Gateway will follow Gateway API &lt;a href="https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass">recommendations&lt;/a> regarding updates to the EnvoyProxy CR:
&lt;blockquote>
&lt;p>It is recommended that this resource be used as a template for Gateways. This means that a Gateway is based on the
state of the GatewayClass at the time it was created and changes to the GatewayClass or associated parameters are
not propagated down to existing Gateways.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;p>The initial &lt;code>EnvoyProxy&lt;/code> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// gateway/api/config/v1alpha1/envoyproxy.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">v1alpha1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/apimachinery/pkg/apis/meta/v1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxy is the Schema for the envoyproxies API.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxy&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">TypeMeta&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;,inline&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ObjectMeta&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;metadata,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Spec&lt;/span> &lt;span style="color:#000">EnvoyProxySpec&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;spec,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Status&lt;/span> &lt;span style="color:#000">EnvoyProxyStatus&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;status,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxySpec defines the desired state of Envoy Proxy infrastructure
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// configuration.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxySpec&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Undefined by this design spec.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxyStatus defines the observed state of EnvoyProxy.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxyStatus&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Undefined by this design spec.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The EnvoyProxySpec and EnvoyProxyStatus fields will be defined in the future as proxy infrastructure configuration use
cases are better understood.&lt;/p>
&lt;h3 id="data-plane-configuration">Data Plane Configuration&lt;/h3>
&lt;p>GatewayClass and Gateway resources define the data plane infrastructure. Note that all examples assume Envoy Gateway is
running with the Kubernetes provider.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">GatewayClass&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/gatewayclass-controller&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">gatewayClassName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">listeners&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">http&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">protocol&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">HTTP&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since the GatewayClass does not define &lt;code>spec.parametersRef&lt;/code>, the data plane is provisioned using default configuration
parameters. The Envoy proxies will be configured with a http listener and a Kubernetes LoadBalancer service listening
on port 80.&lt;/p>
&lt;p>The following example will configure the data plane to use a ClusterIP service instead of the default LoadBalancer
service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">GatewayClass&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/gatewayclass-controller&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">parametersRef&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-config&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyProxy&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">gatewayClassName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">listeners&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">http&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">protocol&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">HTTP&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyProxy&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-config&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">networkPublishing&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ClusterIPService&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> The NetworkPublishing API is currently undefined and is provided here for illustration purposes only.&lt;/p></description></item><item><title>Docs: Configuration API Design</title><link>http://gateway.xunzhuo.cafe/docs/v0.3.0/design/config-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.3.0/design/config-api/</guid><description>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>&lt;a href="https://github.com/envoyproxy/gateway/issues/51">Issue 51&lt;/a> specifies the need to design an API for configuring Envoy Gateway. The control plane is configured
statically at startup and the data plane is configured dynamically through Kubernetes resources, primarily
&lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> objects. Refer to the Envoy Gateway &lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/design/SYSTEM_DESIGN.md">design doc&lt;/a> for additional details regarding
Envoy Gateway terminology and configuration.&lt;/p>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;ul>
&lt;li>Define an &lt;strong>initial&lt;/strong> API to configure Envoy Gateway at startup.&lt;/li>
&lt;li>Define an &lt;strong>initial&lt;/strong> API for configuring the managed data plane, e.g. Envoy proxies.&lt;/li>
&lt;/ul>
&lt;h2 id="non-goals">Non-Goals&lt;/h2>
&lt;ul>
&lt;li>Implementation of the configuration APIs.&lt;/li>
&lt;li>Define the &lt;code>status&lt;/code> subresource of the configuration APIs.&lt;/li>
&lt;li>Define a &lt;strong>complete&lt;/strong> set of APIs for configuring Envoy Gateway. As stated in the &lt;a href="#goals">Goals&lt;/a>, this document
defines the initial configuration APIs.&lt;/li>
&lt;li>Define an API for deploying/provisioning/operating Envoy Gateway. If needed, a future Envoy Gateway operator would be
responsible for designing and implementing this type of API.&lt;/li>
&lt;li>Specify tooling for managing the API, e.g. generate protos, CRDs, controller RBAC, etc.&lt;/li>
&lt;/ul>
&lt;h2 id="control-plane-api">Control Plane API&lt;/h2>
&lt;p>The &lt;code>EnvoyGateway&lt;/code> API defines the control plane configuration, e.g. Envoy Gateway. Key points of this API are:&lt;/p>
&lt;ul>
&lt;li>It will define Envoy Gateway&amp;rsquo;s startup configuration file. If the file does not exist, Envoy Gateway will start up
with default configuration parameters.&lt;/li>
&lt;li>EnvoyGateway inlines the &lt;code>TypeMeta&lt;/code> API. This allows EnvoyGateway to be versioned and managed as a GroupVersionKind
scheme.&lt;/li>
&lt;li>EnvoyGateway does not contain a metadata field since it&amp;rsquo;s currently represented as a static configuration file instead of
a Kubernetes resource.&lt;/li>
&lt;li>Since EnvoyGateway does not surface status, EnvoyGatewaySpec is inlined.&lt;/li>
&lt;li>If data plane static configuration is required in the future, Envoy Gateway will use a separate file for this purpose.&lt;/li>
&lt;/ul>
&lt;p>The &lt;code>v1alpha1&lt;/code> version and &lt;code>config.gateway.envoyproxy.io&lt;/code> API group get generated:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// gateway/api/config/v1alpha1/doc.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// Package v1alpha1 contains API Schema definitions for the config.gateway.envoyproxy.io API group.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// +groupName=config.gateway.envoyproxy.io
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">v1alpha1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The initial &lt;code>EnvoyGateway&lt;/code> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// gateway/api/config/v1alpha1/envoygateway.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">valpha1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/apimachinery/pkg/apis/meta/v1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGateway is the Schema for the envoygateways API
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGateway&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">TypeMeta&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;,inline&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewaySpec defines the desired state of Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">EnvoyGatewaySpec&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;,inline&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewaySpec defines the desired state of Envoy Gateway configuration.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGatewaySpec&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Gateway defines Gateway-API specific configuration. If unset, default
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// configuration parameters will apply.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Gateway&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">Gateway&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;gateway,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Provider defines the desired provider configuration. If unspecified,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// the Kubernetes provider is used with default parameters.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Provider&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">Provider&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;provider,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// Gateway defines desired Gateway API configuration of Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">Gateway&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// ControllerName defines the name of the Gateway API controller. If unspecified,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// defaults to &amp;#34;gateway.envoyproxy.io/gatewayclass-controller&amp;#34;. See the following
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// for additional details:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ControllerName&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;controllerName,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// Provider defines the desired configuration of a provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// +union
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">Provider&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Type is the type of provider to use. If unset, the Kubernetes provider is used.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +unionDiscriminator
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Type&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;type,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Kubernetes defines the configuration of the Kubernetes provider. Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// provides runtime configuration via the Kubernetes API.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Kubernetes&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">KubernetesProvider&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;kubernetes,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// File defines the configuration of the File provider. File provides runtime
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// configuration defined by one or more files.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">File&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">FileProvider&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;file,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// ProviderType defines the types of providers supported by Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// KubernetesProviderType defines the &amp;#34;Kubernetes&amp;#34; provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">KubernetesProviderType&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Kubernetes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// FileProviderType defines the &amp;#34;File&amp;#34; provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">FileProviderType&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;File&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// KubernetesProvider defines configuration for the Kubernetes provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">KubernetesProvider&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// TODO: Add config as use cases are better understood.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// FileProvider defines configuration for the File provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">FileProvider&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// TODO: Add config as use cases are better understood.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> Provider-specific configuration is defined in the &lt;code>{$PROVIDER_NAME}Provider&lt;/code> API.&lt;/p>
&lt;h3 id="gateway">Gateway&lt;/h3>
&lt;p>Gateway defines desired configuration of &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> controllers that reconcile and translate Gateway API
resources into the Intermediate Representation (IR). Refer to the Envoy Gateway &lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/design/SYSTEM_DESIGN.md">design doc&lt;/a> for additional
details.&lt;/p>
&lt;h3 id="provider">Provider&lt;/h3>
&lt;p>Provider defines the desired configuration of an Envoy Gateway provider. A provider is an infrastructure component that
Envoy Gateway calls to establish its runtime configuration. Provider is a &lt;a href="https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#unions">union type&lt;/a>. Therefore, Envoy Gateway
can be configured with only one provider based on the &lt;code>type&lt;/code> discriminator field. Refer to the Envoy Gateway
&lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/design/SYSTEM_DESIGN.md">design doc&lt;/a> for additional details.&lt;/p>
&lt;h3 id="control-plane-configuration">Control Plane Configuration&lt;/h3>
&lt;p>The configuration file is defined by the EnvoyGateway API type. At startup, Envoy Gateway searches for the configuration
at &amp;ldquo;/etc/envoy-gateway/config.yaml&amp;rdquo;.&lt;/p>
&lt;p>Start Envoy Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ ./envoy-gateway
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since the configuration file does not exist, Envoy Gateway will start with default configuration parameters.&lt;/p>
&lt;p>The Kubernetes provider can be configured explicitly using &lt;code>provider.kubernetes&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">provider&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Kubernetes&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kubernetes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">EOF&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This configuration will cause Envoy Gateway to use the Kubernetes provider with default configuration parameters.&lt;/p>
&lt;p>The Kubernetes provider can be configured using the &lt;code>provider&lt;/code> field. For example, the &lt;code>foo&lt;/code> field can be set to &amp;ldquo;bar&amp;rdquo;:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">provider&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Kubernetes&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kubernetes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">foo&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">bar&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">EOF&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> The Provider API from the Kubernetes package is currently undefined and &lt;code>foo: bar&lt;/code> is provided for
illustration purposes only.&lt;/p>
&lt;p>The same API structure is followed for each supported provider. The following example causes Envoy Gateway to use the
File provider:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">provider&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">File&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">file&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">foo&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">bar&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">EOF&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> The Provider API from the File package is currently undefined and &lt;code>foo: bar&lt;/code> is provided for illustration
purposes only.&lt;/p>
&lt;p>Gateway API-related configuration is expressed through the &lt;code>gateway&lt;/code> field. If unspecified, Envoy Gateway will use
default configuration parameters for &lt;code>gateway&lt;/code>. The following example causes the &lt;a href="https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass">GatewayClass&lt;/a> controller to
manage GatewayClasses with controllerName &lt;code>foo&lt;/code> instead of the default &lt;code>gateway.envoyproxy.io/gatewayclass-controller&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">gateway&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">foo&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With any of the above configuration examples, Envoy Gateway can be started without any additional arguments:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ ./envoy-gateway
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="data-plane-api">Data Plane API&lt;/h2>
&lt;p>The data plane is configured dynamically through Kubernetes resources, primarily &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> objects.
Optionally, the data plane infrastructure can be configured by referencing a &lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/">custom resource (CR)&lt;/a> through
&lt;code>spec.parametersRef&lt;/code> of the managed GatewayClass. The &lt;code>EnvoyProxy&lt;/code> API defines the data plane infrastructure
configuration and is represented as the CR referenced by the managed GatewayClass. Key points of this API are:&lt;/p>
&lt;ul>
&lt;li>If unreferenced by &lt;code>gatewayclass.spec.parametersRef&lt;/code>, default parameters will be used to configure the data plane
infrastructure, e.g. expose Envoy network endpoints using a LoadBalancer service.&lt;/li>
&lt;li>Envoy Gateway will follow Gateway API &lt;a href="https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass">recommendations&lt;/a> regarding updates to the EnvoyProxy CR:
&lt;blockquote>
&lt;p>It is recommended that this resource be used as a template for Gateways. This means that a Gateway is based on the
state of the GatewayClass at the time it was created and changes to the GatewayClass or associated parameters are
not propagated down to existing Gateways.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;p>The initial &lt;code>EnvoyProxy&lt;/code> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// gateway/api/config/v1alpha1/envoyproxy.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">v1alpha1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/apimachinery/pkg/apis/meta/v1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxy is the Schema for the envoyproxies API.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxy&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">TypeMeta&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;,inline&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ObjectMeta&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;metadata,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Spec&lt;/span> &lt;span style="color:#000">EnvoyProxySpec&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;spec,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Status&lt;/span> &lt;span style="color:#000">EnvoyProxyStatus&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;status,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxySpec defines the desired state of Envoy Proxy infrastructure
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// configuration.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxySpec&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Undefined by this design spec.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxyStatus defines the observed state of EnvoyProxy.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxyStatus&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Undefined by this design spec.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The EnvoyProxySpec and EnvoyProxyStatus fields will be defined in the future as proxy infrastructure configuration use
cases are better understood.&lt;/p>
&lt;h3 id="data-plane-configuration">Data Plane Configuration&lt;/h3>
&lt;p>GatewayClass and Gateway resources define the data plane infrastructure. Note that all examples assume Envoy Gateway is
running with the Kubernetes provider.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">GatewayClass&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/gatewayclass-controller&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">gatewayClassName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">listeners&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">http&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">protocol&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">HTTP&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since the GatewayClass does not define &lt;code>spec.parametersRef&lt;/code>, the data plane is provisioned using default configuration
parameters. The Envoy proxies will be configured with a http listener and a Kubernetes LoadBalancer service listening
on port 80.&lt;/p>
&lt;p>The following example will configure the data plane to use a ClusterIP service instead of the default LoadBalancer
service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">GatewayClass&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/gatewayclass-controller&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">parametersRef&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-config&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyProxy&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">gatewayClassName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">listeners&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">http&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">protocol&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">HTTP&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyProxy&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-config&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">networkPublishing&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ClusterIPService&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> The NetworkPublishing API is currently undefined and is provided here for illustration purposes only.&lt;/p></description></item><item><title>Docs: Configuration API Design</title><link>http://gateway.xunzhuo.cafe/docs/v0.4.0/design/config-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.4.0/design/config-api/</guid><description>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>&lt;a href="https://github.com/envoyproxy/gateway/issues/51">Issue 51&lt;/a> specifies the need to design an API for configuring Envoy Gateway. The control plane is configured
statically at startup and the data plane is configured dynamically through Kubernetes resources, primarily
&lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> objects. Refer to the Envoy Gateway &lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/design/SYSTEM_DESIGN.md">design doc&lt;/a> for additional details regarding
Envoy Gateway terminology and configuration.&lt;/p>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;ul>
&lt;li>Define an &lt;strong>initial&lt;/strong> API to configure Envoy Gateway at startup.&lt;/li>
&lt;li>Define an &lt;strong>initial&lt;/strong> API for configuring the managed data plane, e.g. Envoy proxies.&lt;/li>
&lt;/ul>
&lt;h2 id="non-goals">Non-Goals&lt;/h2>
&lt;ul>
&lt;li>Implementation of the configuration APIs.&lt;/li>
&lt;li>Define the &lt;code>status&lt;/code> subresource of the configuration APIs.&lt;/li>
&lt;li>Define a &lt;strong>complete&lt;/strong> set of APIs for configuring Envoy Gateway. As stated in the &lt;a href="#goals">Goals&lt;/a>, this document
defines the initial configuration APIs.&lt;/li>
&lt;li>Define an API for deploying/provisioning/operating Envoy Gateway. If needed, a future Envoy Gateway operator would be
responsible for designing and implementing this type of API.&lt;/li>
&lt;li>Specify tooling for managing the API, e.g. generate protos, CRDs, controller RBAC, etc.&lt;/li>
&lt;/ul>
&lt;h2 id="control-plane-api">Control Plane API&lt;/h2>
&lt;p>The &lt;code>EnvoyGateway&lt;/code> API defines the control plane configuration, e.g. Envoy Gateway. Key points of this API are:&lt;/p>
&lt;ul>
&lt;li>It will define Envoy Gateway&amp;rsquo;s startup configuration file. If the file does not exist, Envoy Gateway will start up
with default configuration parameters.&lt;/li>
&lt;li>EnvoyGateway inlines the &lt;code>TypeMeta&lt;/code> API. This allows EnvoyGateway to be versioned and managed as a GroupVersionKind
scheme.&lt;/li>
&lt;li>EnvoyGateway does not contain a metadata field since it&amp;rsquo;s currently represented as a static configuration file instead of
a Kubernetes resource.&lt;/li>
&lt;li>Since EnvoyGateway does not surface status, EnvoyGatewaySpec is inlined.&lt;/li>
&lt;li>If data plane static configuration is required in the future, Envoy Gateway will use a separate file for this purpose.&lt;/li>
&lt;/ul>
&lt;p>The &lt;code>v1alpha1&lt;/code> version and &lt;code>config.gateway.envoyproxy.io&lt;/code> API group get generated:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// gateway/api/config/v1alpha1/doc.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// Package v1alpha1 contains API Schema definitions for the config.gateway.envoyproxy.io API group.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// +groupName=config.gateway.envoyproxy.io
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">v1alpha1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The initial &lt;code>EnvoyGateway&lt;/code> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// gateway/api/config/v1alpha1/envoygateway.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">valpha1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/apimachinery/pkg/apis/meta/v1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGateway is the Schema for the envoygateways API
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGateway&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">TypeMeta&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;,inline&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewaySpec defines the desired state of Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">EnvoyGatewaySpec&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;,inline&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewaySpec defines the desired state of Envoy Gateway configuration.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGatewaySpec&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Gateway defines Gateway-API specific configuration. If unset, default
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// configuration parameters will apply.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Gateway&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">Gateway&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;gateway,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Provider defines the desired provider configuration. If unspecified,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// the Kubernetes provider is used with default parameters.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Provider&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">EnvoyGatewayProvider&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;provider,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// Gateway defines desired Gateway API configuration of Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">Gateway&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// ControllerName defines the name of the Gateway API controller. If unspecified,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// defaults to &amp;#34;gateway.envoyproxy.io/gatewayclass-controller&amp;#34;. See the following
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// for additional details:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ControllerName&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;controllerName,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewayProvider defines the desired configuration of a provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// +union
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGatewayProvider&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Type is the type of provider to use. If unset, the Kubernetes provider is used.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +unionDiscriminator
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Type&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;type,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Kubernetes defines the configuration of the Kubernetes provider. Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// provides runtime configuration via the Kubernetes API.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Kubernetes&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">EnvoyGatewayKubernetesProvider&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;kubernetes,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// File defines the configuration of the File provider. File provides runtime
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// configuration defined by one or more files.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">File&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">EnvoyGatewayFileProvider&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;file,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// ProviderType defines the types of providers supported by Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// KubernetesProviderType defines the &amp;#34;Kubernetes&amp;#34; provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">KubernetesProviderType&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Kubernetes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// FileProviderType defines the &amp;#34;File&amp;#34; provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">FileProviderType&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;File&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewayKubernetesProvider defines configuration for the Kubernetes provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGatewayKubernetesProvider&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// TODO: Add config as use cases are better understood.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewayFileProvider defines configuration for the File provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGatewayFileProvider&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// TODO: Add config as use cases are better understood.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> Provider-specific configuration is defined in the &lt;code>{$PROVIDER_NAME}Provider&lt;/code> API.&lt;/p>
&lt;h3 id="gateway">Gateway&lt;/h3>
&lt;p>Gateway defines desired configuration of &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> controllers that reconcile and translate Gateway API
resources into the Intermediate Representation (IR). Refer to the Envoy Gateway &lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/design/SYSTEM_DESIGN.md">design doc&lt;/a> for additional
details.&lt;/p>
&lt;h3 id="provider">Provider&lt;/h3>
&lt;p>Provider defines the desired configuration of an Envoy Gateway provider. A provider is an infrastructure component that
Envoy Gateway calls to establish its runtime configuration. Provider is a &lt;a href="https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#unions">union type&lt;/a>. Therefore, Envoy Gateway
can be configured with only one provider based on the &lt;code>type&lt;/code> discriminator field. Refer to the Envoy Gateway
&lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/design/SYSTEM_DESIGN.md">design doc&lt;/a> for additional details.&lt;/p>
&lt;h3 id="control-plane-configuration">Control Plane Configuration&lt;/h3>
&lt;p>The configuration file is defined by the EnvoyGateway API type. At startup, Envoy Gateway searches for the configuration
at &amp;ldquo;/etc/envoy-gateway/config.yaml&amp;rdquo;.&lt;/p>
&lt;p>Start Envoy Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ ./envoy-gateway
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since the configuration file does not exist, Envoy Gateway will start with default configuration parameters.&lt;/p>
&lt;p>The Kubernetes provider can be configured explicitly using &lt;code>provider.kubernetes&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">provider&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Kubernetes&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kubernetes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">EOF&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This configuration will cause Envoy Gateway to use the Kubernetes provider with default configuration parameters.&lt;/p>
&lt;p>The Kubernetes provider can be configured using the &lt;code>provider&lt;/code> field. For example, the &lt;code>foo&lt;/code> field can be set to &amp;ldquo;bar&amp;rdquo;:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">provider&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Kubernetes&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kubernetes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">foo&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">bar&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">EOF&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> The Provider API from the Kubernetes package is currently undefined and &lt;code>foo: bar&lt;/code> is provided for
illustration purposes only.&lt;/p>
&lt;p>The same API structure is followed for each supported provider. The following example causes Envoy Gateway to use the
File provider:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">provider&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">File&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">file&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">foo&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">bar&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">EOF&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> The Provider API from the File package is currently undefined and &lt;code>foo: bar&lt;/code> is provided for illustration
purposes only.&lt;/p>
&lt;p>Gateway API-related configuration is expressed through the &lt;code>gateway&lt;/code> field. If unspecified, Envoy Gateway will use
default configuration parameters for &lt;code>gateway&lt;/code>. The following example causes the &lt;a href="https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass">GatewayClass&lt;/a> controller to
manage GatewayClasses with controllerName &lt;code>foo&lt;/code> instead of the default &lt;code>gateway.envoyproxy.io/gatewayclass-controller&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">gateway&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">foo&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With any of the above configuration examples, Envoy Gateway can be started without any additional arguments:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ ./envoy-gateway
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="data-plane-api">Data Plane API&lt;/h2>
&lt;p>The data plane is configured dynamically through Kubernetes resources, primarily &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> objects.
Optionally, the data plane infrastructure can be configured by referencing a &lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/">custom resource (CR)&lt;/a> through
&lt;code>spec.parametersRef&lt;/code> of the managed GatewayClass. The &lt;code>EnvoyProxy&lt;/code> API defines the data plane infrastructure
configuration and is represented as the CR referenced by the managed GatewayClass. Key points of this API are:&lt;/p>
&lt;ul>
&lt;li>If unreferenced by &lt;code>gatewayclass.spec.parametersRef&lt;/code>, default parameters will be used to configure the data plane
infrastructure, e.g. expose Envoy network endpoints using a LoadBalancer service.&lt;/li>
&lt;li>Envoy Gateway will follow Gateway API &lt;a href="https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass">recommendations&lt;/a> regarding updates to the EnvoyProxy CR:
&lt;blockquote>
&lt;p>It is recommended that this resource be used as a template for Gateways. This means that a Gateway is based on the
state of the GatewayClass at the time it was created and changes to the GatewayClass or associated parameters are
not propagated down to existing Gateways.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;p>The initial &lt;code>EnvoyProxy&lt;/code> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// gateway/api/config/v1alpha1/envoyproxy.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">v1alpha1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/apimachinery/pkg/apis/meta/v1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxy is the Schema for the envoyproxies API.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxy&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">TypeMeta&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;,inline&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ObjectMeta&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;metadata,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Spec&lt;/span> &lt;span style="color:#000">EnvoyProxySpec&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;spec,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Status&lt;/span> &lt;span style="color:#000">EnvoyProxyStatus&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;status,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxySpec defines the desired state of Envoy Proxy infrastructure
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// configuration.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxySpec&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Undefined by this design spec.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxyStatus defines the observed state of EnvoyProxy.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxyStatus&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Undefined by this design spec.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The EnvoyProxySpec and EnvoyProxyStatus fields will be defined in the future as proxy infrastructure configuration use
cases are better understood.&lt;/p>
&lt;h3 id="data-plane-configuration">Data Plane Configuration&lt;/h3>
&lt;p>GatewayClass and Gateway resources define the data plane infrastructure. Note that all examples assume Envoy Gateway is
running with the Kubernetes provider.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">GatewayClass&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/gatewayclass-controller&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">gatewayClassName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">listeners&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">http&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">protocol&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">HTTP&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since the GatewayClass does not define &lt;code>spec.parametersRef&lt;/code>, the data plane is provisioned using default configuration
parameters. The Envoy proxies will be configured with a http listener and a Kubernetes LoadBalancer service listening
on port 80.&lt;/p>
&lt;p>The following example will configure the data plane to use a ClusterIP service instead of the default LoadBalancer
service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">GatewayClass&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/gatewayclass-controller&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">parametersRef&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-config&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyProxy&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">gatewayClassName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">listeners&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">http&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">protocol&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">HTTP&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyProxy&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-config&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">networkPublishing&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ClusterIPService&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> The NetworkPublishing API is currently undefined and is provided here for illustration purposes only.&lt;/p></description></item><item><title>Docs: Configuration API Design</title><link>http://gateway.xunzhuo.cafe/docs/v0.5.0/design/config-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.5.0/design/config-api/</guid><description>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>&lt;a href="https://github.com/envoyproxy/gateway/issues/51">Issue 51&lt;/a> specifies the need to design an API for configuring Envoy Gateway. The control plane is configured
statically at startup and the data plane is configured dynamically through Kubernetes resources, primarily
&lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> objects. Refer to the Envoy Gateway &lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/design/SYSTEM_DESIGN.md">design doc&lt;/a> for additional details regarding
Envoy Gateway terminology and configuration.&lt;/p>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;ul>
&lt;li>Define an &lt;strong>initial&lt;/strong> API to configure Envoy Gateway at startup.&lt;/li>
&lt;li>Define an &lt;strong>initial&lt;/strong> API for configuring the managed data plane, e.g. Envoy proxies.&lt;/li>
&lt;/ul>
&lt;h2 id="non-goals">Non-Goals&lt;/h2>
&lt;ul>
&lt;li>Implementation of the configuration APIs.&lt;/li>
&lt;li>Define the &lt;code>status&lt;/code> subresource of the configuration APIs.&lt;/li>
&lt;li>Define a &lt;strong>complete&lt;/strong> set of APIs for configuring Envoy Gateway. As stated in the &lt;a href="#goals">Goals&lt;/a>, this document
defines the initial configuration APIs.&lt;/li>
&lt;li>Define an API for deploying/provisioning/operating Envoy Gateway. If needed, a future Envoy Gateway operator would be
responsible for designing and implementing this type of API.&lt;/li>
&lt;li>Specify tooling for managing the API, e.g. generate protos, CRDs, controller RBAC, etc.&lt;/li>
&lt;/ul>
&lt;h2 id="control-plane-api">Control Plane API&lt;/h2>
&lt;p>The &lt;code>EnvoyGateway&lt;/code> API defines the control plane configuration, e.g. Envoy Gateway. Key points of this API are:&lt;/p>
&lt;ul>
&lt;li>It will define Envoy Gateway&amp;rsquo;s startup configuration file. If the file does not exist, Envoy Gateway will start up
with default configuration parameters.&lt;/li>
&lt;li>EnvoyGateway inlines the &lt;code>TypeMeta&lt;/code> API. This allows EnvoyGateway to be versioned and managed as a GroupVersionKind
scheme.&lt;/li>
&lt;li>EnvoyGateway does not contain a metadata field since it&amp;rsquo;s currently represented as a static configuration file instead of
a Kubernetes resource.&lt;/li>
&lt;li>Since EnvoyGateway does not surface status, EnvoyGatewaySpec is inlined.&lt;/li>
&lt;li>If data plane static configuration is required in the future, Envoy Gateway will use a separate file for this purpose.&lt;/li>
&lt;/ul>
&lt;p>The &lt;code>v1alpha1&lt;/code> version and &lt;code>config.gateway.envoyproxy.io&lt;/code> API group get generated:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// gateway/api/config/v1alpha1/doc.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// Package v1alpha1 contains API Schema definitions for the config.gateway.envoyproxy.io API group.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// +groupName=config.gateway.envoyproxy.io
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">v1alpha1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The initial &lt;code>EnvoyGateway&lt;/code> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// gateway/api/config/v1alpha1/envoygateway.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">valpha1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/apimachinery/pkg/apis/meta/v1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGateway is the Schema for the envoygateways API
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGateway&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">TypeMeta&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;,inline&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewaySpec defines the desired state of Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">EnvoyGatewaySpec&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;,inline&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewaySpec defines the desired state of Envoy Gateway configuration.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGatewaySpec&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Gateway defines Gateway-API specific configuration. If unset, default
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// configuration parameters will apply.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Gateway&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">Gateway&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;gateway,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Provider defines the desired provider configuration. If unspecified,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// the Kubernetes provider is used with default parameters.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Provider&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">EnvoyGatewayProvider&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;provider,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// Gateway defines desired Gateway API configuration of Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">Gateway&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// ControllerName defines the name of the Gateway API controller. If unspecified,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// defaults to &amp;#34;gateway.envoyproxy.io/gatewayclass-controller&amp;#34;. See the following
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// for additional details:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ControllerName&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;controllerName,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewayProvider defines the desired configuration of a provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// +union
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGatewayProvider&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Type is the type of provider to use. If unset, the Kubernetes provider is used.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +unionDiscriminator
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Type&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;type,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Kubernetes defines the configuration of the Kubernetes provider. Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// provides runtime configuration via the Kubernetes API.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Kubernetes&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">EnvoyGatewayKubernetesProvider&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;kubernetes,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// File defines the configuration of the File provider. File provides runtime
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// configuration defined by one or more files.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// +optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">File&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">EnvoyGatewayFileProvider&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;file,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// ProviderType defines the types of providers supported by Envoy Gateway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// KubernetesProviderType defines the &amp;#34;Kubernetes&amp;#34; provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">KubernetesProviderType&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Kubernetes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// FileProviderType defines the &amp;#34;File&amp;#34; provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">FileProviderType&lt;/span> &lt;span style="color:#000">ProviderType&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;File&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewayKubernetesProvider defines configuration for the Kubernetes provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGatewayKubernetesProvider&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// TODO: Add config as use cases are better understood.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyGatewayFileProvider defines configuration for the File provider.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyGatewayFileProvider&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// TODO: Add config as use cases are better understood.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> Provider-specific configuration is defined in the &lt;code>{$PROVIDER_NAME}Provider&lt;/code> API.&lt;/p>
&lt;h3 id="gateway">Gateway&lt;/h3>
&lt;p>Gateway defines desired configuration of &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> controllers that reconcile and translate Gateway API
resources into the Intermediate Representation (IR). Refer to the Envoy Gateway &lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/design/SYSTEM_DESIGN.md">design doc&lt;/a> for additional
details.&lt;/p>
&lt;h3 id="provider">Provider&lt;/h3>
&lt;p>Provider defines the desired configuration of an Envoy Gateway provider. A provider is an infrastructure component that
Envoy Gateway calls to establish its runtime configuration. Provider is a &lt;a href="https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#unions">union type&lt;/a>. Therefore, Envoy Gateway
can be configured with only one provider based on the &lt;code>type&lt;/code> discriminator field. Refer to the Envoy Gateway
&lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/design/SYSTEM_DESIGN.md">design doc&lt;/a> for additional details.&lt;/p>
&lt;h3 id="control-plane-configuration">Control Plane Configuration&lt;/h3>
&lt;p>The configuration file is defined by the EnvoyGateway API type. At startup, Envoy Gateway searches for the configuration
at &amp;ldquo;/etc/envoy-gateway/config.yaml&amp;rdquo;.&lt;/p>
&lt;p>Start Envoy Gateway:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ ./envoy-gateway
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since the configuration file does not exist, Envoy Gateway will start with default configuration parameters.&lt;/p>
&lt;p>The Kubernetes provider can be configured explicitly using &lt;code>provider.kubernetes&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">provider&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Kubernetes&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kubernetes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">EOF&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This configuration will cause Envoy Gateway to use the Kubernetes provider with default configuration parameters.&lt;/p>
&lt;p>The Kubernetes provider can be configured using the &lt;code>provider&lt;/code> field. For example, the &lt;code>foo&lt;/code> field can be set to &amp;ldquo;bar&amp;rdquo;:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">provider&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Kubernetes&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kubernetes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">foo&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">bar&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">EOF&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> The Provider API from the Kubernetes package is currently undefined and &lt;code>foo: bar&lt;/code> is provided for
illustration purposes only.&lt;/p>
&lt;p>The same API structure is followed for each supported provider. The following example causes Envoy Gateway to use the
File provider:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">provider&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">File&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">file&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">foo&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">bar&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">EOF&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> The Provider API from the File package is currently undefined and &lt;code>foo: bar&lt;/code> is provided for illustration
purposes only.&lt;/p>
&lt;p>Gateway API-related configuration is expressed through the &lt;code>gateway&lt;/code> field. If unspecified, Envoy Gateway will use
default configuration parameters for &lt;code>gateway&lt;/code>. The following example causes the &lt;a href="https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass">GatewayClass&lt;/a> controller to
manage GatewayClasses with controllerName &lt;code>foo&lt;/code> instead of the default &lt;code>gateway.envoyproxy.io/gatewayclass-controller&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$ cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/envoy-gateway/config.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">gateway&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">foo&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With any of the above configuration examples, Envoy Gateway can be started without any additional arguments:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ ./envoy-gateway
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="data-plane-api">Data Plane API&lt;/h2>
&lt;p>The data plane is configured dynamically through Kubernetes resources, primarily &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> objects.
Optionally, the data plane infrastructure can be configured by referencing a &lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/">custom resource (CR)&lt;/a> through
&lt;code>spec.parametersRef&lt;/code> of the managed GatewayClass. The &lt;code>EnvoyProxy&lt;/code> API defines the data plane infrastructure
configuration and is represented as the CR referenced by the managed GatewayClass. Key points of this API are:&lt;/p>
&lt;ul>
&lt;li>If unreferenced by &lt;code>gatewayclass.spec.parametersRef&lt;/code>, default parameters will be used to configure the data plane
infrastructure, e.g. expose Envoy network endpoints using a LoadBalancer service.&lt;/li>
&lt;li>Envoy Gateway will follow Gateway API &lt;a href="https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass">recommendations&lt;/a> regarding updates to the EnvoyProxy CR:
&lt;blockquote>
&lt;p>It is recommended that this resource be used as a template for Gateways. This means that a Gateway is based on the
state of the GatewayClass at the time it was created and changes to the GatewayClass or associated parameters are
not propagated down to existing Gateways.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;p>The initial &lt;code>EnvoyProxy&lt;/code> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// gateway/api/config/v1alpha1/envoyproxy.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">v1alpha1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/apimachinery/pkg/apis/meta/v1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxy is the Schema for the envoyproxies API.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxy&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">TypeMeta&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;,inline&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ObjectMeta&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;metadata,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Spec&lt;/span> &lt;span style="color:#000">EnvoyProxySpec&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;spec,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Status&lt;/span> &lt;span style="color:#000">EnvoyProxyStatus&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;status,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxySpec defines the desired state of Envoy Proxy infrastructure
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// configuration.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxySpec&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Undefined by this design spec.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// EnvoyProxyStatus defines the observed state of EnvoyProxy.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">EnvoyProxyStatus&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Undefined by this design spec.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The EnvoyProxySpec and EnvoyProxyStatus fields will be defined in the future as proxy infrastructure configuration use
cases are better understood.&lt;/p>
&lt;h3 id="data-plane-configuration">Data Plane Configuration&lt;/h3>
&lt;p>GatewayClass and Gateway resources define the data plane infrastructure. Note that all examples assume Envoy Gateway is
running with the Kubernetes provider.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">GatewayClass&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/gatewayclass-controller&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">gatewayClassName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">listeners&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">http&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">protocol&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">HTTP&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since the GatewayClass does not define &lt;code>spec.parametersRef&lt;/code>, the data plane is provisioned using default configuration
parameters. The Envoy proxies will be configured with a http listener and a Kubernetes LoadBalancer service listening
on port 80.&lt;/p>
&lt;p>The following example will configure the data plane to use a ClusterIP service instead of the default LoadBalancer
service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">GatewayClass&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">controllerName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/gatewayclass-controller&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">parametersRef&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-config&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyProxy&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-gateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">gatewayClassName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-class&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">listeners&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">http&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">protocol&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">HTTP&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyProxy&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-config&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">networkPublishing&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ClusterIPService&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> The NetworkPublishing API is currently undefined and is provided here for illustration purposes only.&lt;/p></description></item><item><title>Docs: Contributing</title><link>http://gateway.xunzhuo.cafe/docs/latest/dev/contributing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/latest/dev/contributing/</guid><description>
&lt;p>We welcome contributions from the community. Please carefully review the &lt;a href="GOALS.md">project goals&lt;/a>
and following guidelines to streamline your contributions.&lt;/p>
&lt;h2 id="communication">Communication&lt;/h2>
&lt;ul>
&lt;li>Before starting work on a major feature, please contact us via GitHub or Slack. We will ensure no
one else is working on it and ask you to open a GitHub issue.&lt;/li>
&lt;li>A &amp;ldquo;major feature&amp;rdquo; is defined as any change that is &amp;gt; 100 LOC altered (not including tests), or
changes any user-facing behavior. We will use the GitHub issue to discuss the feature and come to
agreement. This is to prevent your time being wasted, as well as ours. The GitHub review process
for major features is also important so that &lt;a href="CODEOWNERS.md">affiliations with commit access&lt;/a> can
come to agreement on the design. If it&amp;rsquo;s appropriate to write a design document, the document must
be hosted either in the GitHub issue, or linked to from the issue and hosted in a world-readable
location.&lt;/li>
&lt;li>Small patches and bug fixes don&amp;rsquo;t need prior communication.&lt;/li>
&lt;/ul>
&lt;h2 id="inclusivity">Inclusivity&lt;/h2>
&lt;p>The Envoy Gateway community has an explicit goal to be inclusive to all. As such, all PRs must adhere
to the following guidelines for all code, APIs, and documentation:&lt;/p>
&lt;ul>
&lt;li>The following words and phrases are not allowed:
&lt;ul>
&lt;li>&lt;em>Whitelist&lt;/em>: use allowlist instead.&lt;/li>
&lt;li>&lt;em>Blacklist&lt;/em>: use denylist or blocklist instead.&lt;/li>
&lt;li>&lt;em>Master&lt;/em>: use primary instead.&lt;/li>
&lt;li>&lt;em>Slave&lt;/em>: use secondary or replica instead.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Documentation should be written in an inclusive style. The &lt;a href="https://developers.google.com/style/inclusive-documentation">Google developer
documentation&lt;/a> contains an excellent
reference on this topic.&lt;/li>
&lt;li>The above policy is not considered definitive and may be amended in the future as industry best
practices evolve. Additional comments on this topic may be provided by maintainers during code
review.&lt;/li>
&lt;/ul>
&lt;h2 id="submitting-a-pr">Submitting a PR&lt;/h2>
&lt;ul>
&lt;li>Fork the repo.&lt;/li>
&lt;li>Hack&lt;/li>
&lt;li>DCO sign-off each commit. This can be done with &lt;code>git commit -s&lt;/code>.&lt;/li>
&lt;li>Submit your PR.&lt;/li>
&lt;li>Tests will automatically run for you.&lt;/li>
&lt;li>We will &lt;strong>not&lt;/strong> merge any PR that is not passing tests.&lt;/li>
&lt;li>PRs are expected to have 100% test coverage for added code. This can be verified with a coverage
build. If your PR cannot have 100% coverage for some reason please clearly explain why when you
open it.&lt;/li>
&lt;li>Any PR that changes user-facing behavior &lt;strong>must&lt;/strong> have associated documentation in the &lt;a href="https://github.com/envoyproxy/gateway/tree/main/docs">docs&lt;/a> folder of the repo as
well as the &lt;a href="../releases">changelog&lt;/a>.&lt;/li>
&lt;li>All code comments and documentation are expected to have proper English grammar and punctuation.
If you are not a fluent English speaker (or a bad writer ;-)) please let us know and we will try
to find some help but there are no guarantees.&lt;/li>
&lt;li>Your PR title should be descriptive, and generally start with type that contains a subsystem name with &lt;code>()&lt;/code> if necessary
and summary followed by a colon. format &lt;code>chore/docs/feat/fix/refactor/style/test: summary&lt;/code>.
Examples:
&lt;ul>
&lt;li>&amp;ldquo;docs: fix grammar error&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;feat(translator): add new feature&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;fix: fix xx bug&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;chore: change ci &amp;amp; build tools etc&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Your PR commit message will be used as the commit message when your PR is merged. You should
update this field if your PR diverges during review.&lt;/li>
&lt;li>Your PR description should have details on what the PR does. If it fixes an existing issue it
should end with &amp;ldquo;Fixes #XXX&amp;rdquo;.&lt;/li>
&lt;li>If your PR is co-authored or based on an earlier PR from another contributor,
please attribute them with &lt;code>Co-authored-by: name &amp;lt;name@example.com&amp;gt;&lt;/code>. See
GitHub&amp;rsquo;s &lt;a href="https://help.github.com/en/github/committing-changes-to-your-project/creating-a-commit-with-multiple-authors">multiple author
guidance&lt;/a>
for further details.&lt;/li>
&lt;li>When all tests are passing and all other conditions described herein are satisfied, a maintainer
will be assigned to review and merge the PR.&lt;/li>
&lt;li>Once you submit a PR, &lt;em>please do not rebase it&lt;/em>. It&amp;rsquo;s much easier to review if subsequent commits
are new commits and/or merges. We squash and merge so the number of commits you have in the PR
doesn&amp;rsquo;t matter.&lt;/li>
&lt;li>We expect that once a PR is opened, it will be actively worked on until it is merged or closed.
We reserve the right to close PRs that are not making progress. This is generally defined as no
changes for 7 days. Obviously PRs that are closed due to lack of activity can be reopened later.
Closing stale PRs helps us to keep on top of all the work currently in flight.&lt;/li>
&lt;/ul>
&lt;h2 id="maintainer-pr-review-policy">Maintainer PR Review Policy&lt;/h2>
&lt;ul>
&lt;li>See &lt;a href="CODEOWNERS.md">CODEOWNERS.md&lt;/a> for the current list of maintainers.&lt;/li>
&lt;li>A maintainer representing a different affiliation from the PR owner is required to review and
approve the PR.&lt;/li>
&lt;li>When the project matures, it is expected that a &amp;ldquo;domain expert&amp;rdquo; for the code the PR touches should
review the PR. This person does not require commit access, just domain knowledge.&lt;/li>
&lt;li>The above rules may be waived for PRs which only update docs or comments, or trivial changes to
tests and tools (where trivial is decided by the maintainer in question).&lt;/li>
&lt;li>If there is a question on who should review a PR please discuss in Slack.&lt;/li>
&lt;li>Anyone is welcome to review any PR that they want, whether they are a maintainer or not.&lt;/li>
&lt;li>Please make sure that the PR title, commit message, and description are updated if the PR changes
significantly during review.&lt;/li>
&lt;li>Please &lt;strong>clean up the title and body&lt;/strong> before merging. By default, GitHub fills the squash merge
title with the original title, and the commit body with every individual commit from the PR.
The maintainer doing the merge should make sure the title follows the guidelines above and should
overwrite the body with the original commit message from the PR (cleaning it up if necessary)
while preserving the PR author&amp;rsquo;s final DCO sign-off.&lt;/li>
&lt;/ul>
&lt;h2 id="decision-making">Decision making&lt;/h2>
&lt;p>This is a new and complex project, and we need to make a lot of decisions very quickly.
To this end, we&amp;rsquo;ve settled on this process for making (possibly contentious) decisions:&lt;/p>
&lt;ul>
&lt;li>For decisions that need a record, we create an issue.&lt;/li>
&lt;li>In that issue, we discuss opinions, then a maintainer can call for a vote in a comment.&lt;/li>
&lt;li>Maintainers can cast binding votes on that comment by reacting or replying in another comment.&lt;/li>
&lt;li>Non-maintainer community members are welcome to cast non-binding votes by either of these methods.&lt;/li>
&lt;li>Voting will be resolved by simple majority.&lt;/li>
&lt;li>In the event of deadlocks, the question will be put to steering instead.&lt;/li>
&lt;/ul>
&lt;h2 id="dco-sign-your-work">DCO: Sign your work&lt;/h2>
&lt;p>The sign-off is a simple line at the end of the explanation for the
patch, which certifies that you wrote it or otherwise have the right to
pass it on as an open-source patch. The rules are pretty simple: if you
can certify the below (from
&lt;a href="https://developercertificate.org/">developercertificate.org&lt;/a>):&lt;/p>
&lt;pre tabindex="0">&lt;code>Developer Certificate of Origin
Version 1.1
Copyright (C) 2004, 2006 The Linux Foundation and its contributors.
660 York Street, Suite 102,
San Francisco, CA 94110 USA
Everyone is permitted to copy and distribute verbatim copies of this
license document, but changing it is not allowed.
Developer&amp;#39;s Certificate of Origin 1.1
By making a contribution to this project, I certify that:
(a) The contribution was created in whole or in part by me and I
have the right to submit it under the open source license
indicated in the file; or
(b) The contribution is based upon previous work that, to the best
of my knowledge, is covered under an appropriate open source
license and I have the right under that license to submit that
work with modifications, whether created in whole or in part
by me, under the same open source license (unless I am
permitted to submit under a different license), as indicated
in the file; or
(c) The contribution was provided directly to me by some other
person who certified (a), (b) or (c) and I have not modified
it.
(d) I understand and agree that this project and the contribution
are public and that a record of the contribution (including all
personal information I submit with it, including my sign-off) is
maintained indefinitely and may be redistributed consistent with
this project or the open source license(s) involved.
&lt;/code>&lt;/pre>&lt;p>then you just add a line to every git commit message:&lt;/p>
&lt;pre>&lt;code>Signed-off-by: Joe Smith &amp;lt;joe@gmail.com&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>using your real name (sorry, no pseudonyms or anonymous contributions.)&lt;/p>
&lt;p>You can add the sign-off when creating the git commit via &lt;code>git commit -s&lt;/code>.&lt;/p>
&lt;p>If you want this to be automatic you can set up some aliases:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git config --add alias.amend &lt;span style="color:#4e9a06">&amp;#34;commit -s --amend&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --add alias.c &lt;span style="color:#4e9a06">&amp;#34;commit -s&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="fixing-dco">Fixing DCO&lt;/h2>
&lt;p>If your PR fails the DCO check, it&amp;rsquo;s necessary to fix the entire commit history in the PR. Best
practice is to &lt;a href="https://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html">squash&lt;/a>
the commit history to a single commit, append the DCO sign-off as described above, and &lt;a href="https://git-scm.com/docs/git-push#git-push---force">force
push&lt;/a>. For example, if you have 2 commits in
your history:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git rebase -i HEAD^^
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>interactive squash + DCO append&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push origin -f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note, that in general rewriting history in this way is a hindrance to the review process and this
should only be done to correct a DCO mistake.&lt;/p></description></item><item><title>Docs: Contributing</title><link>http://gateway.xunzhuo.cafe/docs/v0.2.0/dev/contributing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.2.0/dev/contributing/</guid><description>
&lt;p>We welcome contributions from the community. Please carefully review the &lt;a href="GOALS.md">project goals&lt;/a>
and following guidelines to streamline your contributions.&lt;/p>
&lt;h2 id="communication">Communication&lt;/h2>
&lt;ul>
&lt;li>Before starting work on a major feature, please contact us via GitHub or Slack. We will ensure no
one else is working on it and ask you to open a GitHub issue.&lt;/li>
&lt;li>A &amp;ldquo;major feature&amp;rdquo; is defined as any change that is &amp;gt; 100 LOC altered (not including tests), or
changes any user-facing behavior. We will use the GitHub issue to discuss the feature and come to
agreement. This is to prevent your time being wasted, as well as ours. The GitHub review process
for major features is also important so that &lt;a href="CODEOWNERS.md">affiliations with commit access&lt;/a> can
come to agreement on the design. If it&amp;rsquo;s appropriate to write a design document, the document must
be hosted either in the GitHub issue, or linked to from the issue and hosted in a world-readable
location.&lt;/li>
&lt;li>Small patches and bug fixes don&amp;rsquo;t need prior communication.&lt;/li>
&lt;/ul>
&lt;h2 id="inclusivity">Inclusivity&lt;/h2>
&lt;p>The Envoy Gateway community has an explicit goal to be inclusive to all. As such, all PRs must adhere
to the following guidelines for all code, APIs, and documentation:&lt;/p>
&lt;ul>
&lt;li>The following words and phrases are not allowed:
&lt;ul>
&lt;li>&lt;em>Whitelist&lt;/em>: use allowlist instead.&lt;/li>
&lt;li>&lt;em>Blacklist&lt;/em>: use denylist or blocklist instead.&lt;/li>
&lt;li>&lt;em>Master&lt;/em>: use primary instead.&lt;/li>
&lt;li>&lt;em>Slave&lt;/em>: use secondary or replica instead.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Documentation should be written in an inclusive style. The &lt;a href="https://developers.google.com/style/inclusive-documentation">Google developer
documentation&lt;/a> contains an excellent
reference on this topic.&lt;/li>
&lt;li>The above policy is not considered definitive and may be amended in the future as industry best
practices evolve. Additional comments on this topic may be provided by maintainers during code
review.&lt;/li>
&lt;/ul>
&lt;h2 id="submitting-a-pr">Submitting a PR&lt;/h2>
&lt;ul>
&lt;li>Fork the repo.&lt;/li>
&lt;li>Hack&lt;/li>
&lt;li>DCO sign-off each commit. This can be done with &lt;code>git commit -s&lt;/code>.&lt;/li>
&lt;li>Submit your PR.&lt;/li>
&lt;li>Tests will automatically run for you.&lt;/li>
&lt;li>We will &lt;strong>not&lt;/strong> merge any PR that is not passing tests.&lt;/li>
&lt;li>PRs are expected to have 100% test coverage for added code. This can be verified with a coverage
build. If your PR cannot have 100% coverage for some reason please clearly explain why when you
open it.&lt;/li>
&lt;li>Any PR that changes user-facing behavior &lt;strong>must&lt;/strong> have associated documentation in the &lt;a href="https://github.com/envoyproxy/gateway/tree/main/docs">docs&lt;/a> folder of the repo as
well as the &lt;a href="../releases">changelog&lt;/a>.&lt;/li>
&lt;li>All code comments and documentation are expected to have proper English grammar and punctuation.
If you are not a fluent English speaker (or a bad writer ;-)) please let us know and we will try
to find some help but there are no guarantees.&lt;/li>
&lt;li>Your PR title should be descriptive, and generally start with a subsystem name followed by a
colon. Examples:
&lt;ul>
&lt;li>&amp;ldquo;docs: fix grammar error&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;translator: add new feature&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Your PR commit message will be used as the commit message when your PR is merged. You should
update this field if your PR diverges during review.&lt;/li>
&lt;li>Your PR description should have details on what the PR does. If it fixes an existing issue it
should end with &amp;ldquo;Fixes #XXX&amp;rdquo;.&lt;/li>
&lt;li>If your PR is co-authored or based on an earlier PR from another contributor,
please attribute them with &lt;code>Co-authored-by: name &amp;lt;name@example.com&amp;gt;&lt;/code>. See
GitHub&amp;rsquo;s &lt;a href="https://help.github.com/en/github/committing-changes-to-your-project/creating-a-commit-with-multiple-authors">multiple author
guidance&lt;/a>
for further details.&lt;/li>
&lt;li>When all tests are passing and all other conditions described herein are satisfied, a maintainer
will be assigned to review and merge the PR.&lt;/li>
&lt;li>Once you submit a PR, &lt;em>please do not rebase it&lt;/em>. It&amp;rsquo;s much easier to review if subsequent commits
are new commits and/or merges. We squash and merge so the number of commits you have in the PR
doesn&amp;rsquo;t matter.&lt;/li>
&lt;li>We expect that once a PR is opened, it will be actively worked on until it is merged or closed.
We reserve the right to close PRs that are not making progress. This is generally defined as no
changes for 7 days. Obviously PRs that are closed due to lack of activity can be reopened later.
Closing stale PRs helps us to keep on top of all the work currently in flight.&lt;/li>
&lt;/ul>
&lt;h2 id="maintainer-pr-review-policy">Maintainer PR Review Policy&lt;/h2>
&lt;ul>
&lt;li>See &lt;a href="CODEOWNERS.md">CODEOWNERS.md&lt;/a> for the current list of maintainers.&lt;/li>
&lt;li>A maintainer representing a different affiliation from the PR owner is required to review and
approve the PR.&lt;/li>
&lt;li>When the project matures, it is expected that a &amp;ldquo;domain expert&amp;rdquo; for the code the PR touches should
review the PR. This person does not require commit access, just domain knowledge.&lt;/li>
&lt;li>The above rules may be waived for PRs which only update docs or comments, or trivial changes to
tests and tools (where trivial is decided by the maintainer in question).&lt;/li>
&lt;li>If there is a question on who should review a PR please discuss in Slack.&lt;/li>
&lt;li>Anyone is welcome to review any PR that they want, whether they are a maintainer or not.&lt;/li>
&lt;li>Please make sure that the PR title, commit message, and description are updated if the PR changes
significantly during review.&lt;/li>
&lt;li>Please &lt;strong>clean up the title and body&lt;/strong> before merging. By default, GitHub fills the squash merge
title with the original title, and the commit body with every individual commit from the PR.
The maintainer doing the merge should make sure the title follows the guidelines above and should
overwrite the body with the original commit message from the PR (cleaning it up if necessary)
while preserving the PR author&amp;rsquo;s final DCO sign-off.&lt;/li>
&lt;/ul>
&lt;h2 id="decision-making">Decision making&lt;/h2>
&lt;p>This is a new and complex project, and we need to make a lot of decisions very quickly.
To this end, we&amp;rsquo;ve settled on this process for making (possibly contentious) decisions:&lt;/p>
&lt;ul>
&lt;li>For decisions that need a record, we create an issue.&lt;/li>
&lt;li>In that issue, we discuss opinions, then a maintainer can call for a vote in a comment.&lt;/li>
&lt;li>Maintainers can cast binding votes on that comment by reacting or replying in another comment.&lt;/li>
&lt;li>Non-maintainer community members are welcome to cast non-binding votes by either of these methods.&lt;/li>
&lt;li>Voting will be resolved by simple majority.&lt;/li>
&lt;li>In the event of deadlocks, the question will be put to steering instead.&lt;/li>
&lt;/ul>
&lt;h2 id="dco-sign-your-work">DCO: Sign your work&lt;/h2>
&lt;p>The sign-off is a simple line at the end of the explanation for the
patch, which certifies that you wrote it or otherwise have the right to
pass it on as an open-source patch. The rules are pretty simple: if you
can certify the below (from
&lt;a href="https://developercertificate.org/">developercertificate.org&lt;/a>):&lt;/p>
&lt;pre tabindex="0">&lt;code>Developer Certificate of Origin
Version 1.1
Copyright (C) 2004, 2006 The Linux Foundation and its contributors.
660 York Street, Suite 102,
San Francisco, CA 94110 USA
Everyone is permitted to copy and distribute verbatim copies of this
license document, but changing it is not allowed.
Developer&amp;#39;s Certificate of Origin 1.1
By making a contribution to this project, I certify that:
(a) The contribution was created in whole or in part by me and I
have the right to submit it under the open source license
indicated in the file; or
(b) The contribution is based upon previous work that, to the best
of my knowledge, is covered under an appropriate open source
license and I have the right under that license to submit that
work with modifications, whether created in whole or in part
by me, under the same open source license (unless I am
permitted to submit under a different license), as indicated
in the file; or
(c) The contribution was provided directly to me by some other
person who certified (a), (b) or (c) and I have not modified
it.
(d) I understand and agree that this project and the contribution
are public and that a record of the contribution (including all
personal information I submit with it, including my sign-off) is
maintained indefinitely and may be redistributed consistent with
this project or the open source license(s) involved.
&lt;/code>&lt;/pre>&lt;p>then you just add a line to every git commit message:&lt;/p>
&lt;pre>&lt;code>Signed-off-by: Joe Smith &amp;lt;joe@gmail.com&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>using your real name (sorry, no pseudonyms or anonymous contributions.)&lt;/p>
&lt;p>You can add the sign-off when creating the git commit via &lt;code>git commit -s&lt;/code>.&lt;/p>
&lt;p>If you want this to be automatic you can set up some aliases:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git config --add alias.amend &lt;span style="color:#4e9a06">&amp;#34;commit -s --amend&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --add alias.c &lt;span style="color:#4e9a06">&amp;#34;commit -s&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="fixing-dco">Fixing DCO&lt;/h2>
&lt;p>If your PR fails the DCO check, it&amp;rsquo;s necessary to fix the entire commit history in the PR. Best
practice is to &lt;a href="https://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html">squash&lt;/a>
the commit history to a single commit, append the DCO sign-off as described above, and &lt;a href="https://git-scm.com/docs/git-push#git-push---force">force
push&lt;/a>. For example, if you have 2 commits in
your history:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git rebase -i HEAD^^
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>interactive squash + DCO append&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push origin -f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note, that in general rewriting history in this way is a hindrance to the review process and this
should only be done to correct a DCO mistake.&lt;/p></description></item><item><title>Docs: Contributing</title><link>http://gateway.xunzhuo.cafe/docs/v0.3.0/dev/contributing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.3.0/dev/contributing/</guid><description>
&lt;p>We welcome contributions from the community. Please carefully review the &lt;a href="GOALS.md">project goals&lt;/a>
and following guidelines to streamline your contributions.&lt;/p>
&lt;h2 id="communication">Communication&lt;/h2>
&lt;ul>
&lt;li>Before starting work on a major feature, please contact us via GitHub or Slack. We will ensure no
one else is working on it and ask you to open a GitHub issue.&lt;/li>
&lt;li>A &amp;ldquo;major feature&amp;rdquo; is defined as any change that is &amp;gt; 100 LOC altered (not including tests), or
changes any user-facing behavior. We will use the GitHub issue to discuss the feature and come to
agreement. This is to prevent your time being wasted, as well as ours. The GitHub review process
for major features is also important so that &lt;a href="CODEOWNERS.md">affiliations with commit access&lt;/a> can
come to agreement on the design. If it&amp;rsquo;s appropriate to write a design document, the document must
be hosted either in the GitHub issue, or linked to from the issue and hosted in a world-readable
location.&lt;/li>
&lt;li>Small patches and bug fixes don&amp;rsquo;t need prior communication.&lt;/li>
&lt;/ul>
&lt;h2 id="inclusivity">Inclusivity&lt;/h2>
&lt;p>The Envoy Gateway community has an explicit goal to be inclusive to all. As such, all PRs must adhere
to the following guidelines for all code, APIs, and documentation:&lt;/p>
&lt;ul>
&lt;li>The following words and phrases are not allowed:
&lt;ul>
&lt;li>&lt;em>Whitelist&lt;/em>: use allowlist instead.&lt;/li>
&lt;li>&lt;em>Blacklist&lt;/em>: use denylist or blocklist instead.&lt;/li>
&lt;li>&lt;em>Master&lt;/em>: use primary instead.&lt;/li>
&lt;li>&lt;em>Slave&lt;/em>: use secondary or replica instead.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Documentation should be written in an inclusive style. The &lt;a href="https://developers.google.com/style/inclusive-documentation">Google developer
documentation&lt;/a> contains an excellent
reference on this topic.&lt;/li>
&lt;li>The above policy is not considered definitive and may be amended in the future as industry best
practices evolve. Additional comments on this topic may be provided by maintainers during code
review.&lt;/li>
&lt;/ul>
&lt;h2 id="submitting-a-pr">Submitting a PR&lt;/h2>
&lt;ul>
&lt;li>Fork the repo.&lt;/li>
&lt;li>Hack&lt;/li>
&lt;li>DCO sign-off each commit. This can be done with &lt;code>git commit -s&lt;/code>.&lt;/li>
&lt;li>Submit your PR.&lt;/li>
&lt;li>Tests will automatically run for you.&lt;/li>
&lt;li>We will &lt;strong>not&lt;/strong> merge any PR that is not passing tests.&lt;/li>
&lt;li>PRs are expected to have 100% test coverage for added code. This can be verified with a coverage
build. If your PR cannot have 100% coverage for some reason please clearly explain why when you
open it.&lt;/li>
&lt;li>Any PR that changes user-facing behavior &lt;strong>must&lt;/strong> have associated documentation in the &lt;a href="https://github.com/envoyproxy/gateway/tree/main/docs">docs&lt;/a> folder of the repo as
well as the &lt;a href="../releases">changelog&lt;/a>.&lt;/li>
&lt;li>All code comments and documentation are expected to have proper English grammar and punctuation.
If you are not a fluent English speaker (or a bad writer ;-)) please let us know and we will try
to find some help but there are no guarantees.&lt;/li>
&lt;li>Your PR title should be descriptive, and generally start with a subsystem name followed by a
colon. Examples:
&lt;ul>
&lt;li>&amp;ldquo;docs: fix grammar error&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;translator: add new feature&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Your PR commit message will be used as the commit message when your PR is merged. You should
update this field if your PR diverges during review.&lt;/li>
&lt;li>Your PR description should have details on what the PR does. If it fixes an existing issue it
should end with &amp;ldquo;Fixes #XXX&amp;rdquo;.&lt;/li>
&lt;li>If your PR is co-authored or based on an earlier PR from another contributor,
please attribute them with &lt;code>Co-authored-by: name &amp;lt;name@example.com&amp;gt;&lt;/code>. See
GitHub&amp;rsquo;s &lt;a href="https://help.github.com/en/github/committing-changes-to-your-project/creating-a-commit-with-multiple-authors">multiple author
guidance&lt;/a>
for further details.&lt;/li>
&lt;li>When all tests are passing and all other conditions described herein are satisfied, a maintainer
will be assigned to review and merge the PR.&lt;/li>
&lt;li>Once you submit a PR, &lt;em>please do not rebase it&lt;/em>. It&amp;rsquo;s much easier to review if subsequent commits
are new commits and/or merges. We squash and merge so the number of commits you have in the PR
doesn&amp;rsquo;t matter.&lt;/li>
&lt;li>We expect that once a PR is opened, it will be actively worked on until it is merged or closed.
We reserve the right to close PRs that are not making progress. This is generally defined as no
changes for 7 days. Obviously PRs that are closed due to lack of activity can be reopened later.
Closing stale PRs helps us to keep on top of all the work currently in flight.&lt;/li>
&lt;/ul>
&lt;h2 id="maintainer-pr-review-policy">Maintainer PR Review Policy&lt;/h2>
&lt;ul>
&lt;li>See &lt;a href="CODEOWNERS.md">CODEOWNERS.md&lt;/a> for the current list of maintainers.&lt;/li>
&lt;li>A maintainer representing a different affiliation from the PR owner is required to review and
approve the PR.&lt;/li>
&lt;li>When the project matures, it is expected that a &amp;ldquo;domain expert&amp;rdquo; for the code the PR touches should
review the PR. This person does not require commit access, just domain knowledge.&lt;/li>
&lt;li>The above rules may be waived for PRs which only update docs or comments, or trivial changes to
tests and tools (where trivial is decided by the maintainer in question).&lt;/li>
&lt;li>If there is a question on who should review a PR please discuss in Slack.&lt;/li>
&lt;li>Anyone is welcome to review any PR that they want, whether they are a maintainer or not.&lt;/li>
&lt;li>Please make sure that the PR title, commit message, and description are updated if the PR changes
significantly during review.&lt;/li>
&lt;li>Please &lt;strong>clean up the title and body&lt;/strong> before merging. By default, GitHub fills the squash merge
title with the original title, and the commit body with every individual commit from the PR.
The maintainer doing the merge should make sure the title follows the guidelines above and should
overwrite the body with the original commit message from the PR (cleaning it up if necessary)
while preserving the PR author&amp;rsquo;s final DCO sign-off.&lt;/li>
&lt;/ul>
&lt;h2 id="decision-making">Decision making&lt;/h2>
&lt;p>This is a new and complex project, and we need to make a lot of decisions very quickly.
To this end, we&amp;rsquo;ve settled on this process for making (possibly contentious) decisions:&lt;/p>
&lt;ul>
&lt;li>For decisions that need a record, we create an issue.&lt;/li>
&lt;li>In that issue, we discuss opinions, then a maintainer can call for a vote in a comment.&lt;/li>
&lt;li>Maintainers can cast binding votes on that comment by reacting or replying in another comment.&lt;/li>
&lt;li>Non-maintainer community members are welcome to cast non-binding votes by either of these methods.&lt;/li>
&lt;li>Voting will be resolved by simple majority.&lt;/li>
&lt;li>In the event of deadlocks, the question will be put to steering instead.&lt;/li>
&lt;/ul>
&lt;h2 id="dco-sign-your-work">DCO: Sign your work&lt;/h2>
&lt;p>The sign-off is a simple line at the end of the explanation for the
patch, which certifies that you wrote it or otherwise have the right to
pass it on as an open-source patch. The rules are pretty simple: if you
can certify the below (from
&lt;a href="https://developercertificate.org/">developercertificate.org&lt;/a>):&lt;/p>
&lt;pre tabindex="0">&lt;code>Developer Certificate of Origin
Version 1.1
Copyright (C) 2004, 2006 The Linux Foundation and its contributors.
660 York Street, Suite 102,
San Francisco, CA 94110 USA
Everyone is permitted to copy and distribute verbatim copies of this
license document, but changing it is not allowed.
Developer&amp;#39;s Certificate of Origin 1.1
By making a contribution to this project, I certify that:
(a) The contribution was created in whole or in part by me and I
have the right to submit it under the open source license
indicated in the file; or
(b) The contribution is based upon previous work that, to the best
of my knowledge, is covered under an appropriate open source
license and I have the right under that license to submit that
work with modifications, whether created in whole or in part
by me, under the same open source license (unless I am
permitted to submit under a different license), as indicated
in the file; or
(c) The contribution was provided directly to me by some other
person who certified (a), (b) or (c) and I have not modified
it.
(d) I understand and agree that this project and the contribution
are public and that a record of the contribution (including all
personal information I submit with it, including my sign-off) is
maintained indefinitely and may be redistributed consistent with
this project or the open source license(s) involved.
&lt;/code>&lt;/pre>&lt;p>then you just add a line to every git commit message:&lt;/p>
&lt;pre>&lt;code>Signed-off-by: Joe Smith &amp;lt;joe@gmail.com&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>using your real name (sorry, no pseudonyms or anonymous contributions.)&lt;/p>
&lt;p>You can add the sign-off when creating the git commit via &lt;code>git commit -s&lt;/code>.&lt;/p>
&lt;p>If you want this to be automatic you can set up some aliases:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git config --add alias.amend &lt;span style="color:#4e9a06">&amp;#34;commit -s --amend&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --add alias.c &lt;span style="color:#4e9a06">&amp;#34;commit -s&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="fixing-dco">Fixing DCO&lt;/h2>
&lt;p>If your PR fails the DCO check, it&amp;rsquo;s necessary to fix the entire commit history in the PR. Best
practice is to &lt;a href="https://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html">squash&lt;/a>
the commit history to a single commit, append the DCO sign-off as described above, and &lt;a href="https://git-scm.com/docs/git-push#git-push---force">force
push&lt;/a>. For example, if you have 2 commits in
your history:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git rebase -i HEAD^^
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>interactive squash + DCO append&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push origin -f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note, that in general rewriting history in this way is a hindrance to the review process and this
should only be done to correct a DCO mistake.&lt;/p></description></item><item><title>Docs: Contributing</title><link>http://gateway.xunzhuo.cafe/docs/v0.4.0/dev/contributing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.4.0/dev/contributing/</guid><description>
&lt;p>We welcome contributions from the community. Please carefully review the &lt;a href="GOALS.md">project goals&lt;/a>
and following guidelines to streamline your contributions.&lt;/p>
&lt;h2 id="communication">Communication&lt;/h2>
&lt;ul>
&lt;li>Before starting work on a major feature, please contact us via GitHub or Slack. We will ensure no
one else is working on it and ask you to open a GitHub issue.&lt;/li>
&lt;li>A &amp;ldquo;major feature&amp;rdquo; is defined as any change that is &amp;gt; 100 LOC altered (not including tests), or
changes any user-facing behavior. We will use the GitHub issue to discuss the feature and come to
agreement. This is to prevent your time being wasted, as well as ours. The GitHub review process
for major features is also important so that &lt;a href="CODEOWNERS.md">affiliations with commit access&lt;/a> can
come to agreement on the design. If it&amp;rsquo;s appropriate to write a design document, the document must
be hosted either in the GitHub issue, or linked to from the issue and hosted in a world-readable
location.&lt;/li>
&lt;li>Small patches and bug fixes don&amp;rsquo;t need prior communication.&lt;/li>
&lt;/ul>
&lt;h2 id="inclusivity">Inclusivity&lt;/h2>
&lt;p>The Envoy Gateway community has an explicit goal to be inclusive to all. As such, all PRs must adhere
to the following guidelines for all code, APIs, and documentation:&lt;/p>
&lt;ul>
&lt;li>The following words and phrases are not allowed:
&lt;ul>
&lt;li>&lt;em>Whitelist&lt;/em>: use allowlist instead.&lt;/li>
&lt;li>&lt;em>Blacklist&lt;/em>: use denylist or blocklist instead.&lt;/li>
&lt;li>&lt;em>Master&lt;/em>: use primary instead.&lt;/li>
&lt;li>&lt;em>Slave&lt;/em>: use secondary or replica instead.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Documentation should be written in an inclusive style. The &lt;a href="https://developers.google.com/style/inclusive-documentation">Google developer
documentation&lt;/a> contains an excellent
reference on this topic.&lt;/li>
&lt;li>The above policy is not considered definitive and may be amended in the future as industry best
practices evolve. Additional comments on this topic may be provided by maintainers during code
review.&lt;/li>
&lt;/ul>
&lt;h2 id="submitting-a-pr">Submitting a PR&lt;/h2>
&lt;ul>
&lt;li>Fork the repo.&lt;/li>
&lt;li>Hack&lt;/li>
&lt;li>DCO sign-off each commit. This can be done with &lt;code>git commit -s&lt;/code>.&lt;/li>
&lt;li>Submit your PR.&lt;/li>
&lt;li>Tests will automatically run for you.&lt;/li>
&lt;li>We will &lt;strong>not&lt;/strong> merge any PR that is not passing tests.&lt;/li>
&lt;li>PRs are expected to have 100% test coverage for added code. This can be verified with a coverage
build. If your PR cannot have 100% coverage for some reason please clearly explain why when you
open it.&lt;/li>
&lt;li>Any PR that changes user-facing behavior &lt;strong>must&lt;/strong> have associated documentation in the &lt;a href="https://github.com/envoyproxy/gateway/tree/main/docs">docs&lt;/a> folder of the repo as
well as the &lt;a href="../releases">changelog&lt;/a>.&lt;/li>
&lt;li>All code comments and documentation are expected to have proper English grammar and punctuation.
If you are not a fluent English speaker (or a bad writer ;-)) please let us know and we will try
to find some help but there are no guarantees.&lt;/li>
&lt;li>Your PR title should be descriptive, and generally start with type that contains a subsystem name with &lt;code>()&lt;/code> if necessary
and summary followed by a colon. format &lt;code>chore/docs/feat/fix/refactor/style/test: summary&lt;/code>.
Examples:
&lt;ul>
&lt;li>&amp;ldquo;docs: fix grammar error&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;feat(translator): add new feature&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;fix: fix xx bug&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;chore: change ci &amp;amp; build tools etc&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Your PR commit message will be used as the commit message when your PR is merged. You should
update this field if your PR diverges during review.&lt;/li>
&lt;li>Your PR description should have details on what the PR does. If it fixes an existing issue it
should end with &amp;ldquo;Fixes #XXX&amp;rdquo;.&lt;/li>
&lt;li>If your PR is co-authored or based on an earlier PR from another contributor,
please attribute them with &lt;code>Co-authored-by: name &amp;lt;name@example.com&amp;gt;&lt;/code>. See
GitHub&amp;rsquo;s &lt;a href="https://help.github.com/en/github/committing-changes-to-your-project/creating-a-commit-with-multiple-authors">multiple author
guidance&lt;/a>
for further details.&lt;/li>
&lt;li>When all tests are passing and all other conditions described herein are satisfied, a maintainer
will be assigned to review and merge the PR.&lt;/li>
&lt;li>Once you submit a PR, &lt;em>please do not rebase it&lt;/em>. It&amp;rsquo;s much easier to review if subsequent commits
are new commits and/or merges. We squash and merge so the number of commits you have in the PR
doesn&amp;rsquo;t matter.&lt;/li>
&lt;li>We expect that once a PR is opened, it will be actively worked on until it is merged or closed.
We reserve the right to close PRs that are not making progress. This is generally defined as no
changes for 7 days. Obviously PRs that are closed due to lack of activity can be reopened later.
Closing stale PRs helps us to keep on top of all the work currently in flight.&lt;/li>
&lt;/ul>
&lt;h2 id="maintainer-pr-review-policy">Maintainer PR Review Policy&lt;/h2>
&lt;ul>
&lt;li>See &lt;a href="CODEOWNERS.md">CODEOWNERS.md&lt;/a> for the current list of maintainers.&lt;/li>
&lt;li>A maintainer representing a different affiliation from the PR owner is required to review and
approve the PR.&lt;/li>
&lt;li>When the project matures, it is expected that a &amp;ldquo;domain expert&amp;rdquo; for the code the PR touches should
review the PR. This person does not require commit access, just domain knowledge.&lt;/li>
&lt;li>The above rules may be waived for PRs which only update docs or comments, or trivial changes to
tests and tools (where trivial is decided by the maintainer in question).&lt;/li>
&lt;li>If there is a question on who should review a PR please discuss in Slack.&lt;/li>
&lt;li>Anyone is welcome to review any PR that they want, whether they are a maintainer or not.&lt;/li>
&lt;li>Please make sure that the PR title, commit message, and description are updated if the PR changes
significantly during review.&lt;/li>
&lt;li>Please &lt;strong>clean up the title and body&lt;/strong> before merging. By default, GitHub fills the squash merge
title with the original title, and the commit body with every individual commit from the PR.
The maintainer doing the merge should make sure the title follows the guidelines above and should
overwrite the body with the original commit message from the PR (cleaning it up if necessary)
while preserving the PR author&amp;rsquo;s final DCO sign-off.&lt;/li>
&lt;/ul>
&lt;h2 id="decision-making">Decision making&lt;/h2>
&lt;p>This is a new and complex project, and we need to make a lot of decisions very quickly.
To this end, we&amp;rsquo;ve settled on this process for making (possibly contentious) decisions:&lt;/p>
&lt;ul>
&lt;li>For decisions that need a record, we create an issue.&lt;/li>
&lt;li>In that issue, we discuss opinions, then a maintainer can call for a vote in a comment.&lt;/li>
&lt;li>Maintainers can cast binding votes on that comment by reacting or replying in another comment.&lt;/li>
&lt;li>Non-maintainer community members are welcome to cast non-binding votes by either of these methods.&lt;/li>
&lt;li>Voting will be resolved by simple majority.&lt;/li>
&lt;li>In the event of deadlocks, the question will be put to steering instead.&lt;/li>
&lt;/ul>
&lt;h2 id="dco-sign-your-work">DCO: Sign your work&lt;/h2>
&lt;p>The sign-off is a simple line at the end of the explanation for the
patch, which certifies that you wrote it or otherwise have the right to
pass it on as an open-source patch. The rules are pretty simple: if you
can certify the below (from
&lt;a href="https://developercertificate.org/">developercertificate.org&lt;/a>):&lt;/p>
&lt;pre tabindex="0">&lt;code>Developer Certificate of Origin
Version 1.1
Copyright (C) 2004, 2006 The Linux Foundation and its contributors.
660 York Street, Suite 102,
San Francisco, CA 94110 USA
Everyone is permitted to copy and distribute verbatim copies of this
license document, but changing it is not allowed.
Developer&amp;#39;s Certificate of Origin 1.1
By making a contribution to this project, I certify that:
(a) The contribution was created in whole or in part by me and I
have the right to submit it under the open source license
indicated in the file; or
(b) The contribution is based upon previous work that, to the best
of my knowledge, is covered under an appropriate open source
license and I have the right under that license to submit that
work with modifications, whether created in whole or in part
by me, under the same open source license (unless I am
permitted to submit under a different license), as indicated
in the file; or
(c) The contribution was provided directly to me by some other
person who certified (a), (b) or (c) and I have not modified
it.
(d) I understand and agree that this project and the contribution
are public and that a record of the contribution (including all
personal information I submit with it, including my sign-off) is
maintained indefinitely and may be redistributed consistent with
this project or the open source license(s) involved.
&lt;/code>&lt;/pre>&lt;p>then you just add a line to every git commit message:&lt;/p>
&lt;pre>&lt;code>Signed-off-by: Joe Smith &amp;lt;joe@gmail.com&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>using your real name (sorry, no pseudonyms or anonymous contributions.)&lt;/p>
&lt;p>You can add the sign-off when creating the git commit via &lt;code>git commit -s&lt;/code>.&lt;/p>
&lt;p>If you want this to be automatic you can set up some aliases:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git config --add alias.amend &lt;span style="color:#4e9a06">&amp;#34;commit -s --amend&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --add alias.c &lt;span style="color:#4e9a06">&amp;#34;commit -s&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="fixing-dco">Fixing DCO&lt;/h2>
&lt;p>If your PR fails the DCO check, it&amp;rsquo;s necessary to fix the entire commit history in the PR. Best
practice is to &lt;a href="https://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html">squash&lt;/a>
the commit history to a single commit, append the DCO sign-off as described above, and &lt;a href="https://git-scm.com/docs/git-push#git-push---force">force
push&lt;/a>. For example, if you have 2 commits in
your history:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git rebase -i HEAD^^
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>interactive squash + DCO append&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push origin -f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note, that in general rewriting history in this way is a hindrance to the review process and this
should only be done to correct a DCO mistake.&lt;/p></description></item><item><title>Docs: Contributing</title><link>http://gateway.xunzhuo.cafe/docs/v0.5.0/dev/contributing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.5.0/dev/contributing/</guid><description>
&lt;p>We welcome contributions from the community. Please carefully review the &lt;a href="GOALS.md">project goals&lt;/a>
and following guidelines to streamline your contributions.&lt;/p>
&lt;h2 id="communication">Communication&lt;/h2>
&lt;ul>
&lt;li>Before starting work on a major feature, please contact us via GitHub or Slack. We will ensure no
one else is working on it and ask you to open a GitHub issue.&lt;/li>
&lt;li>A &amp;ldquo;major feature&amp;rdquo; is defined as any change that is &amp;gt; 100 LOC altered (not including tests), or
changes any user-facing behavior. We will use the GitHub issue to discuss the feature and come to
agreement. This is to prevent your time being wasted, as well as ours. The GitHub review process
for major features is also important so that &lt;a href="CODEOWNERS.md">affiliations with commit access&lt;/a> can
come to agreement on the design. If it&amp;rsquo;s appropriate to write a design document, the document must
be hosted either in the GitHub issue, or linked to from the issue and hosted in a world-readable
location.&lt;/li>
&lt;li>Small patches and bug fixes don&amp;rsquo;t need prior communication.&lt;/li>
&lt;/ul>
&lt;h2 id="inclusivity">Inclusivity&lt;/h2>
&lt;p>The Envoy Gateway community has an explicit goal to be inclusive to all. As such, all PRs must adhere
to the following guidelines for all code, APIs, and documentation:&lt;/p>
&lt;ul>
&lt;li>The following words and phrases are not allowed:
&lt;ul>
&lt;li>&lt;em>Whitelist&lt;/em>: use allowlist instead.&lt;/li>
&lt;li>&lt;em>Blacklist&lt;/em>: use denylist or blocklist instead.&lt;/li>
&lt;li>&lt;em>Master&lt;/em>: use primary instead.&lt;/li>
&lt;li>&lt;em>Slave&lt;/em>: use secondary or replica instead.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Documentation should be written in an inclusive style. The &lt;a href="https://developers.google.com/style/inclusive-documentation">Google developer
documentation&lt;/a> contains an excellent
reference on this topic.&lt;/li>
&lt;li>The above policy is not considered definitive and may be amended in the future as industry best
practices evolve. Additional comments on this topic may be provided by maintainers during code
review.&lt;/li>
&lt;/ul>
&lt;h2 id="submitting-a-pr">Submitting a PR&lt;/h2>
&lt;ul>
&lt;li>Fork the repo.&lt;/li>
&lt;li>Hack&lt;/li>
&lt;li>DCO sign-off each commit. This can be done with &lt;code>git commit -s&lt;/code>.&lt;/li>
&lt;li>Submit your PR.&lt;/li>
&lt;li>Tests will automatically run for you.&lt;/li>
&lt;li>We will &lt;strong>not&lt;/strong> merge any PR that is not passing tests.&lt;/li>
&lt;li>PRs are expected to have 100% test coverage for added code. This can be verified with a coverage
build. If your PR cannot have 100% coverage for some reason please clearly explain why when you
open it.&lt;/li>
&lt;li>Any PR that changes user-facing behavior &lt;strong>must&lt;/strong> have associated documentation in the &lt;a href="https://github.com/envoyproxy/gateway/tree/main/docs">docs&lt;/a> folder of the repo as
well as the &lt;a href="../releases">changelog&lt;/a>.&lt;/li>
&lt;li>All code comments and documentation are expected to have proper English grammar and punctuation.
If you are not a fluent English speaker (or a bad writer ;-)) please let us know and we will try
to find some help but there are no guarantees.&lt;/li>
&lt;li>Your PR title should be descriptive, and generally start with type that contains a subsystem name with &lt;code>()&lt;/code> if necessary
and summary followed by a colon. format &lt;code>chore/docs/feat/fix/refactor/style/test: summary&lt;/code>.
Examples:
&lt;ul>
&lt;li>&amp;ldquo;docs: fix grammar error&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;feat(translator): add new feature&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;fix: fix xx bug&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;chore: change ci &amp;amp; build tools etc&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Your PR commit message will be used as the commit message when your PR is merged. You should
update this field if your PR diverges during review.&lt;/li>
&lt;li>Your PR description should have details on what the PR does. If it fixes an existing issue it
should end with &amp;ldquo;Fixes #XXX&amp;rdquo;.&lt;/li>
&lt;li>If your PR is co-authored or based on an earlier PR from another contributor,
please attribute them with &lt;code>Co-authored-by: name &amp;lt;name@example.com&amp;gt;&lt;/code>. See
GitHub&amp;rsquo;s &lt;a href="https://help.github.com/en/github/committing-changes-to-your-project/creating-a-commit-with-multiple-authors">multiple author
guidance&lt;/a>
for further details.&lt;/li>
&lt;li>When all tests are passing and all other conditions described herein are satisfied, a maintainer
will be assigned to review and merge the PR.&lt;/li>
&lt;li>Once you submit a PR, &lt;em>please do not rebase it&lt;/em>. It&amp;rsquo;s much easier to review if subsequent commits
are new commits and/or merges. We squash and merge so the number of commits you have in the PR
doesn&amp;rsquo;t matter.&lt;/li>
&lt;li>We expect that once a PR is opened, it will be actively worked on until it is merged or closed.
We reserve the right to close PRs that are not making progress. This is generally defined as no
changes for 7 days. Obviously PRs that are closed due to lack of activity can be reopened later.
Closing stale PRs helps us to keep on top of all the work currently in flight.&lt;/li>
&lt;/ul>
&lt;h2 id="maintainer-pr-review-policy">Maintainer PR Review Policy&lt;/h2>
&lt;ul>
&lt;li>See &lt;a href="CODEOWNERS.md">CODEOWNERS.md&lt;/a> for the current list of maintainers.&lt;/li>
&lt;li>A maintainer representing a different affiliation from the PR owner is required to review and
approve the PR.&lt;/li>
&lt;li>When the project matures, it is expected that a &amp;ldquo;domain expert&amp;rdquo; for the code the PR touches should
review the PR. This person does not require commit access, just domain knowledge.&lt;/li>
&lt;li>The above rules may be waived for PRs which only update docs or comments, or trivial changes to
tests and tools (where trivial is decided by the maintainer in question).&lt;/li>
&lt;li>If there is a question on who should review a PR please discuss in Slack.&lt;/li>
&lt;li>Anyone is welcome to review any PR that they want, whether they are a maintainer or not.&lt;/li>
&lt;li>Please make sure that the PR title, commit message, and description are updated if the PR changes
significantly during review.&lt;/li>
&lt;li>Please &lt;strong>clean up the title and body&lt;/strong> before merging. By default, GitHub fills the squash merge
title with the original title, and the commit body with every individual commit from the PR.
The maintainer doing the merge should make sure the title follows the guidelines above and should
overwrite the body with the original commit message from the PR (cleaning it up if necessary)
while preserving the PR author&amp;rsquo;s final DCO sign-off.&lt;/li>
&lt;/ul>
&lt;h2 id="decision-making">Decision making&lt;/h2>
&lt;p>This is a new and complex project, and we need to make a lot of decisions very quickly.
To this end, we&amp;rsquo;ve settled on this process for making (possibly contentious) decisions:&lt;/p>
&lt;ul>
&lt;li>For decisions that need a record, we create an issue.&lt;/li>
&lt;li>In that issue, we discuss opinions, then a maintainer can call for a vote in a comment.&lt;/li>
&lt;li>Maintainers can cast binding votes on that comment by reacting or replying in another comment.&lt;/li>
&lt;li>Non-maintainer community members are welcome to cast non-binding votes by either of these methods.&lt;/li>
&lt;li>Voting will be resolved by simple majority.&lt;/li>
&lt;li>In the event of deadlocks, the question will be put to steering instead.&lt;/li>
&lt;/ul>
&lt;h2 id="dco-sign-your-work">DCO: Sign your work&lt;/h2>
&lt;p>The sign-off is a simple line at the end of the explanation for the
patch, which certifies that you wrote it or otherwise have the right to
pass it on as an open-source patch. The rules are pretty simple: if you
can certify the below (from
&lt;a href="https://developercertificate.org/">developercertificate.org&lt;/a>):&lt;/p>
&lt;pre tabindex="0">&lt;code>Developer Certificate of Origin
Version 1.1
Copyright (C) 2004, 2006 The Linux Foundation and its contributors.
660 York Street, Suite 102,
San Francisco, CA 94110 USA
Everyone is permitted to copy and distribute verbatim copies of this
license document, but changing it is not allowed.
Developer&amp;#39;s Certificate of Origin 1.1
By making a contribution to this project, I certify that:
(a) The contribution was created in whole or in part by me and I
have the right to submit it under the open source license
indicated in the file; or
(b) The contribution is based upon previous work that, to the best
of my knowledge, is covered under an appropriate open source
license and I have the right under that license to submit that
work with modifications, whether created in whole or in part
by me, under the same open source license (unless I am
permitted to submit under a different license), as indicated
in the file; or
(c) The contribution was provided directly to me by some other
person who certified (a), (b) or (c) and I have not modified
it.
(d) I understand and agree that this project and the contribution
are public and that a record of the contribution (including all
personal information I submit with it, including my sign-off) is
maintained indefinitely and may be redistributed consistent with
this project or the open source license(s) involved.
&lt;/code>&lt;/pre>&lt;p>then you just add a line to every git commit message:&lt;/p>
&lt;pre>&lt;code>Signed-off-by: Joe Smith &amp;lt;joe@gmail.com&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>using your real name (sorry, no pseudonyms or anonymous contributions.)&lt;/p>
&lt;p>You can add the sign-off when creating the git commit via &lt;code>git commit -s&lt;/code>.&lt;/p>
&lt;p>If you want this to be automatic you can set up some aliases:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git config --add alias.amend &lt;span style="color:#4e9a06">&amp;#34;commit -s --amend&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --add alias.c &lt;span style="color:#4e9a06">&amp;#34;commit -s&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="fixing-dco">Fixing DCO&lt;/h2>
&lt;p>If your PR fails the DCO check, it&amp;rsquo;s necessary to fix the entire commit history in the PR. Best
practice is to &lt;a href="https://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html">squash&lt;/a>
the commit history to a single commit, append the DCO sign-off as described above, and &lt;a href="https://git-scm.com/docs/git-push#git-push---force">force
push&lt;/a>. For example, if you have 2 commits in
your history:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git rebase -i HEAD^^
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>interactive squash + DCO append&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push origin -f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note, that in general rewriting history in this way is a hindrance to the review process and this
should only be done to correct a DCO mistake.&lt;/p></description></item><item><title>Docs: Customize EnvoyProxy</title><link>http://gateway.xunzhuo.cafe/docs/latest/user/customize-envoyproxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/latest/user/customize-envoyproxy/</guid><description>
&lt;p>Envoy Gateway provides an &lt;a href="https://gateway.envoyproxy.io/latest/api/config_types.html#envoyproxy">EnvoyProxy&lt;/a> CRD that can be linked to the ParametersRef
in GatewayClass, allowing cluster admins to customize the managed EnvoyProxy Deployment and
Service. To learn more about GatewayClass and ParametersRef, please refer to &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API documentation&lt;/a>.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>Follow the steps from the &lt;a href="quickstart.md">Quickstart Guide&lt;/a> to install Envoy Gateway and the example manifest.
Before proceeding, you should be able to query the example backend using HTTP.&lt;/p>
&lt;h2 id="add-gatewayclass-parametersref">Add GatewayClass ParametersRef&lt;/h2>
&lt;p>First, you need to add ParametersRef in GatewayClass, and refer to EnvoyProxy Config:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: GatewayClass
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> controllerName: gateway.envoyproxy.io/gatewayclass-controller
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> parametersRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> group: gateway.envoyproxy.io
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="customize-envoyproxy-deployment-replicas">Customize EnvoyProxy Deployment Replicas&lt;/h2>
&lt;p>You can customize the EnvoyProxy Deployment Replicas via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyDeployment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> replicas: 2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After you apply the config, you should see the replicas of envoyproxy changes to 2.
And also you can dynamically change the value.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl get deployment envoy-gateway
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="customize-envoyproxy-image">Customize EnvoyProxy Image&lt;/h2>
&lt;p>You can customize the EnvoyProxy Image via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyDeployment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> container:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> image: envoyproxy/envoy:v1.25-latest
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After applying the config, you can get the deployment image, and see it has changed.&lt;/p>
&lt;h2 id="customize-envoyproxy-pod-annotations">Customize EnvoyProxy Pod Annotations&lt;/h2>
&lt;p>You can customize the EnvoyProxy Pod Annotations via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyDeployment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> pod:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> annotations:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> custom1: deploy-annotation1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> custom2: deploy-annotation2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After applying the config, you can get the envoyproxy pods, and see new annotations has been added.&lt;/p>
&lt;h2 id="customize-envoyproxy-deployment-resources">Customize EnvoyProxy Deployment Resources&lt;/h2>
&lt;p>You can customize the EnvoyProxy Deployment Resources via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyDeployment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> container:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> resources:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> requests:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> cpu: 150m
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> memory: 640Mi
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> limits:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> cpu: 500m
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> memory: 1Gi
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="customize-envoyproxy-deployment-env">Customize EnvoyProxy Deployment Env&lt;/h2>
&lt;p>You can customize the EnvoyProxy Deployment Env via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyDeployment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> container:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> env:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: env_a
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> value: env_a_value
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: env_b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> value: env_b_value
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Envoy Gateway has provided two initial &lt;code>env&lt;/code> &lt;code>ENVOY_GATEWAY_NAMESPACE&lt;/code> and &lt;code>ENVOY_POD_NAME&lt;/code> for envoyproxy container.&lt;/p>
&lt;/blockquote>
&lt;p>After applying the config, you can get the envoyproxy deployment, and see resources has been changed.&lt;/p>
&lt;h2 id="customize-envoyproxy-deployment-volumes-or-volumemounts">Customize EnvoyProxy Deployment Volumes or VolumeMounts&lt;/h2>
&lt;p>You can customize the EnvoyProxy Deployment Volumes or VolumeMounts via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyDeployment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> container:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> volumeMounts:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - mountPath: /certs
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: certs
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> readOnly: true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> pod:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> volumes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: certs
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> secret:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> secretName: envoy-cert
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After applying the config, you can get the envoyproxy deployment, and see resources has been changed.&lt;/p>
&lt;h2 id="customize-envoyproxy-service-annotations">Customize EnvoyProxy Service Annotations&lt;/h2>
&lt;p>You can customize the EnvoyProxy Service Annotations via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyService:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> annotations:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> custom1: svc-annotation1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> custom2: svc-annotation2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After applying the config, you can get the envoyproxy service, and see annotations has been added.&lt;/p>
&lt;h2 id="customize-envoyproxy-bootstrap-config">Customize EnvoyProxy Bootstrap Config&lt;/h2>
&lt;p>You can customize the EnvoyProxy bootstrap config via EnvoyProxy Config.
There are two ways to customize it:&lt;/p>
&lt;ul>
&lt;li>Replace: the whole bootstrap config will be replaced by the config you provided.&lt;/li>
&lt;li>Merge: the config you provided will be merged into the default bootstrap config.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> bootstrap:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Replace
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> bootstrap: |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> admin:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> access_log:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: envoy.access_loggers.file
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> typed_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> path: /dev/null
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> address:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> socket_address:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> address: 127.0.0.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port_value: 20000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> dynamic_resources:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ads_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> api_type: DELTA_GRPC
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> transport_api_version: V3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> grpc_services:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - envoy_grpc:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> cluster_name: xds_cluster
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> set_node_on_first_message_only: true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> lds_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ads: {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> resource_api_version: V3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> cds_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ads: {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> resource_api_version: V3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> static_resources:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> clusters:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - connect_timeout: 10s
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> load_assignment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> cluster_name: xds_cluster
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> endpoints:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - lb_endpoints:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - endpoint:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> address:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> socket_address:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> address: envoy-gateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port_value: 18000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> typed_extension_protocol_options:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;@type&amp;#34;: &amp;#34;type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;explicit_http_config&amp;#34;:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;http2_protocol_options&amp;#34;: {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: xds_cluster
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: STRICT_DNS
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> transport_socket:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: envoy.transport_sockets.tls
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> typed_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> common_tls_context:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> tls_params:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> tls_maximum_protocol_version: TLSv1_3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> tls_certificate_sds_secret_configs:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: xds_certificate
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> sds_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> path_config_source:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> path: &amp;#34;/sds/xds-certificate.json&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> resource_api_version: V3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> validation_context_sds_secret_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: xds_trusted_ca
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> sds_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> path_config_source:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> path: &amp;#34;/sds/xds-trusted-ca.json&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> resource_api_version: V3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> layered_runtime:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> layers:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: runtime-0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> rtds_layer:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> rtds_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ads: {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> resource_api_version: V3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: runtime-0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use &lt;a href="https://gateway.envoyproxy.io/latest/user/egctl.html#validating-gateway-api-configuration">egctl translate&lt;/a>
to get the default xDS Bootstrap configuration used by Envoy Gateway.&lt;/p>
&lt;p>After applying the config, the bootstrap config will be overridden by the new config you provided.
Any errors in the configuration will be surfaced as status within the &lt;code>GatewayClass&lt;/code> resource.
You can also validate this configuration using &lt;a href="https://gateway.envoyproxy.io/latest/user/egctl.html#validating-gateway-api-configuration">egctl translate&lt;/a>.&lt;/p></description></item><item><title>Docs: Customize EnvoyProxy</title><link>http://gateway.xunzhuo.cafe/docs/v0.4.0/user/customize-envoyproxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.4.0/user/customize-envoyproxy/</guid><description>
&lt;p>Envoy Gateway provides a &lt;a href="https://gateway.envoyproxy.io/v0.4.0/api/config_types.html#envoyproxy">EnvoyProxy&lt;/a> CRD that can be linked to the ParametersRef
in GatewayClass y cluster admins to customize the managed EnvoyProxy Deployment and
Service. To learn more about GatewayClass and ParametersRef, please refer to &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API documentation&lt;/a>.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>Follow the steps from the &lt;a href="quickstart.md">Quickstart Guide&lt;/a> to install Envoy Gateway and the example manifest.
Before proceeding, you should be able to query the example backend using HTTP.&lt;/p>
&lt;h2 id="add-gatewayclass-parametersref">Add GatewayClass ParametersRef&lt;/h2>
&lt;p>First, you need to add ParametersRef in GatewayClass, and refer to EnvoyProxy Config:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: GatewayClass
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> controllerName: gateway.envoyproxy.io/gatewayclass-controller
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> parametersRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> group: config.gateway.envoyproxy.io
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="customize-envoyproxy-deployment-replicas">Customize EnvoyProxy Deployment Replicas&lt;/h2>
&lt;p>You can customize the EnvoyProxy Deployment Replicas via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: config.gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyDeployment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> replicas: 2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After you apply the config, you should see the replicas of envoyproxy changes to 2.
And also you can dynamically change the value.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl get deployment envoy-gateway
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="customize-envoyproxy-image">Customize EnvoyProxy Image&lt;/h2>
&lt;p>You can customize the EnvoyProxy Image via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: config.gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyDeployment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> container:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> image: envoyproxy/envoy:v1.25-latest
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After applying the config, you can get the deployment image, and see it has changed.&lt;/p>
&lt;h2 id="customize-envoyproxy-pod-annotations">Customize EnvoyProxy Pod Annotations&lt;/h2>
&lt;p>You can customize the EnvoyProxy Pod Annotations via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: config.gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyDeployment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> pod:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> annotations:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> custom1: deploy-annotation1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> custom2: deploy-annotation2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After applying the config, you can get the envoyproxy pods, and see new annotations has been added.&lt;/p>
&lt;h2 id="customize-envoyproxy-deployment-resources">Customize EnvoyProxy Deployment Resources&lt;/h2>
&lt;p>You can customize the EnvoyProxy Deployment Resources via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: config.gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyDeployment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> container:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> resources:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> requests:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> cpu: 150m
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> memory: 640Mi
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> limits:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> cpu: 500m
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> memory: 1Gi
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After applying the config, you can get the envoyproxy deployment, and see resources has been changed.&lt;/p>
&lt;h2 id="customize-envoyproxy-service-annotations">Customize EnvoyProxy Service Annotations&lt;/h2>
&lt;p>You can customize the EnvoyProxy Service Annotations via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: config.gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyService:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> annotations:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> custom1: svc-annotation1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> custom2: svc-annotation2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After applying the config, you can get the envoyproxy service, and see annotations has been added.&lt;/p>
&lt;h2 id="customize-envoyproxy-bootstrap-config">Customize EnvoyProxy Bootstrap Config&lt;/h2>
&lt;p>You can customize the EnvoyProxy Bootstrap Config via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: config.gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> bootstrap: |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> admin:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> access_log:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: envoy.access_loggers.file
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> typed_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> path: /dev/null
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> address:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> socket_address:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> address: 127.0.0.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port_value: 20000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> dynamic_resources:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ads_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> api_type: DELTA_GRPC
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> transport_api_version: V3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> grpc_services:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - envoy_grpc:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> cluster_name: xds_cluster
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> set_node_on_first_message_only: true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> lds_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ads: {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> cds_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ads: {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> static_resources:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> clusters:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - connect_timeout: 10s
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> load_assignment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> cluster_name: xds_cluster
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> endpoints:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - lb_endpoints:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - endpoint:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> address:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> socket_address:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> address: envoy-gateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port_value: 18000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> typed_extension_protocol_options:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;@type&amp;#34;: &amp;#34;type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;explicit_http_config&amp;#34;:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;http2_protocol_options&amp;#34;: {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: xds_cluster
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: STRICT_DNS
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> transport_socket:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: envoy.transport_sockets.tls
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> typed_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> common_tls_context:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> tls_params:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> tls_maximum_protocol_version: TLSv1_3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> tls_certificate_sds_secret_configs:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: xds_certificate
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> sds_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> path_config_source:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> path: &amp;#34;/sds/xds-certificate.json&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> resource_api_version: V3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> validation_context_sds_secret_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: xds_trusted_ca
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> sds_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> path_config_source:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> path: &amp;#34;/sds/xds-trusted-ca.json&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> resource_api_version: V3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> layered_runtime:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> layers:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: runtime-0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> rtds_layer:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> rtds_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ads: {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: runtime-0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use &lt;a href="https://gateway.envoyproxy.io/v0.4.0/user/egctl.html#validating-gateway-api-configuration">egctl translate&lt;/a>
to get the default xDS Bootstrap configuration used by Envoy Gateway.
After applying the config, the bootstrap config will be overridden by the new config you provided.
Any errors in the configuration will be surfaced as status within the &lt;code>GatewayClass&lt;/code> resource.
You can also validate this configuration using &lt;a href="https://gateway.envoyproxy.io/v0.4/user/egctl.html#validating-gateway-api-configuration">egctl translate&lt;/a>.&lt;/p></description></item><item><title>Docs: Customize EnvoyProxy</title><link>http://gateway.xunzhuo.cafe/docs/v0.5.0/user/customize-envoyproxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.5.0/user/customize-envoyproxy/</guid><description>
&lt;p>Envoy Gateway provides an &lt;a href="https://gateway.envoyproxy.io/v0.5.0/api/config_types.html#envoyproxy">EnvoyProxy&lt;/a> CRD that can be linked to the ParametersRef
in GatewayClass, allowing cluster admins to customize the managed EnvoyProxy Deployment and
Service. To learn more about GatewayClass and ParametersRef, please refer to &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API documentation&lt;/a>.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>Follow the steps from the &lt;a href="quickstart.md">Quickstart Guide&lt;/a> to install Envoy Gateway and the example manifest.
Before proceeding, you should be able to query the example backend using HTTP.&lt;/p>
&lt;h2 id="add-gatewayclass-parametersref">Add GatewayClass ParametersRef&lt;/h2>
&lt;p>First, you need to add ParametersRef in GatewayClass, and refer to EnvoyProxy Config:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: GatewayClass
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> controllerName: gateway.envoyproxy.io/gatewayclass-controller
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> parametersRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> group: config.gateway.envoyproxy.io
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="customize-envoyproxy-deployment-replicas">Customize EnvoyProxy Deployment Replicas&lt;/h2>
&lt;p>You can customize the EnvoyProxy Deployment Replicas via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: config.gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyDeployment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> replicas: 2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After you apply the config, you should see the replicas of envoyproxy changes to 2.
And also you can dynamically change the value.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl get deployment envoy-gateway
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="customize-envoyproxy-image">Customize EnvoyProxy Image&lt;/h2>
&lt;p>You can customize the EnvoyProxy Image via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: config.gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyDeployment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> container:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> image: envoyproxy/envoy:v1.25-v0.5.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After applying the config, you can get the deployment image, and see it has changed.&lt;/p>
&lt;h2 id="customize-envoyproxy-pod-annotations">Customize EnvoyProxy Pod Annotations&lt;/h2>
&lt;p>You can customize the EnvoyProxy Pod Annotations via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: config.gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyDeployment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> pod:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> annotations:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> custom1: deploy-annotation1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> custom2: deploy-annotation2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After applying the config, you can get the envoyproxy pods, and see new annotations has been added.&lt;/p>
&lt;h2 id="customize-envoyproxy-deployment-resources">Customize EnvoyProxy Deployment Resources&lt;/h2>
&lt;p>You can customize the EnvoyProxy Deployment Resources via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: config.gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyDeployment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> container:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> resources:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> requests:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> cpu: 150m
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> memory: 640Mi
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> limits:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> cpu: 500m
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> memory: 1Gi
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="customize-envoyproxy-deployment-env">Customize EnvoyProxy Deployment Env&lt;/h2>
&lt;p>You can customize the EnvoyProxy Deployment Env via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: config.gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyDeployment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> container:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> env:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: env_a
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> value: env_a_value
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: env_b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> value: env_b_value
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Envoy Gateway has provided two initial &lt;code>env&lt;/code> &lt;code>ENVOY_GATEWAY_NAMESPACE&lt;/code> and &lt;code>ENVOY_POD_NAME&lt;/code> for envoyproxy container.&lt;/p>
&lt;/blockquote>
&lt;p>After applying the config, you can get the envoyproxy deployment, and see resources has been changed.&lt;/p>
&lt;h2 id="customize-envoyproxy-deployment-volumes-or-volumemounts">Customize EnvoyProxy Deployment Volumes or VolumeMounts&lt;/h2>
&lt;p>You can customize the EnvoyProxy Deployment Volumes or VolumeMounts via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: config.gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyDeployment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> container:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> volumeMounts:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - mountPath: /certs
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: certs
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> readOnly: true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> pod:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> volumes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: certs
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> secret:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> secretName: envoy-cert
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After applying the config, you can get the envoyproxy deployment, and see resources has been changed.&lt;/p>
&lt;h2 id="customize-envoyproxy-service-annotations">Customize EnvoyProxy Service Annotations&lt;/h2>
&lt;p>You can customize the EnvoyProxy Service Annotations via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: config.gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kubernetes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoyService:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> annotations:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> custom1: svc-annotation1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> custom2: svc-annotation2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After applying the config, you can get the envoyproxy service, and see annotations has been added.&lt;/p>
&lt;h2 id="customize-envoyproxy-bootstrap-config">Customize EnvoyProxy Bootstrap Config&lt;/h2>
&lt;p>You can customize the EnvoyProxy Bootstrap Config via EnvoyProxy Config like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: config.gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyProxy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-proxy-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> bootstrap: |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> admin:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> access_log:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: envoy.access_loggers.file
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> typed_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> path: /dev/null
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> address:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> socket_address:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> address: 127.0.0.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port_value: 20000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> dynamic_resources:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ads_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> api_type: DELTA_GRPC
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> transport_api_version: V3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> grpc_services:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - envoy_grpc:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> cluster_name: xds_cluster
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> set_node_on_first_message_only: true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> lds_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ads: {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> resource_api_version: V3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> cds_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ads: {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> resource_api_version: V3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> static_resources:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> clusters:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - connect_timeout: 10s
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> load_assignment:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> cluster_name: xds_cluster
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> endpoints:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - lb_endpoints:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - endpoint:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> address:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> socket_address:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> address: envoy-gateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port_value: 18000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> typed_extension_protocol_options:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;@type&amp;#34;: &amp;#34;type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;explicit_http_config&amp;#34;:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;http2_protocol_options&amp;#34;: {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: xds_cluster
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: STRICT_DNS
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> transport_socket:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: envoy.transport_sockets.tls
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> typed_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;@type&amp;#34;: type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> common_tls_context:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> tls_params:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> tls_maximum_protocol_version: TLSv1_3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> tls_certificate_sds_secret_configs:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: xds_certificate
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> sds_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> path_config_source:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> path: &amp;#34;/sds/xds-certificate.json&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> resource_api_version: V3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> validation_context_sds_secret_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: xds_trusted_ca
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> sds_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> path_config_source:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> path: &amp;#34;/sds/xds-trusted-ca.json&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> resource_api_version: V3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> layered_runtime:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> layers:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: runtime-0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> rtds_layer:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> rtds_config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ads: {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> resource_api_version: V3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: runtime-0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use &lt;a href="https://gateway.envoyproxy.io/v0.5.0/user/egctl.html#validating-gateway-api-configuration">egctl translate&lt;/a>
to get the default xDS Bootstrap configuration used by Envoy Gateway.&lt;/p>
&lt;p>After applying the config, the bootstrap config will be overridden by the new config you provided.
Any errors in the configuration will be surfaced as status within the &lt;code>GatewayClass&lt;/code> resource.
You can also validate this configuration using &lt;a href="https://gateway.envoyproxy.io/v0.5.0/user/egctl.html#validating-gateway-api-configuration">egctl translate&lt;/a>.&lt;/p></description></item><item><title>Docs: Deployment Mode</title><link>http://gateway.xunzhuo.cafe/docs/latest/user/deployment-mode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/latest/user/deployment-mode/</guid><description>
&lt;h3 id="one-gatewayclass-per-envoy-gateway">One GatewayClass per Envoy Gateway&lt;/h3>
&lt;ul>
&lt;li>Envoy Gateway can accept a single &lt;a href="https://gateway-api.sigs.k8s.io/api-types/gatewayclass/">GatewayClass&lt;/a>
resource. If you&amp;rsquo;ve instantiated multiple GatewayClasses, we recommend running multiple Envoy Gateway controllers
in different namespaces, linking a GatewayClass to each of them.&lt;/li>
&lt;li>Support for accepting multiple GatewayClass is being tracked &lt;a href="https://github.com/envoyproxy/gateway/issues/1231">here&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h3 id="supported-modes">Supported Modes&lt;/h3>
&lt;h4 id="kubernetes">Kubernetes&lt;/h4>
&lt;ul>
&lt;li>The default deployment model is - Envoy Gateway &lt;strong>watches&lt;/strong> for resources such a &lt;code>Service&lt;/code> &amp;amp; &lt;code>HTTPRoute&lt;/code> in &lt;strong>all&lt;/strong> namespaces
and &lt;strong>creates&lt;/strong> managed data plane resources such as EnvoyProxy &lt;code>Deployment&lt;/code> in the &lt;strong>namespace where Envoy Gateway is running&lt;/strong>.&lt;/li>
&lt;li>Envoy Gateway also supports &lt;strong>Namespaced&lt;/strong> deployment mode, you can watch resources in the specific namespaces by assigning
&lt;code>EnvoyGateway.provider.kubernetes.watch.namespaces&lt;/code> and &lt;strong>creates&lt;/strong> managed data plane resources in the &lt;strong>namespace where Envoy Gateway is running&lt;/strong>.&lt;/li>
&lt;li>Support for alternate deployment modes is being tracked &lt;a href="https://github.com/envoyproxy/gateway/issues/1117">here&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h3 id="multi-tenancy">Multi-tenancy&lt;/h3>
&lt;h4 id="kubernetes-1">Kubernetes&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>A &lt;code>tenant&lt;/code> is a group within an organization (e.g. a team or department) who shares organizational resources. We recommend
each &lt;code>tenant&lt;/code> deploy their own Envoy Gateway controller in their respective &lt;code>namespace&lt;/code>. Below is an example of deploying Envoy Gateway
by the &lt;code>marketing&lt;/code> and &lt;code>product&lt;/code> teams in separate namespaces.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Lets deploy Envoy Gateway in the &lt;code>marketing&lt;/code> namespace and also watch resources only in this namespace. We are also setting the controller name to a unique string here &lt;code>gateway.envoyproxy.io/marketing-gatewayclass-controller&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>helm install --set config.envoyGateway.gateway.controllerName=gateway.envoyproxy.io/marketing-gatewayclass-controller --set config.envoyGateway.provider.kubernetes.watch.namespaces={marketing} eg-marketing oci://docker.io/envoyproxy/gateway-helm --version v0.0.0-latest -n marketing --create-namespace
&lt;/code>&lt;/pre>&lt;p>Lets create a &lt;code>GatewayClass&lt;/code> linked to the marketing team&amp;rsquo;s Envoy Gateway controller, and as well other resources linked to it, so the &lt;code>backend&lt;/code> application operated by this team can be exposed to external clients.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: GatewayClass
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg-marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> controllerName: gateway.envoyproxy.io/marketing-gatewayclass-controller
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Gateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> gatewayClassName: eg-marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> listeners:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: http
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> protocol: HTTP
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 8080
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: ServiceAccount
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Service
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> service: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ports:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: http
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> targetPort: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: apps/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Deployment
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> replicas: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> matchLabels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> version: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> template:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> version: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> serviceAccountName: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> containers:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - image: gcr.io/k8s-staging-ingressconformance/echoserver:v20221109-7ee2f3e
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> imagePullPolicy: IfNotPresent
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ports:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - containerPort: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> env:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: POD_NAME
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> valueFrom:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldPath: metadata.name
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: NAMESPACE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> valueFrom:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldPath: metadata.namespace
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: HTTPRoute
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> parentRefs:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: eg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> hostnames:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - &amp;#34;www.marketing.example.com&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> rules:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - backendRefs:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - group: &amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kind: Service
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> weight: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> matches:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - path:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: PathPrefix
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> value: /
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets port forward to the generated envoy proxy service in the &lt;code>marketing&lt;/code> namespace and send a request to it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get svc -n marketing --selector&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gateway.envoyproxy.io/owning-gateway-namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>marketing,gateway.envoyproxy.io/owning-gateway-name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>eg -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl -n marketing port-forward service/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> 8888:8080 &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.marketing.example.com&amp;#34;&lt;/span> http://localhost:8888/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>* Trying 127.0.0.1:8888...
* Connected to localhost (127.0.0.1) port 8888 (#0)
&amp;gt; GET /get HTTP/1.1
&amp;gt; Host: www.marketing.example.com
&amp;gt; User-Agent: curl/7.86.0
&amp;gt; Accept: */*
&amp;gt;
Handling connection for 8888
* Mark bundle as not supporting multiuse
&amp;lt; HTTP/1.1 200 OK
&amp;lt; content-type: application/json
&amp;lt; x-content-type-options: nosniff
&amp;lt; date: Thu, 20 Apr 2023 19:19:42 GMT
&amp;lt; content-length: 521
&amp;lt; x-envoy-upstream-service-time: 0
&amp;lt; server: envoy
&amp;lt;
{
&amp;#34;path&amp;#34;: &amp;#34;/get&amp;#34;,
&amp;#34;host&amp;#34;: &amp;#34;www.marketing.example.com&amp;#34;,
&amp;#34;method&amp;#34;: &amp;#34;GET&amp;#34;,
&amp;#34;proto&amp;#34;: &amp;#34;HTTP/1.1&amp;#34;,
&amp;#34;headers&amp;#34;: {
&amp;#34;Accept&amp;#34;: [
&amp;#34;*/*&amp;#34;
],
&amp;#34;User-Agent&amp;#34;: [
&amp;#34;curl/7.86.0&amp;#34;
],
&amp;#34;X-Envoy-Expected-Rq-Timeout-Ms&amp;#34;: [
&amp;#34;15000&amp;#34;
],
&amp;#34;X-Envoy-Internal&amp;#34;: [
&amp;#34;true&amp;#34;
],
&amp;#34;X-Forwarded-For&amp;#34;: [
&amp;#34;10.1.0.157&amp;#34;
],
&amp;#34;X-Forwarded-Proto&amp;#34;: [
&amp;#34;http&amp;#34;
],
&amp;#34;X-Request-Id&amp;#34;: [
&amp;#34;c637977c-458a-48ae-92b3-f8c429849322&amp;#34;
]
},
&amp;#34;namespace&amp;#34;: &amp;#34;marketing&amp;#34;,
&amp;#34;ingress&amp;#34;: &amp;#34;&amp;#34;,
&amp;#34;service&amp;#34;: &amp;#34;&amp;#34;,
&amp;#34;pod&amp;#34;: &amp;#34;backend-74888f465f-bcs8f&amp;#34;
* Connection #0 to host localhost left intact
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Lets deploy Envoy Gateway in the &lt;code>product&lt;/code> namespace and also watch resources only in this namespace.&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>helm install --set config.envoyGateway.gateway.controllerName=gateway.envoyproxy.io/product-gatewayclass-controller --set config.envoyGateway.provider.kubernetes.watch.namespaces={product} eg-product oci://docker.io/envoyproxy/gateway-helm --version v0.0.0-latest -n product --create-namespace
&lt;/code>&lt;/pre>&lt;p>Lets create a &lt;code>GatewayClass&lt;/code> linked to the product team&amp;rsquo;s Envoy Gateway controller, and as well other resources linked to it, so the &lt;code>backend&lt;/code> application operated by this team can be exposed to external clients.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: GatewayClass
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg-product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> controllerName: gateway.envoyproxy.io/product-gatewayclass-controller
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Gateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> gatewayClassName: eg-product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> listeners:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: http
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> protocol: HTTP
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 8080
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: ServiceAccount
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Service
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> service: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ports:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: http
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> targetPort: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: apps/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Deployment
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> replicas: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> matchLabels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> version: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> template:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> version: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> serviceAccountName: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> containers:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - image: gcr.io/k8s-staging-ingressconformance/echoserver:v20221109-7ee2f3e
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> imagePullPolicy: IfNotPresent
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ports:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - containerPort: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> env:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: POD_NAME
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> valueFrom:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldPath: metadata.name
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: NAMESPACE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> valueFrom:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldPath: metadata.namespace
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: HTTPRoute
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> parentRefs:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: eg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> hostnames:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - &amp;#34;www.product.example.com&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> rules:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - backendRefs:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - group: &amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kind: Service
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> weight: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> matches:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - path:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: PathPrefix
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> value: /
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets port forward to the generated envoy proxy service in the &lt;code>product&lt;/code> namespace and send a request to it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get svc -n product --selector&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gateway.envoyproxy.io/owning-gateway-namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>product,gateway.envoyproxy.io/owning-gateway-name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>eg -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl -n product port-forward service/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> 8889:8080 &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.product.example.com&amp;#34;&lt;/span> http://localhost:8889/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>* Trying 127.0.0.1:8889...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Connected to localhost &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>127.0.0.1&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> port &lt;span style="color:#0000cf;font-weight:bold">8889&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#8f5902;font-style:italic">#0)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; GET /get HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; Host: www.product.example.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; User-Agent: curl/7.86.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; Accept: */*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Handling connection &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">8889&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Mark bundle as not supporting multiuse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; HTTP/1.1 &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span> OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; content-type: application/json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; x-content-type-options: nosniff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; date: Thu, &lt;span style="color:#0000cf;font-weight:bold">20&lt;/span> Apr &lt;span style="color:#0000cf;font-weight:bold">2023&lt;/span> 19:20:17 GMT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; content-length: &lt;span style="color:#0000cf;font-weight:bold">517&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; x-envoy-upstream-service-time: &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; server: envoy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;/get&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;host&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;www.product.example.com&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;method&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;GET&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;proto&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;HTTP/1.1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;headers&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Accept&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;*/*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;User-Agent&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;curl/7.86.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;X-Envoy-Expected-Rq-Timeout-Ms&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;15000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;X-Envoy-Internal&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;X-Forwarded-For&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;10.1.0.156&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;X-Forwarded-Proto&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;http&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;X-Request-Id&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;39196453-2250-4331-b756-54003b2853c2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;namespace&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;product&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ingress&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;service&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;pod&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;backend-74888f465f-64fjs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Connection &lt;span style="color:#8f5902;font-style:italic">#0 to host localhost left intact&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With the below command you can ensure that you are no able to access the marketing team&amp;rsquo;s backend exposed using the &lt;code>www.marketing.example.com&lt;/code> hostname
and the product team&amp;rsquo;s data plane.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.marketing.example.com&amp;#34;&lt;/span> http://localhost:8889/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>* Trying 127.0.0.1:8889...
* Connected to localhost (127.0.0.1) port 8889 (#0)
&amp;gt; GET /get HTTP/1.1
&amp;gt; Host: www.marketing.example.com
&amp;gt; User-Agent: curl/7.86.0
&amp;gt; Accept: */*
&amp;gt;
Handling connection for 8889
* Mark bundle as not supporting multiuse
&amp;lt; HTTP/1.1 404 Not Found
&amp;lt; date: Thu, 20 Apr 2023 19:22:13 GMT
&amp;lt; server: envoy
&amp;lt; content-length: 0
&amp;lt;
* Connection #0 to host localhost left intact
&lt;/code>&lt;/pre></description></item><item><title>Docs: Deployment Mode</title><link>http://gateway.xunzhuo.cafe/docs/v0.4.0/user/deployment-mode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.4.0/user/deployment-mode/</guid><description>
&lt;h3 id="one-gatewayclass-per-envoy-gateway">One GatewayClass per Envoy Gateway&lt;/h3>
&lt;ul>
&lt;li>Envoy Gateway can accept a single &lt;a href="https://gateway-api.sigs.k8s.io/api-types/gatewayclass/">GatewayClass&lt;/a>
resource. If you&amp;rsquo;ve instantiated multiple GatewayClasses, we recommend running multiple Envoy Gateway controllers
in different namespaces, linking a GatewayClass to each of them.&lt;/li>
&lt;li>Support for accepting multiple GatewayClass is being tracked &lt;a href="https://github.com/envoyproxy/gateway/issues/1231">here&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h3 id="supported-modes">Supported Modes&lt;/h3>
&lt;h4 id="kubernetes">Kubernetes&lt;/h4>
&lt;ul>
&lt;li>The current deployment model is - Envoy Gateway &lt;strong>watches&lt;/strong> for resources such a &lt;code>Service&lt;/code> &amp;amp; &lt;code>HTTPRoute&lt;/code> in &lt;strong>all&lt;/strong> namespaces
and &lt;strong>creates&lt;/strong> managed data plane resources such as EnvoyProxy &lt;code>Deployment&lt;/code> in the &lt;strong>namespace where Envoy Gateway is running&lt;/strong>.&lt;/li>
&lt;li>Support for alternate deployment modes is being tracked &lt;a href="https://github.com/envoyproxy/gateway/issues/1117">here&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h3 id="multi-tenancy">Multi-tenancy&lt;/h3>
&lt;h4 id="kubernetes-1">Kubernetes&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>A &lt;code>tenant&lt;/code> is a group within an organization (e.g. a team or department) who shares organizational resources. We recommend
each &lt;code>tenant&lt;/code> deploy their own Envoy Gateway controller in their respective &lt;code>namespace&lt;/code>. Below is an example of deploying Envoy Gateway
by the &lt;code>marketing&lt;/code> and &lt;code>product&lt;/code> teams in separate namespaces.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Lets deploy Envoy Gateway in the &lt;code>marketing&lt;/code> namespace. We are also setting the controller name to a unique string here &lt;code>gateway.envoyproxy.io/marketing-gatewayclass-controller&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>helm install --set config.envoyGateway.gateway.controllerName=gateway.envoyproxy.io/marketing-gatewayclass-controller eg-marketing oci://docker.io/envoyproxy/gateway-helm --version v0.4.0 -n marketing --create-namespace
&lt;/code>&lt;/pre>&lt;p>Lets create a &lt;code>GatewayClass&lt;/code> linked to the marketing team&amp;rsquo;s Envoy Gateway controller, and as well other resources linked to it, so the &lt;code>backend&lt;/code> application operated by this team can be exposed to external clients.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: GatewayClass
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg-marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> controllerName: gateway.envoyproxy.io/marketing-gatewayclass-controller
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Gateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> gatewayClassName: eg-marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> listeners:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: http
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> protocol: HTTP
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 8080
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: ServiceAccount
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Service
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> service: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ports:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: http
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> targetPort: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: apps/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Deployment
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> replicas: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> matchLabels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> version: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> template:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> version: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> serviceAccountName: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> containers:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - image: gcr.io/k8s-staging-ingressconformance/echoserver:v20221109-7ee2f3e
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> imagePullPolicy: IfNotPresent
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ports:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - containerPort: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> env:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: POD_NAME
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> valueFrom:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldPath: metadata.name
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: NAMESPACE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> valueFrom:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldPath: metadata.namespace
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: HTTPRoute
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> parentRefs:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: eg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> hostnames:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - &amp;#34;www.marketing.example.com&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> rules:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - backendRefs:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - group: &amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kind: Service
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> weight: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> matches:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - path:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: PathPrefix
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> value: /
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets port forward to the generated envoy proxy service in the &lt;code>marketing&lt;/code> namespace and send a request to it&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get svc -n marketing --selector&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gateway.envoyproxy.io/owning-gateway-namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>marketing,gateway.envoyproxy.io/owning-gateway-name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>eg -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl -n marketing port-forward service/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> 8888:8080 &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.marketing.example.com&amp;#34;&lt;/span> http://localhost:8888/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>* Trying 127.0.0.1:8888...
* Connected to localhost (127.0.0.1) port 8888 (#0)
&amp;gt; GET /get HTTP/1.1
&amp;gt; Host: www.marketing.example.com
&amp;gt; User-Agent: curl/7.86.0
&amp;gt; Accept: */*
&amp;gt;
Handling connection for 8888
* Mark bundle as not supporting multiuse
&amp;lt; HTTP/1.1 200 OK
&amp;lt; content-type: application/json
&amp;lt; x-content-type-options: nosniff
&amp;lt; date: Thu, 20 Apr 2023 19:19:42 GMT
&amp;lt; content-length: 521
&amp;lt; x-envoy-upstream-service-time: 0
&amp;lt; server: envoy
&amp;lt;
{
&amp;#34;path&amp;#34;: &amp;#34;/get&amp;#34;,
&amp;#34;host&amp;#34;: &amp;#34;www.marketing.example.com&amp;#34;,
&amp;#34;method&amp;#34;: &amp;#34;GET&amp;#34;,
&amp;#34;proto&amp;#34;: &amp;#34;HTTP/1.1&amp;#34;,
&amp;#34;headers&amp;#34;: {
&amp;#34;Accept&amp;#34;: [
&amp;#34;*/*&amp;#34;
],
&amp;#34;User-Agent&amp;#34;: [
&amp;#34;curl/7.86.0&amp;#34;
],
&amp;#34;X-Envoy-Expected-Rq-Timeout-Ms&amp;#34;: [
&amp;#34;15000&amp;#34;
],
&amp;#34;X-Envoy-Internal&amp;#34;: [
&amp;#34;true&amp;#34;
],
&amp;#34;X-Forwarded-For&amp;#34;: [
&amp;#34;10.1.0.157&amp;#34;
],
&amp;#34;X-Forwarded-Proto&amp;#34;: [
&amp;#34;http&amp;#34;
],
&amp;#34;X-Request-Id&amp;#34;: [
&amp;#34;c637977c-458a-48ae-92b3-f8c429849322&amp;#34;
]
},
&amp;#34;namespace&amp;#34;: &amp;#34;marketing&amp;#34;,
&amp;#34;ingress&amp;#34;: &amp;#34;&amp;#34;,
&amp;#34;service&amp;#34;: &amp;#34;&amp;#34;,
&amp;#34;pod&amp;#34;: &amp;#34;backend-74888f465f-bcs8f&amp;#34;
* Connection #0 to host localhost left intact
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Lets deploy Envoy Gateway in the &lt;code>product&lt;/code> namespace&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>helm install --set config.envoyGateway.gateway.controllerName=gateway.envoyproxy.io/product-gatewayclass-controller eg-product oci://docker.io/envoyproxy/gateway-helm --version v0.4.0 -n product --create-namespace
&lt;/code>&lt;/pre>&lt;p>Lets create a &lt;code>GatewayClass&lt;/code> linked to the product team&amp;rsquo;s Envoy Gateway controller, and as well other resources linked to it, so the &lt;code>backend&lt;/code> application operated by this team can be exposed to external clients.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: GatewayClass
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg-product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> controllerName: gateway.envoyproxy.io/product-gatewayclass-controller
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Gateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> gatewayClassName: eg-product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> listeners:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: http
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> protocol: HTTP
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 8080
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: ServiceAccount
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Service
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> service: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ports:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: http
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> targetPort: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: apps/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Deployment
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> replicas: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> matchLabels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> version: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> template:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> version: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> serviceAccountName: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> containers:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - image: gcr.io/k8s-staging-ingressconformance/echoserver:v20221109-7ee2f3e
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> imagePullPolicy: IfNotPresent
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ports:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - containerPort: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> env:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: POD_NAME
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> valueFrom:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldPath: metadata.name
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: NAMESPACE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> valueFrom:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldPath: metadata.namespace
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: HTTPRoute
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> parentRefs:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: eg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> hostnames:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - &amp;#34;www.product.example.com&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> rules:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - backendRefs:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - group: &amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kind: Service
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> weight: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> matches:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - path:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: PathPrefix
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> value: /
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets port forward to the generated envoy proxy service in the &lt;code>product&lt;/code> namespace and send a request to it&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get svc -n product --selector&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gateway.envoyproxy.io/owning-gateway-namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>product,gateway.envoyproxy.io/owning-gateway-name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>eg -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl -n product port-forward service/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> 8889:8080 &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.product.example.com&amp;#34;&lt;/span> http://localhost:8889/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>* Trying 127.0.0.1:8889...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Connected to localhost &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>127.0.0.1&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> port &lt;span style="color:#0000cf;font-weight:bold">8889&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#8f5902;font-style:italic">#0)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; GET /get HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; Host: www.product.example.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; User-Agent: curl/7.86.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; Accept: */*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Handling connection &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">8889&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Mark bundle as not supporting multiuse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; HTTP/1.1 &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span> OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; content-type: application/json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; x-content-type-options: nosniff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; date: Thu, &lt;span style="color:#0000cf;font-weight:bold">20&lt;/span> Apr &lt;span style="color:#0000cf;font-weight:bold">2023&lt;/span> 19:20:17 GMT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; content-length: &lt;span style="color:#0000cf;font-weight:bold">517&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; x-envoy-upstream-service-time: &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; server: envoy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;/get&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;host&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;www.product.example.com&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;method&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;GET&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;proto&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;HTTP/1.1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;headers&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Accept&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;*/*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;User-Agent&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;curl/7.86.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;X-Envoy-Expected-Rq-Timeout-Ms&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;15000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;X-Envoy-Internal&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;X-Forwarded-For&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;10.1.0.156&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;X-Forwarded-Proto&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;http&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;X-Request-Id&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;39196453-2250-4331-b756-54003b2853c2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;namespace&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;product&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ingress&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;service&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;pod&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;backend-74888f465f-64fjs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Connection &lt;span style="color:#8f5902;font-style:italic">#0 to host localhost left intact&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With the below command you can ensure that you are no able to access the marketing team&amp;rsquo;s backend exposed using the &lt;code>www.marketing.example.com&lt;/code> hostname
and the product team&amp;rsquo;s data plane.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.marketing.example.com&amp;#34;&lt;/span> http://localhost:8889/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>* Trying 127.0.0.1:8889...
* Connected to localhost (127.0.0.1) port 8889 (#0)
&amp;gt; GET /get HTTP/1.1
&amp;gt; Host: www.marketing.example.com
&amp;gt; User-Agent: curl/7.86.0
&amp;gt; Accept: */*
&amp;gt;
Handling connection for 8889
* Mark bundle as not supporting multiuse
&amp;lt; HTTP/1.1 404 Not Found
&amp;lt; date: Thu, 20 Apr 2023 19:22:13 GMT
&amp;lt; server: envoy
&amp;lt; content-length: 0
&amp;lt;
* Connection #0 to host localhost left intact
&lt;/code>&lt;/pre></description></item><item><title>Docs: Deployment Mode</title><link>http://gateway.xunzhuo.cafe/docs/v0.5.0/user/deployment-mode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.5.0/user/deployment-mode/</guid><description>
&lt;h3 id="one-gatewayclass-per-envoy-gateway">One GatewayClass per Envoy Gateway&lt;/h3>
&lt;ul>
&lt;li>Envoy Gateway can accept a single &lt;a href="https://gateway-api.sigs.k8s.io/api-types/gatewayclass/">GatewayClass&lt;/a>
resource. If you&amp;rsquo;ve instantiated multiple GatewayClasses, we recommend running multiple Envoy Gateway controllers
in different namespaces, linking a GatewayClass to each of them.&lt;/li>
&lt;li>Support for accepting multiple GatewayClass is being tracked &lt;a href="https://github.com/envoyproxy/gateway/issues/1231">here&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h3 id="supported-modes">Supported Modes&lt;/h3>
&lt;h4 id="kubernetes">Kubernetes&lt;/h4>
&lt;ul>
&lt;li>The current deployment model is - Envoy Gateway &lt;strong>watches&lt;/strong> for resources such a &lt;code>Service&lt;/code> &amp;amp; &lt;code>HTTPRoute&lt;/code> in &lt;strong>all&lt;/strong> namespaces
and &lt;strong>creates&lt;/strong> managed data plane resources such as EnvoyProxy &lt;code>Deployment&lt;/code> in the &lt;strong>namespace where Envoy Gateway is running&lt;/strong>.&lt;/li>
&lt;li>Support for alternate deployment modes is being tracked &lt;a href="https://github.com/envoyproxy/gateway/issues/1117">here&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h3 id="multi-tenancy">Multi-tenancy&lt;/h3>
&lt;h4 id="kubernetes-1">Kubernetes&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>A &lt;code>tenant&lt;/code> is a group within an organization (e.g. a team or department) who shares organizational resources. We recommend
each &lt;code>tenant&lt;/code> deploy their own Envoy Gateway controller in their respective &lt;code>namespace&lt;/code>. Below is an example of deploying Envoy Gateway
by the &lt;code>marketing&lt;/code> and &lt;code>product&lt;/code> teams in separate namespaces.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Lets deploy Envoy Gateway in the &lt;code>marketing&lt;/code> namespace. We are also setting the controller name to a unique string here &lt;code>gateway.envoyproxy.io/marketing-gatewayclass-controller&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>helm install --set config.envoyGateway.gateway.controllerName=gateway.envoyproxy.io/marketing-gatewayclass-controller eg-marketing oci://docker.io/envoyproxy/gateway-helm --version v0.5.0 -n marketing --create-namespace
&lt;/code>&lt;/pre>&lt;p>Lets create a &lt;code>GatewayClass&lt;/code> linked to the marketing team&amp;rsquo;s Envoy Gateway controller, and as well other resources linked to it, so the &lt;code>backend&lt;/code> application operated by this team can be exposed to external clients.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: GatewayClass
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg-marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> controllerName: gateway.envoyproxy.io/marketing-gatewayclass-controller
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Gateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> gatewayClassName: eg-marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> listeners:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: http
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> protocol: HTTP
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 8080
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: ServiceAccount
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Service
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> service: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ports:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: http
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> targetPort: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: apps/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Deployment
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> replicas: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> matchLabels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> version: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> template:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> version: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> serviceAccountName: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> containers:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - image: gcr.io/k8s-staging-ingressconformance/echoserver:v20221109-7ee2f3e
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> imagePullPolicy: IfNotPresent
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ports:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - containerPort: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> env:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: POD_NAME
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> valueFrom:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldPath: metadata.name
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: NAMESPACE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> valueFrom:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldPath: metadata.namespace
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: HTTPRoute
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: marketing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> parentRefs:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: eg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> hostnames:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - &amp;#34;www.marketing.example.com&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> rules:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - backendRefs:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - group: &amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kind: Service
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> weight: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> matches:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - path:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: PathPrefix
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> value: /
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets port forward to the generated envoy proxy service in the &lt;code>marketing&lt;/code> namespace and send a request to it&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get svc -n marketing --selector&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gateway.envoyproxy.io/owning-gateway-namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>marketing,gateway.envoyproxy.io/owning-gateway-name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>eg -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl -n marketing port-forward service/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> 8888:8080 &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.marketing.example.com&amp;#34;&lt;/span> http://localhost:8888/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>* Trying 127.0.0.1:8888...
* Connected to localhost (127.0.0.1) port 8888 (#0)
&amp;gt; GET /get HTTP/1.1
&amp;gt; Host: www.marketing.example.com
&amp;gt; User-Agent: curl/7.86.0
&amp;gt; Accept: */*
&amp;gt;
Handling connection for 8888
* Mark bundle as not supporting multiuse
&amp;lt; HTTP/1.1 200 OK
&amp;lt; content-type: application/json
&amp;lt; x-content-type-options: nosniff
&amp;lt; date: Thu, 20 Apr 2023 19:19:42 GMT
&amp;lt; content-length: 521
&amp;lt; x-envoy-upstream-service-time: 0
&amp;lt; server: envoy
&amp;lt;
{
&amp;#34;path&amp;#34;: &amp;#34;/get&amp;#34;,
&amp;#34;host&amp;#34;: &amp;#34;www.marketing.example.com&amp;#34;,
&amp;#34;method&amp;#34;: &amp;#34;GET&amp;#34;,
&amp;#34;proto&amp;#34;: &amp;#34;HTTP/1.1&amp;#34;,
&amp;#34;headers&amp;#34;: {
&amp;#34;Accept&amp;#34;: [
&amp;#34;*/*&amp;#34;
],
&amp;#34;User-Agent&amp;#34;: [
&amp;#34;curl/7.86.0&amp;#34;
],
&amp;#34;X-Envoy-Expected-Rq-Timeout-Ms&amp;#34;: [
&amp;#34;15000&amp;#34;
],
&amp;#34;X-Envoy-Internal&amp;#34;: [
&amp;#34;true&amp;#34;
],
&amp;#34;X-Forwarded-For&amp;#34;: [
&amp;#34;10.1.0.157&amp;#34;
],
&amp;#34;X-Forwarded-Proto&amp;#34;: [
&amp;#34;http&amp;#34;
],
&amp;#34;X-Request-Id&amp;#34;: [
&amp;#34;c637977c-458a-48ae-92b3-f8c429849322&amp;#34;
]
},
&amp;#34;namespace&amp;#34;: &amp;#34;marketing&amp;#34;,
&amp;#34;ingress&amp;#34;: &amp;#34;&amp;#34;,
&amp;#34;service&amp;#34;: &amp;#34;&amp;#34;,
&amp;#34;pod&amp;#34;: &amp;#34;backend-74888f465f-bcs8f&amp;#34;
* Connection #0 to host localhost left intact
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Lets deploy Envoy Gateway in the &lt;code>product&lt;/code> namespace&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>helm install --set config.envoyGateway.gateway.controllerName=gateway.envoyproxy.io/product-gatewayclass-controller eg-product oci://docker.io/envoyproxy/gateway-helm --version v0.5.0 -n product --create-namespace
&lt;/code>&lt;/pre>&lt;p>Lets create a &lt;code>GatewayClass&lt;/code> linked to the product team&amp;rsquo;s Envoy Gateway controller, and as well other resources linked to it, so the &lt;code>backend&lt;/code> application operated by this team can be exposed to external clients.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: GatewayClass
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg-product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> controllerName: gateway.envoyproxy.io/product-gatewayclass-controller
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Gateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> gatewayClassName: eg-product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> listeners:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: http
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> protocol: HTTP
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 8080
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: ServiceAccount
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Service
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> service: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ports:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: http
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> targetPort: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: apps/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: Deployment
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> replicas: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> matchLabels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> version: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> template:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> app: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> version: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> serviceAccountName: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> containers:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - image: gcr.io/k8s-staging-ingressconformance/echoserver:v20221109-7ee2f3e
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> imagePullPolicy: IfNotPresent
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ports:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - containerPort: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> env:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: POD_NAME
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> valueFrom:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldPath: metadata.name
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: NAMESPACE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> valueFrom:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> fieldPath: metadata.namespace
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.networking.k8s.io/v1beta1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: HTTPRoute
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: product
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> parentRefs:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - name: eg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> hostnames:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - &amp;#34;www.product.example.com&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> rules:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - backendRefs:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - group: &amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kind: Service
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: backend
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> port: 3000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> weight: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> matches:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - path:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: PathPrefix
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> value: /
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets port forward to the generated envoy proxy service in the &lt;code>product&lt;/code> namespace and send a request to it&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get svc -n product --selector&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gateway.envoyproxy.io/owning-gateway-namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>product,gateway.envoyproxy.io/owning-gateway-name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>eg -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl -n product port-forward service/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_SERVICE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> 8889:8080 &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.product.example.com&amp;#34;&lt;/span> http://localhost:8889/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>* Trying 127.0.0.1:8889...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Connected to localhost &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>127.0.0.1&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> port &lt;span style="color:#0000cf;font-weight:bold">8889&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#8f5902;font-style:italic">#0)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; GET /get HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; Host: www.product.example.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; User-Agent: curl/7.86.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; Accept: */*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Handling connection &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">8889&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Mark bundle as not supporting multiuse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; HTTP/1.1 &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span> OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; content-type: application/json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; x-content-type-options: nosniff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; date: Thu, &lt;span style="color:#0000cf;font-weight:bold">20&lt;/span> Apr &lt;span style="color:#0000cf;font-weight:bold">2023&lt;/span> 19:20:17 GMT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; content-length: &lt;span style="color:#0000cf;font-weight:bold">517&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; x-envoy-upstream-service-time: &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; server: envoy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;/get&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;host&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;www.product.example.com&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;method&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;GET&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;proto&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;HTTP/1.1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;headers&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Accept&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;*/*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;User-Agent&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;curl/7.86.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;X-Envoy-Expected-Rq-Timeout-Ms&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;15000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;X-Envoy-Internal&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;X-Forwarded-For&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;10.1.0.156&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;X-Forwarded-Proto&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;http&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;X-Request-Id&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;39196453-2250-4331-b756-54003b2853c2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;namespace&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;product&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ingress&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;service&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;pod&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;backend-74888f465f-64fjs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Connection &lt;span style="color:#8f5902;font-style:italic">#0 to host localhost left intact&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With the below command you can ensure that you are no able to access the marketing team&amp;rsquo;s backend exposed using the &lt;code>www.marketing.example.com&lt;/code> hostname
and the product team&amp;rsquo;s data plane.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl --verbose --header &lt;span style="color:#4e9a06">&amp;#34;Host: www.marketing.example.com&amp;#34;&lt;/span> http://localhost:8889/get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>* Trying 127.0.0.1:8889...
* Connected to localhost (127.0.0.1) port 8889 (#0)
&amp;gt; GET /get HTTP/1.1
&amp;gt; Host: www.marketing.example.com
&amp;gt; User-Agent: curl/7.86.0
&amp;gt; Accept: */*
&amp;gt;
Handling connection for 8889
* Mark bundle as not supporting multiuse
&amp;lt; HTTP/1.1 404 Not Found
&amp;lt; date: Thu, 20 Apr 2023 19:22:13 GMT
&amp;lt; server: envoy
&amp;lt; content-length: 0
&amp;lt;
* Connection #0 to host localhost left intact
&lt;/code>&lt;/pre></description></item><item><title>Docs: Developer Guide</title><link>http://gateway.xunzhuo.cafe/docs/latest/dev/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/latest/dev/readme/</guid><description>
&lt;p>Envoy Gateway is built using a &lt;a href="https://www.gnu.org/software/make/">make&lt;/a>-based build system. Our CI is based on &lt;a href="https://docs.github.com/en/actions">Github Actions&lt;/a> using &lt;a href="https://github.com/envoyproxy/gateway/tree/main/.github/workflows">workflows&lt;/a>.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;h3 id="go">go&lt;/h3>
&lt;ul>
&lt;li>Version: 1.20&lt;/li>
&lt;li>Installation Guide: &lt;a href="https://go.dev/doc/install">https://go.dev/doc/install&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="make">make&lt;/h3>
&lt;ul>
&lt;li>Recommended Version: 4.0 or later&lt;/li>
&lt;li>Installation Guide: &lt;a href="https://www.gnu.org/software/make">https://www.gnu.org/software/make&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="docker">docker&lt;/h3>
&lt;ul>
&lt;li>Optional when you want to build a Docker image or run &lt;code>make&lt;/code> inside Docker.&lt;/li>
&lt;li>Recommended Version: 20.10.16&lt;/li>
&lt;li>Installation Guide: &lt;a href="https://docs.docker.com/engine/install">https://docs.docker.com/engine/install&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="python3">python3&lt;/h3>
&lt;ul>
&lt;li>Need a &lt;code>python3&lt;/code> program&lt;/li>
&lt;li>Must have a functioning &lt;code>venv&lt;/code> module; this is part of the standard
library, but some distributions (such as Debian and Ubuntu) replace
it with a stub and require you to install a &lt;code>python3-venv&lt;/code> package
separately.&lt;/li>
&lt;/ul>
&lt;h2 id="quickstart">Quickstart&lt;/h2>
&lt;ul>
&lt;li>Run &lt;code>make help&lt;/code> to see all the available targets to build, test and run Envoy Gateway.&lt;/li>
&lt;/ul>
&lt;h3 id="building">Building&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make build&lt;/code> to build all the binaries.&lt;/li>
&lt;li>Run &lt;code>make build BINS=&amp;quot;envoy-gateway&amp;quot;&lt;/code> to build the Envoy Gateway binary.&lt;/li>
&lt;li>Run &lt;code>make build BINS=&amp;quot;egctl&amp;quot;&lt;/code> to build the egctl binary.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> The binaries get generated in the &lt;code>bin/$OS/$ARCH&lt;/code> directory, for example, &lt;code>bin/linux/amd64/&lt;/code>.&lt;/p>
&lt;h3 id="testing">Testing&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Run &lt;code>make test&lt;/code> to run the golang tests.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Run &lt;code>make testdata&lt;/code> to generate the golden YAML testdata files.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="running-linters">Running Linters&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make lint&lt;/code> to make sure your code passes all the linter checks.
&lt;strong>Note:&lt;/strong> The &lt;code>golangci-lint&lt;/code> configuration resides &lt;a href="https://github.com/envoyproxy/gateway/blob/main/tools/linter/golangci-lint/.golangci.yml">here&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h3 id="building-and-pushing-the-image">Building and Pushing the Image&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>IMAGE=docker.io/you/gateway-dev make image&lt;/code> to build the docker image.&lt;/li>
&lt;li>Run &lt;code>IMAGE=docker.io/you/gateway-dev make push-multiarch&lt;/code> to build and push the multi-arch docker image.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> Replace &lt;code>IMAGE&lt;/code> with your registry&amp;rsquo;s image name.&lt;/p>
&lt;h3 id="deploying-envoy-gateway-for-testdev">Deploying Envoy Gateway for Test/Dev&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make create-cluster&lt;/code> to create a &lt;a href="https://kind.sigs.k8s.io/">Kind&lt;/a> cluster.&lt;/li>
&lt;/ul>
&lt;h4 id="option-1-use-the-latest-gateway-dev-image">Option 1: Use the Latest &lt;a href="https://hub.docker.com/r/envoyproxy/gateway-dev/tags">gateway-dev&lt;/a> Image&lt;/h4>
&lt;ul>
&lt;li>Run &lt;code>TAG=latest make kube-deploy&lt;/code> to deploy Envoy Gateway in the Kind cluster using the latest image. Replace &lt;code>latest&lt;/code>
to use a different image tag.&lt;/li>
&lt;/ul>
&lt;h4 id="option-2-use-a-custom-image">Option 2: Use a Custom Image&lt;/h4>
&lt;ul>
&lt;li>Run &lt;code>make kube-install-image&lt;/code> to build an image from the tip of your current branch and load it in the Kind cluster.&lt;/li>
&lt;li>Run &lt;code>IMAGE_PULL_POLICY=IfNotPresent make kube-deploy&lt;/code> to install Envoy Gateway into the Kind cluster using your custom image.&lt;/li>
&lt;/ul>
&lt;h3 id="deploying-envoy-gateway-in-kubernetes">Deploying Envoy Gateway in Kubernetes&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>TAG=latest make kube-deploy&lt;/code> to deploy Envoy Gateway using the latest image into a Kubernetes cluster (linked to
the current kube context). Preface the command with &lt;code>IMAGE&lt;/code> or replace &lt;code>TAG&lt;/code> to use a different Envoy Gateway image or
tag.&lt;/li>
&lt;li>Run &lt;code>make kube-undeploy&lt;/code> to uninstall Envoy Gateway from the cluster.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> Envoy Gateway is tested against Kubernetes v1.24.0.&lt;/p>
&lt;h3 id="demo-setup">Demo Setup&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make kube-demo&lt;/code> to deploy a demo backend service, gatewayclass, gateway and httproute resource
(similar to steps outlined in the &lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/latest/user/quickstart.md">Quickstart&lt;/a> docs) and test the configuration.&lt;/li>
&lt;li>Run &lt;code>make kube-demo-undeploy&lt;/code> to delete the resources created by the &lt;code>make kube-demo&lt;/code> command.&lt;/li>
&lt;/ul>
&lt;h3 id="run-gateway-api-conformance-tests">Run Gateway API Conformance Tests&lt;/h3>
&lt;p>The commands below deploy Envoy Gateway to a Kubernetes cluster and run the Gateway API conformance tests. Refer to the
Gateway API &lt;a href="https://gateway-api.sigs.k8s.io/concepts/conformance/">conformance homepage&lt;/a> to learn more about the tests. If Envoy Gateway is already installed, run
&lt;code>TAG=latest make run-conformance&lt;/code> to run the conformance tests.&lt;/p>
&lt;h4 id="on-a-linux-host">On a Linux Host&lt;/h4>
&lt;ul>
&lt;li>Run &lt;code>TAG=latest make conformance&lt;/code> to create a Kind cluster, install Envoy Gateway using the latest &lt;a href="https://hub.docker.com/r/envoyproxy/gateway-dev/tags">gateway-dev&lt;/a>
image, and run Gateway API conformance tests.&lt;/li>
&lt;/ul>
&lt;h4 id="on-a-mac-host">On a Mac Host&lt;/h4>
&lt;p>Since Mac doesn&amp;rsquo;t support &lt;a href="https://kind.sigs.k8s.io/docs/user/loadbalancer/">directly exposing&lt;/a> the Docker network to the Mac host, use one of the following
workarounds to run conformance tests:&lt;/p>
&lt;ul>
&lt;li>Deploy your own Kubernetes cluster or use Docker Desktop with &lt;a href="https://docs.docker.com/desktop/kubernetes/">Kubernetes support&lt;/a> and then run
&lt;code>TAG=latest make kube-deploy run-conformance&lt;/code>. This will install Envoy Gateway using the latest &lt;a href="https://hub.docker.com/r/envoyproxy/gateway-dev/tags">gateway-dev&lt;/a> image
to the Kubernetes cluster using the current kubectl context and run the conformance tests. Use &lt;code>make kube-undeploy&lt;/code> to
uninstall Envoy Gateway.&lt;/li>
&lt;li>Install and run &lt;a href="https://github.com/chipmk/docker-mac-net-connect">Docker Mac Net Connect&lt;/a> and then run &lt;code>TAG=latest make conformance&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> Preface commands with &lt;code>IMAGE&lt;/code> or replace &lt;code>TAG&lt;/code> to use a different Envoy Gateway image or tag. If &lt;code>TAG&lt;/code>
is unspecified, the short SHA of your current branch is used.&lt;/p>
&lt;h3 id="debugging-the-envoy-config">Debugging the Envoy Config&lt;/h3>
&lt;p>An easy way to view the envoy config that Envoy Gateway is using is to port-forward to the admin interface port
(currently &lt;code>19000&lt;/code>) on the Envoy deployment that corresponds to a Gateway so that it can be accessed locally.&lt;/p>
&lt;p>Get the name of the Envoy deployment. The following example is for Gateway &lt;code>eg&lt;/code> in the &lt;code>default&lt;/code> namespace:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ENVOY_DEPLOYMENT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get deploy -n envoy-gateway-system --selector&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gateway.envoyproxy.io/owning-gateway-namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>default,gateway.envoyproxy.io/owning-gateway-name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>eg -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Port forward the admin interface port:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl port-forward deploy/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_DEPLOYMENT&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n envoy-gateway-system 19000:19000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you are able to view the running Envoy configuration by navigating to &lt;code>127.0.0.1:19000/config_dump&lt;/code>.&lt;/p>
&lt;p>There are many other endpoints on the &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/operations/admin#operations-admin-interface">Envoy admin interface&lt;/a> that may be helpful when debugging.&lt;/p>
&lt;h3 id="jwt-testing">JWT Testing&lt;/h3>
&lt;p>An example &lt;a href="https://tools.ietf.org/html/rfc7519">JSON Web Token (JWT)&lt;/a> and &lt;a href="https://tools.ietf.org/html/rfc7517">JSON Web Key Set (JWKS)&lt;/a> are used for the &lt;a href="https://gateway.envoyproxy.io/latest/user/authn.html">request authentication&lt;/a>
user guide. The JWT was created by the &lt;a href="https://jwt.io/">JWT Debugger&lt;/a>, using the &lt;code>RS256&lt;/code> algorithm. The public key from the JWTs
verify signature was copied to &lt;a href="https://russelldavies.github.io/jwk-creator/">JWK Creator&lt;/a> for generating the JWK. The JWK Creator was configured with matching
settings, i.e. &lt;code>Signing&lt;/code> public key use and the &lt;code>RS256&lt;/code> algorithm. The generated JWK was wrapped in a JWKS structure
and is hosted in the repo.&lt;/p></description></item><item><title>Docs: Developer Guide</title><link>http://gateway.xunzhuo.cafe/docs/v0.2.0/dev/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.2.0/dev/readme/</guid><description>
&lt;p>Envoy Gateway is built using a &lt;a href="https://www.gnu.org/software/make/">make&lt;/a>-based build system. Our CI is based on &lt;a href="https://docs.github.com/en/actions">Github Actions&lt;/a> using &lt;a href="https://github.com/envoyproxy/gateway/tree/main/.github/workflows">workflows&lt;/a>.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;h3 id="go">go&lt;/h3>
&lt;ul>
&lt;li>Version: 1.18.2&lt;/li>
&lt;li>Installation Guide: &lt;a href="https://go.dev/doc/install">https://go.dev/doc/install&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="make">make&lt;/h3>
&lt;ul>
&lt;li>Recommended Version: 4.0 or later&lt;/li>
&lt;li>Installation Guide: &lt;a href="https://www.gnu.org/software/make">https://www.gnu.org/software/make&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="docker">docker&lt;/h3>
&lt;ul>
&lt;li>Optional when you want to build a Docker image or run &lt;code>make&lt;/code> inside Docker.&lt;/li>
&lt;li>Recommended Version: 20.10.16&lt;/li>
&lt;li>Installation Guide: &lt;a href="https://docs.docker.com/engine/install">https://docs.docker.com/engine/install&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="python3">python3&lt;/h3>
&lt;ul>
&lt;li>Need a &lt;code>python3&lt;/code> program&lt;/li>
&lt;li>Must have a functioning &lt;code>venv&lt;/code> module; this is part of the standard
library, but some distributions (such as Debian and Ubuntu) replace
it with a stub and require you to install a &lt;code>python3-venv&lt;/code> package
separately.&lt;/li>
&lt;/ul>
&lt;h2 id="quickstart">Quickstart&lt;/h2>
&lt;ul>
&lt;li>Run &lt;code>make help&lt;/code> to see all the available targets to build, test and run Envoy Gateway.&lt;/li>
&lt;/ul>
&lt;h3 id="building">Building&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make build&lt;/code> to build the Envoy Gateway binary. &lt;strong>Note:&lt;/strong> The binary gets generated in the &lt;code>bin/&lt;/code> directory&lt;/li>
&lt;/ul>
&lt;h3 id="testing">Testing&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make test&lt;/code> to run the golang tests.&lt;/li>
&lt;/ul>
&lt;h3 id="running-linters">Running Linters&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make lint&lt;/code> to make sure your code passes all the linter checks.&lt;/li>
&lt;/ul>
&lt;h3 id="building-and-pushing-the-image">Building and Pushing the Image&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>IMAGE=docker.io/you/gateway-dev make image&lt;/code> to build the docker image.&lt;/li>
&lt;li>Run &lt;code>IMAGE=docker.io/you/gateway-dev make push-multiarch&lt;/code> to build and push the multi-arch docker image.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> Replace &lt;code>IMAGE&lt;/code> with your registry&amp;rsquo;s image name.&lt;/p>
&lt;h3 id="deploying-envoy-gateway-for-testdev">Deploying Envoy Gateway for Test/Dev&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make create-cluster&lt;/code> to create a &lt;a href="https://kind.sigs.k8s.io/">Kind&lt;/a> cluster.&lt;/li>
&lt;/ul>
&lt;h4 id="option-1-use-the-latest-gateway-dev-image">Option 1: Use the Latest &lt;a href="https://hub.docker.com/r/envoyproxy/gateway-dev/tags">gateway-dev&lt;/a> Image&lt;/h4>
&lt;ul>
&lt;li>Run &lt;code>TAG=latest make kube-deploy&lt;/code> to deploy Envoy Gateway in the Kind cluster using the latest image. Replace &lt;code>latest&lt;/code>
to use a different image tag.&lt;/li>
&lt;/ul>
&lt;h4 id="option-2-use-a-custom-image">Option 2: Use a Custom Image&lt;/h4>
&lt;ul>
&lt;li>Run &lt;code>make kube-install-image&lt;/code> to build an image from the tip of your current branch and load it in the Kind cluster.&lt;/li>
&lt;li>Run &lt;code>make kube-deploy&lt;/code> to install Envoy Gateway into the Kind cluster using your custom image.&lt;/li>
&lt;/ul>
&lt;h3 id="deploying-envoy-gateway-in-kubernetes">Deploying Envoy Gateway in Kubernetes&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>TAG=latest make kube-deploy&lt;/code> to deploy Envoy Gateway using the latest image into a Kubernetes cluster (linked to
the current kube context). Preface the command with &lt;code>IMAGE&lt;/code> or replace &lt;code>TAG&lt;/code> to use a different Envoy Gateway image or
tag.&lt;/li>
&lt;li>Run &lt;code>make kube-undeploy&lt;/code> to uninstall Envoy Gateway from the cluster.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> Envoy Gateway is tested against Kubernetes v1.24.0.&lt;/p>
&lt;h3 id="demo-setup">Demo Setup&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make kube-demo&lt;/code> to deploy a demo backend service, gatewayclass, gateway and httproute resource
(similar to steps outlined in the &lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/user/quickstart.md">Quickstart&lt;/a> docs) and test the configuration.&lt;/li>
&lt;li>Run &lt;code>make kube-demo-undeploy&lt;/code> to delete the resources created by the &lt;code>make kube-demo&lt;/code> command.&lt;/li>
&lt;/ul>
&lt;h3 id="run-gateway-api-conformance-tests">Run Gateway API Conformance Tests&lt;/h3>
&lt;p>The commands below deploy Envoy Gateway to a Kubernetes cluster and run the Gateway API conformance tests. Refer to the
Gateway API &lt;a href="https://gateway-api.sigs.k8s.io/concepts/conformance/">conformance homepage&lt;/a> to learn more about the tests. If Envoy Gateway is already installed, run
&lt;code>TAG=latest make run-conformance&lt;/code> to run the conformance tests.&lt;/p>
&lt;h4 id="on-a-linux-host">On a Linux Host&lt;/h4>
&lt;ul>
&lt;li>Run &lt;code>TAG=latest make conformance&lt;/code> to create a Kind cluster, install Envoy Gateway using the latest &lt;a href="https://hub.docker.com/r/envoyproxy/gateway-dev/tags">gateway-dev&lt;/a>
image, and run Gateway API conformance tests.&lt;/li>
&lt;/ul>
&lt;h4 id="on-a-mac-host">On a Mac Host&lt;/h4>
&lt;p>Since Mac doesn&amp;rsquo;t support &lt;a href="https://kind.sigs.k8s.io/docs/user/loadbalancer/">directly exposing&lt;/a> the Docker network to the Mac host, use one of the following
workarounds to run conformance tests:&lt;/p>
&lt;ul>
&lt;li>Deploy your own Kubernetes cluster or use Docker Desktop with &lt;a href="https://docs.docker.com/desktop/kubernetes/">Kubernetes support&lt;/a> and then run
&lt;code>TAG=latest make kube-deploy run-conformance&lt;/code>. This will install Envoy Gateway using the latest &lt;a href="https://hub.docker.com/r/envoyproxy/gateway-dev/tags">gateway-dev&lt;/a> image
to the Kubernetes cluster using the current kubectl context and run the conformance tests. Use &lt;code>make kube-undeploy&lt;/code> to
uninstall Envoy Gateway.&lt;/li>
&lt;li>Install and run &lt;a href="https://github.com/chipmk/docker-mac-net-connect">Docker Mac Net Connect&lt;/a> and then run &lt;code>TAG=latest make conformance&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> Preface commands with &lt;code>IMAGE&lt;/code> or replace &lt;code>TAG&lt;/code> to use a different Envoy Gateway image or tag. If &lt;code>TAG&lt;/code>
is unspecified, the short SHA of your current branch is used.&lt;/p>
&lt;h3 id="debugging-the-envoy-config">Debugging the Envoy Config&lt;/h3>
&lt;p>An easy way to view the envoy config that Envoy Gateway is using is to port-forward to the admin interface port
(currently &lt;code>19000&lt;/code>) on the Envoy deployment that corresponds to a Gateway so that it can be accessed locally.&lt;/p>
&lt;p>Get the name of the Envoy deployment. The following example is for Gateway &lt;code>eg&lt;/code> in the &lt;code>default&lt;/code> namespace:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ENVOY_DEPLOYMENT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get deploy -n envoy-gateway-system --selector&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gateway.envoyproxy.io/owning-gateway-namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>default,gateway.envoyproxy.io/owning-gateway-name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>eg -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Port forward the admin interface port:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl port-forward deploy/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_DEPLOYMENT&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n envoy-gateway-system 19000:19000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you are able to view the running Envoy configuration by navigating to &lt;code>127.0.0.1:19000/config_dump&lt;/code>.&lt;/p>
&lt;p>There are many other endpoints on the &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/operations/admin#operations-admin-interface">Envoy admin interface&lt;/a> that may be helpful when debugging.&lt;/p></description></item><item><title>Docs: Developer Guide</title><link>http://gateway.xunzhuo.cafe/docs/v0.3.0/dev/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.3.0/dev/readme/</guid><description>
&lt;p>Envoy Gateway is built using a &lt;a href="https://www.gnu.org/software/make/">make&lt;/a>-based build system. Our CI is based on &lt;a href="https://docs.github.com/en/actions">Github Actions&lt;/a> using &lt;a href="https://github.com/envoyproxy/gateway/tree/main/.github/workflows">workflows&lt;/a>.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;h3 id="go">go&lt;/h3>
&lt;ul>
&lt;li>Version: 1.19&lt;/li>
&lt;li>Installation Guide: &lt;a href="https://go.dev/doc/install">https://go.dev/doc/install&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="make">make&lt;/h3>
&lt;ul>
&lt;li>Recommended Version: 4.0 or later&lt;/li>
&lt;li>Installation Guide: &lt;a href="https://www.gnu.org/software/make">https://www.gnu.org/software/make&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="docker">docker&lt;/h3>
&lt;ul>
&lt;li>Optional when you want to build a Docker image or run &lt;code>make&lt;/code> inside Docker.&lt;/li>
&lt;li>Recommended Version: 20.10.16&lt;/li>
&lt;li>Installation Guide: &lt;a href="https://docs.docker.com/engine/install">https://docs.docker.com/engine/install&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="python3">python3&lt;/h3>
&lt;ul>
&lt;li>Need a &lt;code>python3&lt;/code> program&lt;/li>
&lt;li>Must have a functioning &lt;code>venv&lt;/code> module; this is part of the standard
library, but some distributions (such as Debian and Ubuntu) replace
it with a stub and require you to install a &lt;code>python3-venv&lt;/code> package
separately.&lt;/li>
&lt;/ul>
&lt;h2 id="quickstart">Quickstart&lt;/h2>
&lt;ul>
&lt;li>Run &lt;code>make help&lt;/code> to see all the available targets to build, test and run Envoy Gateway.&lt;/li>
&lt;/ul>
&lt;h3 id="building">Building&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make build&lt;/code> to build the Envoy Gateway binary. &lt;strong>Note:&lt;/strong> The binary gets generated in the &lt;code>bin/&lt;/code> directory&lt;/li>
&lt;/ul>
&lt;h3 id="testing">Testing&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make test&lt;/code> to run the golang tests.&lt;/li>
&lt;/ul>
&lt;h3 id="running-linters">Running Linters&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make lint&lt;/code> to make sure your code passes all the linter checks.&lt;/li>
&lt;/ul>
&lt;h3 id="building-and-pushing-the-image">Building and Pushing the Image&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>IMAGE=docker.io/you/gateway-dev make image&lt;/code> to build the docker image.&lt;/li>
&lt;li>Run &lt;code>IMAGE=docker.io/you/gateway-dev make push-multiarch&lt;/code> to build and push the multi-arch docker image.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> Replace &lt;code>IMAGE&lt;/code> with your registry&amp;rsquo;s image name.&lt;/p>
&lt;h3 id="deploying-envoy-gateway-for-testdev">Deploying Envoy Gateway for Test/Dev&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make create-cluster&lt;/code> to create a &lt;a href="https://kind.sigs.k8s.io/">Kind&lt;/a> cluster.&lt;/li>
&lt;/ul>
&lt;h4 id="option-1-use-the-latest-gateway-dev-image">Option 1: Use the Latest &lt;a href="https://hub.docker.com/r/envoyproxy/gateway-dev/tags">gateway-dev&lt;/a> Image&lt;/h4>
&lt;ul>
&lt;li>Run &lt;code>TAG=latest make kube-deploy&lt;/code> to deploy Envoy Gateway in the Kind cluster using the latest image. Replace &lt;code>latest&lt;/code>
to use a different image tag.&lt;/li>
&lt;/ul>
&lt;h4 id="option-2-use-a-custom-image">Option 2: Use a Custom Image&lt;/h4>
&lt;ul>
&lt;li>Run &lt;code>make kube-install-image&lt;/code> to build an image from the tip of your current branch and load it in the Kind cluster.&lt;/li>
&lt;li>Run &lt;code>make kube-deploy&lt;/code> to install Envoy Gateway into the Kind cluster using your custom image.&lt;/li>
&lt;/ul>
&lt;h3 id="deploying-envoy-gateway-in-kubernetes">Deploying Envoy Gateway in Kubernetes&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>TAG=latest make kube-deploy&lt;/code> to deploy Envoy Gateway using the latest image into a Kubernetes cluster (linked to
the current kube context). Preface the command with &lt;code>IMAGE&lt;/code> or replace &lt;code>TAG&lt;/code> to use a different Envoy Gateway image or
tag.&lt;/li>
&lt;li>Run &lt;code>make kube-undeploy&lt;/code> to uninstall Envoy Gateway from the cluster.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> Envoy Gateway is tested against Kubernetes v1.24.0.&lt;/p>
&lt;h3 id="demo-setup">Demo Setup&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make kube-demo&lt;/code> to deploy a demo backend service, gatewayclass, gateway and httproute resource
(similar to steps outlined in the &lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/user/quickstart.md">Quickstart&lt;/a> docs) and test the configuration.&lt;/li>
&lt;li>Run &lt;code>make kube-demo-undeploy&lt;/code> to delete the resources created by the &lt;code>make kube-demo&lt;/code> command.&lt;/li>
&lt;/ul>
&lt;h3 id="run-gateway-api-conformance-tests">Run Gateway API Conformance Tests&lt;/h3>
&lt;p>The commands below deploy Envoy Gateway to a Kubernetes cluster and run the Gateway API conformance tests. Refer to the
Gateway API &lt;a href="https://gateway-api.sigs.k8s.io/concepts/conformance/">conformance homepage&lt;/a> to learn more about the tests. If Envoy Gateway is already installed, run
&lt;code>TAG=latest make run-conformance&lt;/code> to run the conformance tests.&lt;/p>
&lt;h4 id="on-a-linux-host">On a Linux Host&lt;/h4>
&lt;ul>
&lt;li>Run &lt;code>TAG=latest make conformance&lt;/code> to create a Kind cluster, install Envoy Gateway using the latest &lt;a href="https://hub.docker.com/r/envoyproxy/gateway-dev/tags">gateway-dev&lt;/a>
image, and run Gateway API conformance tests.&lt;/li>
&lt;/ul>
&lt;h4 id="on-a-mac-host">On a Mac Host&lt;/h4>
&lt;p>Since Mac doesn&amp;rsquo;t support &lt;a href="https://kind.sigs.k8s.io/docs/user/loadbalancer/">directly exposing&lt;/a> the Docker network to the Mac host, use one of the following
workarounds to run conformance tests:&lt;/p>
&lt;ul>
&lt;li>Deploy your own Kubernetes cluster or use Docker Desktop with &lt;a href="https://docs.docker.com/desktop/kubernetes/">Kubernetes support&lt;/a> and then run
&lt;code>TAG=latest make kube-deploy run-conformance&lt;/code>. This will install Envoy Gateway using the latest &lt;a href="https://hub.docker.com/r/envoyproxy/gateway-dev/tags">gateway-dev&lt;/a> image
to the Kubernetes cluster using the current kubectl context and run the conformance tests. Use &lt;code>make kube-undeploy&lt;/code> to
uninstall Envoy Gateway.&lt;/li>
&lt;li>Install and run &lt;a href="https://github.com/chipmk/docker-mac-net-connect">Docker Mac Net Connect&lt;/a> and then run &lt;code>TAG=latest make conformance&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> Preface commands with &lt;code>IMAGE&lt;/code> or replace &lt;code>TAG&lt;/code> to use a different Envoy Gateway image or tag. If &lt;code>TAG&lt;/code>
is unspecified, the short SHA of your current branch is used.&lt;/p>
&lt;h3 id="debugging-the-envoy-config">Debugging the Envoy Config&lt;/h3>
&lt;p>An easy way to view the envoy config that Envoy Gateway is using is to port-forward to the admin interface port
(currently &lt;code>19000&lt;/code>) on the Envoy deployment that corresponds to a Gateway so that it can be accessed locally.&lt;/p>
&lt;p>Get the name of the Envoy deployment. The following example is for Gateway &lt;code>eg&lt;/code> in the &lt;code>default&lt;/code> namespace:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ENVOY_DEPLOYMENT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get deploy -n envoy-gateway-system --selector&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gateway.envoyproxy.io/owning-gateway-namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>default,gateway.envoyproxy.io/owning-gateway-name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>eg -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Port forward the admin interface port:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl port-forward deploy/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_DEPLOYMENT&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n envoy-gateway-system 19000:19000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you are able to view the running Envoy configuration by navigating to &lt;code>127.0.0.1:19000/config_dump&lt;/code>.&lt;/p>
&lt;p>There are many other endpoints on the &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/operations/admin#operations-admin-interface">Envoy admin interface&lt;/a> that may be helpful when debugging.&lt;/p>
&lt;h3 id="jwt-testing">JWT Testing&lt;/h3>
&lt;p>An example &lt;a href="https://tools.ietf.org/html/rfc7519">JSON Web Token (JWT)&lt;/a> and &lt;a href="https://tools.ietf.org/html/rfc7517">JSON Web Key Set (JWKS)&lt;/a> are used for the &lt;a href="https://gateway.envoyproxy.io/latest/user/authn.html">request authentication&lt;/a>
user guide. The JWT was created by the &lt;a href="https://jwt.io/">JWT Debugger&lt;/a>, using the &lt;code>RS256&lt;/code> algorithm. The public key from the JWTs
verify signature was copied to &lt;a href="https://russelldavies.github.io/jwk-creator/">JWK Creator&lt;/a> for generating the JWK. The JWK Creator was configured with matching
settings, i.e. &lt;code>Signing&lt;/code> public key use and the &lt;code>RS256&lt;/code> algorithm. The generated JWK was wrapped in a JWKS structure
and is hosted in the repo.&lt;/p></description></item><item><title>Docs: Developer Guide</title><link>http://gateway.xunzhuo.cafe/docs/v0.4.0/dev/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.4.0/dev/readme/</guid><description>
&lt;p>Envoy Gateway is built using a &lt;a href="https://www.gnu.org/software/make/">make&lt;/a>-based build system. Our CI is based on &lt;a href="https://docs.github.com/en/actions">Github Actions&lt;/a> using &lt;a href="https://github.com/envoyproxy/gateway/tree/main/.github/workflows">workflows&lt;/a>.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;h3 id="go">go&lt;/h3>
&lt;ul>
&lt;li>Version: 1.20&lt;/li>
&lt;li>Installation Guide: &lt;a href="https://go.dev/doc/install">https://go.dev/doc/install&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="make">make&lt;/h3>
&lt;ul>
&lt;li>Recommended Version: 4.0 or later&lt;/li>
&lt;li>Installation Guide: &lt;a href="https://www.gnu.org/software/make">https://www.gnu.org/software/make&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="docker">docker&lt;/h3>
&lt;ul>
&lt;li>Optional when you want to build a Docker image or run &lt;code>make&lt;/code> inside Docker.&lt;/li>
&lt;li>Recommended Version: 20.10.16&lt;/li>
&lt;li>Installation Guide: &lt;a href="https://docs.docker.com/engine/install">https://docs.docker.com/engine/install&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="python3">python3&lt;/h3>
&lt;ul>
&lt;li>Need a &lt;code>python3&lt;/code> program&lt;/li>
&lt;li>Must have a functioning &lt;code>venv&lt;/code> module; this is part of the standard
library, but some distributions (such as Debian and Ubuntu) replace
it with a stub and require you to install a &lt;code>python3-venv&lt;/code> package
separately.&lt;/li>
&lt;/ul>
&lt;h2 id="quickstart">Quickstart&lt;/h2>
&lt;ul>
&lt;li>Run &lt;code>make help&lt;/code> to see all the available targets to build, test and run Envoy Gateway.&lt;/li>
&lt;/ul>
&lt;h3 id="building">Building&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make build&lt;/code> to build all the binaries.&lt;/li>
&lt;li>Run &lt;code>make build BINS=&amp;quot;envoy-gateway&amp;quot;&lt;/code> to build the Envoy Gateway binary.&lt;/li>
&lt;li>Run &lt;code>make build BINS=&amp;quot;egctl&amp;quot;&lt;/code> to build the egctl binary.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> The binaries get generated in the &lt;code>bin/$OS/$ARCH&lt;/code> directory, for example, &lt;code>bin/linux/amd64/&lt;/code>.&lt;/p>
&lt;h3 id="testing">Testing&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make test&lt;/code> to run the golang tests.&lt;/li>
&lt;/ul>
&lt;h3 id="running-linters">Running Linters&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make lint&lt;/code> to make sure your code passes all the linter checks.&lt;/li>
&lt;/ul>
&lt;h3 id="building-and-pushing-the-image">Building and Pushing the Image&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>IMAGE=docker.io/you/gateway-dev make image&lt;/code> to build the docker image.&lt;/li>
&lt;li>Run &lt;code>IMAGE=docker.io/you/gateway-dev make push-multiarch&lt;/code> to build and push the multi-arch docker image.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> Replace &lt;code>IMAGE&lt;/code> with your registry&amp;rsquo;s image name.&lt;/p>
&lt;h3 id="deploying-envoy-gateway-for-testdev">Deploying Envoy Gateway for Test/Dev&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make create-cluster&lt;/code> to create a &lt;a href="https://kind.sigs.k8s.io/">Kind&lt;/a> cluster.&lt;/li>
&lt;/ul>
&lt;h4 id="option-1-use-the-latest-gateway-dev-image">Option 1: Use the Latest &lt;a href="https://hub.docker.com/r/envoyproxy/gateway-dev/tags">gateway-dev&lt;/a> Image&lt;/h4>
&lt;ul>
&lt;li>Run &lt;code>TAG=latest make kube-deploy&lt;/code> to deploy Envoy Gateway in the Kind cluster using the latest image. Replace &lt;code>latest&lt;/code>
to use a different image tag.&lt;/li>
&lt;/ul>
&lt;h4 id="option-2-use-a-custom-image">Option 2: Use a Custom Image&lt;/h4>
&lt;ul>
&lt;li>Run &lt;code>make kube-install-image&lt;/code> to build an image from the tip of your current branch and load it in the Kind cluster.&lt;/li>
&lt;li>Run &lt;code>make kube-deploy&lt;/code> to install Envoy Gateway into the Kind cluster using your custom image.&lt;/li>
&lt;/ul>
&lt;h3 id="deploying-envoy-gateway-in-kubernetes">Deploying Envoy Gateway in Kubernetes&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>TAG=latest make kube-deploy&lt;/code> to deploy Envoy Gateway using the latest image into a Kubernetes cluster (linked to
the current kube context). Preface the command with &lt;code>IMAGE&lt;/code> or replace &lt;code>TAG&lt;/code> to use a different Envoy Gateway image or
tag.&lt;/li>
&lt;li>Run &lt;code>make kube-undeploy&lt;/code> to uninstall Envoy Gateway from the cluster.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> Envoy Gateway is tested against Kubernetes v1.24.0.&lt;/p>
&lt;h3 id="demo-setup">Demo Setup&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make kube-demo&lt;/code> to deploy a demo backend service, gatewayclass, gateway and httproute resource
(similar to steps outlined in the &lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/user/quickstart.md">Quickstart&lt;/a> docs) and test the configuration.&lt;/li>
&lt;li>Run &lt;code>make kube-demo-undeploy&lt;/code> to delete the resources created by the &lt;code>make kube-demo&lt;/code> command.&lt;/li>
&lt;/ul>
&lt;h3 id="run-gateway-api-conformance-tests">Run Gateway API Conformance Tests&lt;/h3>
&lt;p>The commands below deploy Envoy Gateway to a Kubernetes cluster and run the Gateway API conformance tests. Refer to the
Gateway API &lt;a href="https://gateway-api.sigs.k8s.io/concepts/conformance/">conformance homepage&lt;/a> to learn more about the tests. If Envoy Gateway is already installed, run
&lt;code>TAG=latest make run-conformance&lt;/code> to run the conformance tests.&lt;/p>
&lt;h4 id="on-a-linux-host">On a Linux Host&lt;/h4>
&lt;ul>
&lt;li>Run &lt;code>TAG=latest make conformance&lt;/code> to create a Kind cluster, install Envoy Gateway using the latest &lt;a href="https://hub.docker.com/r/envoyproxy/gateway-dev/tags">gateway-dev&lt;/a>
image, and run Gateway API conformance tests.&lt;/li>
&lt;/ul>
&lt;h4 id="on-a-mac-host">On a Mac Host&lt;/h4>
&lt;p>Since Mac doesn&amp;rsquo;t support &lt;a href="https://kind.sigs.k8s.io/docs/user/loadbalancer/">directly exposing&lt;/a> the Docker network to the Mac host, use one of the following
workarounds to run conformance tests:&lt;/p>
&lt;ul>
&lt;li>Deploy your own Kubernetes cluster or use Docker Desktop with &lt;a href="https://docs.docker.com/desktop/kubernetes/">Kubernetes support&lt;/a> and then run
&lt;code>TAG=latest make kube-deploy run-conformance&lt;/code>. This will install Envoy Gateway using the latest &lt;a href="https://hub.docker.com/r/envoyproxy/gateway-dev/tags">gateway-dev&lt;/a> image
to the Kubernetes cluster using the current kubectl context and run the conformance tests. Use &lt;code>make kube-undeploy&lt;/code> to
uninstall Envoy Gateway.&lt;/li>
&lt;li>Install and run &lt;a href="https://github.com/chipmk/docker-mac-net-connect">Docker Mac Net Connect&lt;/a> and then run &lt;code>TAG=latest make conformance&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> Preface commands with &lt;code>IMAGE&lt;/code> or replace &lt;code>TAG&lt;/code> to use a different Envoy Gateway image or tag. If &lt;code>TAG&lt;/code>
is unspecified, the short SHA of your current branch is used.&lt;/p>
&lt;h3 id="debugging-the-envoy-config">Debugging the Envoy Config&lt;/h3>
&lt;p>An easy way to view the envoy config that Envoy Gateway is using is to port-forward to the admin interface port
(currently &lt;code>19000&lt;/code>) on the Envoy deployment that corresponds to a Gateway so that it can be accessed locally.&lt;/p>
&lt;p>Get the name of the Envoy deployment. The following example is for Gateway &lt;code>eg&lt;/code> in the &lt;code>default&lt;/code> namespace:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ENVOY_DEPLOYMENT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get deploy -n envoy-gateway-system --selector&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gateway.envoyproxy.io/owning-gateway-namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>default,gateway.envoyproxy.io/owning-gateway-name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>eg -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Port forward the admin interface port:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl port-forward deploy/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_DEPLOYMENT&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n envoy-gateway-system 19000:19000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you are able to view the running Envoy configuration by navigating to &lt;code>127.0.0.1:19000/config_dump&lt;/code>.&lt;/p>
&lt;p>There are many other endpoints on the &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/operations/admin#operations-admin-interface">Envoy admin interface&lt;/a> that may be helpful when debugging.&lt;/p>
&lt;h3 id="jwt-testing">JWT Testing&lt;/h3>
&lt;p>An example &lt;a href="https://tools.ietf.org/html/rfc7519">JSON Web Token (JWT)&lt;/a> and &lt;a href="https://tools.ietf.org/html/rfc7517">JSON Web Key Set (JWKS)&lt;/a> are used for the &lt;a href="https://gateway.envoyproxy.io/latest/user/authn.html">request authentication&lt;/a>
user guide. The JWT was created by the &lt;a href="https://jwt.io/">JWT Debugger&lt;/a>, using the &lt;code>RS256&lt;/code> algorithm. The public key from the JWTs
verify signature was copied to &lt;a href="https://russelldavies.github.io/jwk-creator/">JWK Creator&lt;/a> for generating the JWK. The JWK Creator was configured with matching
settings, i.e. &lt;code>Signing&lt;/code> public key use and the &lt;code>RS256&lt;/code> algorithm. The generated JWK was wrapped in a JWKS structure
and is hosted in the repo.&lt;/p></description></item><item><title>Docs: Developer Guide</title><link>http://gateway.xunzhuo.cafe/docs/v0.5.0/dev/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.5.0/dev/readme/</guid><description>
&lt;p>Envoy Gateway is built using a &lt;a href="https://www.gnu.org/software/make/">make&lt;/a>-based build system. Our CI is based on &lt;a href="https://docs.github.com/en/actions">Github Actions&lt;/a> using &lt;a href="https://github.com/envoyproxy/gateway/tree/main/.github/workflows">workflows&lt;/a>.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;h3 id="go">go&lt;/h3>
&lt;ul>
&lt;li>Version: 1.20&lt;/li>
&lt;li>Installation Guide: &lt;a href="https://go.dev/doc/install">https://go.dev/doc/install&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="make">make&lt;/h3>
&lt;ul>
&lt;li>Recommended Version: 4.0 or later&lt;/li>
&lt;li>Installation Guide: &lt;a href="https://www.gnu.org/software/make">https://www.gnu.org/software/make&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="docker">docker&lt;/h3>
&lt;ul>
&lt;li>Optional when you want to build a Docker image or run &lt;code>make&lt;/code> inside Docker.&lt;/li>
&lt;li>Recommended Version: 20.10.16&lt;/li>
&lt;li>Installation Guide: &lt;a href="https://docs.docker.com/engine/install">https://docs.docker.com/engine/install&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="python3">python3&lt;/h3>
&lt;ul>
&lt;li>Need a &lt;code>python3&lt;/code> program&lt;/li>
&lt;li>Must have a functioning &lt;code>venv&lt;/code> module; this is part of the standard
library, but some distributions (such as Debian and Ubuntu) replace
it with a stub and require you to install a &lt;code>python3-venv&lt;/code> package
separately.&lt;/li>
&lt;/ul>
&lt;h2 id="quickstart">Quickstart&lt;/h2>
&lt;ul>
&lt;li>Run &lt;code>make help&lt;/code> to see all the available targets to build, test and run Envoy Gateway.&lt;/li>
&lt;/ul>
&lt;h3 id="building">Building&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make build&lt;/code> to build all the binaries.&lt;/li>
&lt;li>Run &lt;code>make build BINS=&amp;quot;envoy-gateway&amp;quot;&lt;/code> to build the Envoy Gateway binary.&lt;/li>
&lt;li>Run &lt;code>make build BINS=&amp;quot;egctl&amp;quot;&lt;/code> to build the egctl binary.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> The binaries get generated in the &lt;code>bin/$OS/$ARCH&lt;/code> directory, for example, &lt;code>bin/linux/amd64/&lt;/code>.&lt;/p>
&lt;h3 id="testing">Testing&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Run &lt;code>make test&lt;/code> to run the golang tests.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Run &lt;code>make testdata&lt;/code> to generate the golden YAML testdata files.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="running-linters">Running Linters&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make lint&lt;/code> to make sure your code passes all the linter checks.
&lt;strong>Note:&lt;/strong> The &lt;code>golangci-lint&lt;/code> configuration resides &lt;a href="https://github.com/envoyproxy/gateway/blob/main/tools/linter/golangci-lint/.golangci.yml">here&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h3 id="building-and-pushing-the-image">Building and Pushing the Image&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>IMAGE=docker.io/you/gateway-dev make image&lt;/code> to build the docker image.&lt;/li>
&lt;li>Run &lt;code>IMAGE=docker.io/you/gateway-dev make push-multiarch&lt;/code> to build and push the multi-arch docker image.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> Replace &lt;code>IMAGE&lt;/code> with your registry&amp;rsquo;s image name.&lt;/p>
&lt;h3 id="deploying-envoy-gateway-for-testdev">Deploying Envoy Gateway for Test/Dev&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make create-cluster&lt;/code> to create a &lt;a href="https://kind.sigs.k8s.io/">Kind&lt;/a> cluster.&lt;/li>
&lt;/ul>
&lt;h4 id="option-1-use-the-latest-gateway-dev-image">Option 1: Use the Latest &lt;a href="https://hub.docker.com/r/envoyproxy/gateway-dev/tags">gateway-dev&lt;/a> Image&lt;/h4>
&lt;ul>
&lt;li>Run &lt;code>TAG=latest make kube-deploy&lt;/code> to deploy Envoy Gateway in the Kind cluster using the latest image. Replace &lt;code>latest&lt;/code>
to use a different image tag.&lt;/li>
&lt;/ul>
&lt;h4 id="option-2-use-a-custom-image">Option 2: Use a Custom Image&lt;/h4>
&lt;ul>
&lt;li>Run &lt;code>make kube-install-image&lt;/code> to build an image from the tip of your current branch and load it in the Kind cluster.&lt;/li>
&lt;li>Run &lt;code>IMAGE_PULL_POLICY=IfNotPresent make kube-deploy&lt;/code> to install Envoy Gateway into the Kind cluster using your custom image.&lt;/li>
&lt;/ul>
&lt;h3 id="deploying-envoy-gateway-in-kubernetes">Deploying Envoy Gateway in Kubernetes&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>TAG=latest make kube-deploy&lt;/code> to deploy Envoy Gateway using the latest image into a Kubernetes cluster (linked to
the current kube context). Preface the command with &lt;code>IMAGE&lt;/code> or replace &lt;code>TAG&lt;/code> to use a different Envoy Gateway image or
tag.&lt;/li>
&lt;li>Run &lt;code>make kube-undeploy&lt;/code> to uninstall Envoy Gateway from the cluster.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> Envoy Gateway is tested against Kubernetes v1.24.0.&lt;/p>
&lt;h3 id="demo-setup">Demo Setup&lt;/h3>
&lt;ul>
&lt;li>Run &lt;code>make kube-demo&lt;/code> to deploy a demo backend service, gatewayclass, gateway and httproute resource
(similar to steps outlined in the &lt;a href="https://github.com/envoyproxy/gateway/blob/main/docs/latest/user/quickstart.md">Quickstart&lt;/a> docs) and test the configuration.&lt;/li>
&lt;li>Run &lt;code>make kube-demo-undeploy&lt;/code> to delete the resources created by the &lt;code>make kube-demo&lt;/code> command.&lt;/li>
&lt;/ul>
&lt;h3 id="run-gateway-api-conformance-tests">Run Gateway API Conformance Tests&lt;/h3>
&lt;p>The commands below deploy Envoy Gateway to a Kubernetes cluster and run the Gateway API conformance tests. Refer to the
Gateway API &lt;a href="https://gateway-api.sigs.k8s.io/concepts/conformance/">conformance homepage&lt;/a> to learn more about the tests. If Envoy Gateway is already installed, run
&lt;code>TAG=latest make run-conformance&lt;/code> to run the conformance tests.&lt;/p>
&lt;h4 id="on-a-linux-host">On a Linux Host&lt;/h4>
&lt;ul>
&lt;li>Run &lt;code>TAG=latest make conformance&lt;/code> to create a Kind cluster, install Envoy Gateway using the latest &lt;a href="https://hub.docker.com/r/envoyproxy/gateway-dev/tags">gateway-dev&lt;/a>
image, and run Gateway API conformance tests.&lt;/li>
&lt;/ul>
&lt;h4 id="on-a-mac-host">On a Mac Host&lt;/h4>
&lt;p>Since Mac doesn&amp;rsquo;t support &lt;a href="https://kind.sigs.k8s.io/docs/user/loadbalancer/">directly exposing&lt;/a> the Docker network to the Mac host, use one of the following
workarounds to run conformance tests:&lt;/p>
&lt;ul>
&lt;li>Deploy your own Kubernetes cluster or use Docker Desktop with &lt;a href="https://docs.docker.com/desktop/kubernetes/">Kubernetes support&lt;/a> and then run
&lt;code>TAG=latest make kube-deploy run-conformance&lt;/code>. This will install Envoy Gateway using the latest &lt;a href="https://hub.docker.com/r/envoyproxy/gateway-dev/tags">gateway-dev&lt;/a> image
to the Kubernetes cluster using the current kubectl context and run the conformance tests. Use &lt;code>make kube-undeploy&lt;/code> to
uninstall Envoy Gateway.&lt;/li>
&lt;li>Install and run &lt;a href="https://github.com/chipmk/docker-mac-net-connect">Docker Mac Net Connect&lt;/a> and then run &lt;code>TAG=latest make conformance&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> Preface commands with &lt;code>IMAGE&lt;/code> or replace &lt;code>TAG&lt;/code> to use a different Envoy Gateway image or tag. If &lt;code>TAG&lt;/code>
is unspecified, the short SHA of your current branch is used.&lt;/p>
&lt;h3 id="debugging-the-envoy-config">Debugging the Envoy Config&lt;/h3>
&lt;p>An easy way to view the envoy config that Envoy Gateway is using is to port-forward to the admin interface port
(currently &lt;code>19000&lt;/code>) on the Envoy deployment that corresponds to a Gateway so that it can be accessed locally.&lt;/p>
&lt;p>Get the name of the Envoy deployment. The following example is for Gateway &lt;code>eg&lt;/code> in the &lt;code>default&lt;/code> namespace:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ENVOY_DEPLOYMENT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get deploy -n envoy-gateway-system --selector&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gateway.envoyproxy.io/owning-gateway-namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>default,gateway.envoyproxy.io/owning-gateway-name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>eg -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Port forward the admin interface port:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl port-forward deploy/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ENVOY_DEPLOYMENT&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n envoy-gateway-system 19000:19000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you are able to view the running Envoy configuration by navigating to &lt;code>127.0.0.1:19000/config_dump&lt;/code>.&lt;/p>
&lt;p>There are many other endpoints on the &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/operations/admin#operations-admin-interface">Envoy admin interface&lt;/a> that may be helpful when debugging.&lt;/p>
&lt;h3 id="jwt-testing">JWT Testing&lt;/h3>
&lt;p>An example &lt;a href="https://tools.ietf.org/html/rfc7519">JSON Web Token (JWT)&lt;/a> and &lt;a href="https://tools.ietf.org/html/rfc7517">JSON Web Key Set (JWKS)&lt;/a> are used for the &lt;a href="https://gateway.envoyproxy.io/latest/user/authn.html">request authentication&lt;/a>
user guide. The JWT was created by the &lt;a href="https://jwt.io/">JWT Debugger&lt;/a>, using the &lt;code>RS256&lt;/code> algorithm. The public key from the JWTs
verify signature was copied to &lt;a href="https://russelldavies.github.io/jwk-creator/">JWK Creator&lt;/a> for generating the JWK. The JWK Creator was configured with matching
settings, i.e. &lt;code>Signing&lt;/code> public key use and the &lt;code>RS256&lt;/code> algorithm. The generated JWK was wrapped in a JWKS structure
and is hosted in the repo.&lt;/p></description></item><item><title>Docs: egctl Design</title><link>http://gateway.xunzhuo.cafe/docs/latest/design/egctl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/latest/design/egctl/</guid><description>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>EG should provide a command line tool with following capabilities:&lt;/p>
&lt;ul>
&lt;li>Collect configuration from envoy proxy and gateway&lt;/li>
&lt;li>Analyse system configuration to diagnose any issues in envoy gateway&lt;/li>
&lt;/ul>
&lt;p>This tool is named &lt;code>egctl&lt;/code>.&lt;/p>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>Use the following syntax to run &lt;code>egctl&lt;/code> commands from your terminal window:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">egctl [command] [entity] [name] [flags]
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>where &lt;code>command&lt;/code>, &lt;code>name&lt;/code>, and &lt;code>flags&lt;/code> are:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>command&lt;/code>: Specifies the operation that you want to perform on one or more resources,
for example &lt;code>config&lt;/code>, &lt;code>version&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>entity&lt;/code>: Specifies the entity the operation is being performed on such as &lt;code>envoy-proxy&lt;/code> or &lt;code>envoy-gateway&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>name&lt;/code>: Specifies the name of the specified instance.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>flags&lt;/code>: Specifies optional flags. For example, you can use the &lt;code>-c&lt;/code> or &lt;code>--config&lt;/code> flags to specify the values for installing.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>If you need help, run &lt;code>egctl help&lt;/code> from the terminal window.&lt;/p>
&lt;h2 id="operation">Operation&lt;/h2>
&lt;p>The following table includes short descriptions and the general syntax for all the &lt;code>egctl&lt;/code> operations:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Operation&lt;/th>
&lt;th>Syntax&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>version&lt;/code>&lt;/td>
&lt;td>&lt;code>egctl version&lt;/code>&lt;/td>
&lt;td>Prints out build version information.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>config&lt;/code>&lt;/td>
&lt;td>&lt;code>egctl config ENTITY&lt;/code>&lt;/td>
&lt;td>Retrieve information about proxy configuration from envoy proxy and gateway&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>analyze&lt;/code>&lt;/td>
&lt;td>&lt;code>egctl analyze&lt;/code>&lt;/td>
&lt;td>Analyze EG configuration and print validation messages&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>experimental&lt;/code>&lt;/td>
&lt;td>&lt;code>egctl experimental&lt;/code>&lt;/td>
&lt;td>Subcommand for experimental features. These do not guarantee backwards compatibility&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>Use the following set of examples to help you familiarize yourself with running the commonly used &lt;code>egctl&lt;/code> operations:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902">#&lt;/span> Retrieve all information about proxy configuration from envoy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">egctl config envoy-proxy all &amp;lt;instance_name&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902">#&lt;/span> Retrieve listener information about proxy configuration from envoy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">egctl config envoy-proxy listener &amp;lt;instance_name&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902">#&lt;/span> Retrieve information about envoy gateway
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">egctl config envoy-gateway
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: egctl Design</title><link>http://gateway.xunzhuo.cafe/docs/v0.4.0/design/egctl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.4.0/design/egctl/</guid><description>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>EG should provide a command line tool with following capabilities:&lt;/p>
&lt;ul>
&lt;li>Collect configuration from envoy proxy and gateway&lt;/li>
&lt;li>Analyse system configuration to diagnose any issues in envoy gateway&lt;/li>
&lt;/ul>
&lt;p>This tool is named &lt;code>egctl&lt;/code>.&lt;/p>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>Use the following syntax to run &lt;code>egctl&lt;/code> commands from your terminal window:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">egctl [command] [entity] [name] [flags]
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>where &lt;code>command&lt;/code>, &lt;code>name&lt;/code>, and &lt;code>flags&lt;/code> are:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>command&lt;/code>: Specifies the operation that you want to perform on one or more resources,
for example &lt;code>config&lt;/code>, &lt;code>version&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>entity&lt;/code>: Specifies the entity the operation is being performed on such as &lt;code>envoy-proxy&lt;/code> or &lt;code>envoy-gateway&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>name&lt;/code>: Specifies the name of the specified instance.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>flags&lt;/code>: Specifies optional flags. For example, you can use the &lt;code>-c&lt;/code> or &lt;code>--config&lt;/code> flags to specify the values for installing.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>If you need help, run &lt;code>egctl help&lt;/code> from the terminal window.&lt;/p>
&lt;h2 id="operation">Operation&lt;/h2>
&lt;p>The following table includes short descriptions and the general syntax for all the &lt;code>egctl&lt;/code> operations:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Operation&lt;/th>
&lt;th>Syntax&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>version&lt;/code>&lt;/td>
&lt;td>&lt;code>egctl version&lt;/code>&lt;/td>
&lt;td>Prints out build version information.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>config&lt;/code>&lt;/td>
&lt;td>&lt;code>egctl config ENTITY&lt;/code>&lt;/td>
&lt;td>Retrieve information about proxy configuration from envoy proxy and gateway&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>analyze&lt;/code>&lt;/td>
&lt;td>&lt;code>egctl analyze&lt;/code>&lt;/td>
&lt;td>Analyze EG configuration and print validation messages&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>experimental&lt;/code>&lt;/td>
&lt;td>&lt;code>egctl experimental&lt;/code>&lt;/td>
&lt;td>Subcommand for experimental features. These do not guarantee backwards compatibility&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>Use the following set of examples to help you familiarize yourself with running the commonly used &lt;code>egctl&lt;/code> operations:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902">#&lt;/span> Retrieve all information about proxy configuration from envoy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">egctl config envoy-proxy all &amp;lt;instance_name&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902">#&lt;/span> Retrieve listener information about proxy configuration from envoy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">egctl config envoy-proxy listener &amp;lt;instance_name&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902">#&lt;/span> Retrieve information about envoy gateway
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">egctl config envoy-gateway
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: egctl Design</title><link>http://gateway.xunzhuo.cafe/docs/v0.5.0/design/egctl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.5.0/design/egctl/</guid><description>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>EG should provide a command line tool with following capabilities:&lt;/p>
&lt;ul>
&lt;li>Collect configuration from envoy proxy and gateway&lt;/li>
&lt;li>Analyse system configuration to diagnose any issues in envoy gateway&lt;/li>
&lt;/ul>
&lt;p>This tool is named &lt;code>egctl&lt;/code>.&lt;/p>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>Use the following syntax to run &lt;code>egctl&lt;/code> commands from your terminal window:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">egctl [command] [entity] [name] [flags]
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>where &lt;code>command&lt;/code>, &lt;code>name&lt;/code>, and &lt;code>flags&lt;/code> are:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>command&lt;/code>: Specifies the operation that you want to perform on one or more resources,
for example &lt;code>config&lt;/code>, &lt;code>version&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>entity&lt;/code>: Specifies the entity the operation is being performed on such as &lt;code>envoy-proxy&lt;/code> or &lt;code>envoy-gateway&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>name&lt;/code>: Specifies the name of the specified instance.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>flags&lt;/code>: Specifies optional flags. For example, you can use the &lt;code>-c&lt;/code> or &lt;code>--config&lt;/code> flags to specify the values for installing.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>If you need help, run &lt;code>egctl help&lt;/code> from the terminal window.&lt;/p>
&lt;h2 id="operation">Operation&lt;/h2>
&lt;p>The following table includes short descriptions and the general syntax for all the &lt;code>egctl&lt;/code> operations:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Operation&lt;/th>
&lt;th>Syntax&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>version&lt;/code>&lt;/td>
&lt;td>&lt;code>egctl version&lt;/code>&lt;/td>
&lt;td>Prints out build version information.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>config&lt;/code>&lt;/td>
&lt;td>&lt;code>egctl config ENTITY&lt;/code>&lt;/td>
&lt;td>Retrieve information about proxy configuration from envoy proxy and gateway&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>analyze&lt;/code>&lt;/td>
&lt;td>&lt;code>egctl analyze&lt;/code>&lt;/td>
&lt;td>Analyze EG configuration and print validation messages&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>experimental&lt;/code>&lt;/td>
&lt;td>&lt;code>egctl experimental&lt;/code>&lt;/td>
&lt;td>Subcommand for experimental features. These do not guarantee backwards compatibility&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>Use the following set of examples to help you familiarize yourself with running the commonly used &lt;code>egctl&lt;/code> operations:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902">#&lt;/span> Retrieve all information about proxy configuration from envoy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">egctl config envoy-proxy all &amp;lt;instance_name&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902">#&lt;/span> Retrieve listener information about proxy configuration from envoy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">egctl config envoy-proxy listener &amp;lt;instance_name&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902">#&lt;/span> Retrieve information about envoy gateway
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">egctl config envoy-gateway
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Envoy Gateway APIs</title><link>http://gateway.xunzhuo.cafe/docs/latest/api/extension_types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/latest/api/extension_types/</guid><description>
&lt;h2 id="packages">Packages&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="#gatewayenvoyproxyiov1alpha1">gateway.envoyproxy.io/v1alpha1&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="gatewayenvoyproxyiov1alpha1">gateway.envoyproxy.io/v1alpha1&lt;/h2>
&lt;p>Package v1alpha1 contains API schema definitions for the gateway.envoyproxy.io
API group.&lt;/p>
&lt;h3 id="resource-types">Resource Types&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="#authenticationfilter">AuthenticationFilter&lt;/a>&lt;/li>
&lt;li>&lt;a href="#clienttrafficpolicy">ClientTrafficPolicy&lt;/a>&lt;/li>
&lt;li>&lt;a href="#clienttrafficpolicylist">ClientTrafficPolicyList&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoypatchpolicy">EnvoyPatchPolicy&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoypatchpolicylist">EnvoyPatchPolicyList&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoyproxy">EnvoyProxy&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ratelimitfilter">RateLimitFilter&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="authenticationfilter">AuthenticationFilter&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>gateway.envoyproxy.io/v1alpha1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>AuthenticationFilter&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>metadata&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#objectmeta-v1-meta">ObjectMeta&lt;/a>&lt;/em>&lt;/td>
&lt;td>Refer to Kubernetes API documentation for fields of &lt;code>metadata&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>spec&lt;/code> &lt;em>&lt;a href="#authenticationfilterspec">AuthenticationFilterSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>Spec defines the desired state of the AuthenticationFilter type.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="authenticationfilterspec">AuthenticationFilterSpec&lt;/h2>
&lt;p>AuthenticationFilterSpec defines the desired state of the AuthenticationFilter type.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#authenticationfilter">AuthenticationFilter&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#authenticationfiltertype">AuthenticationFilterType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type defines the type of authentication provider to use. Supported provider types are &amp;ldquo;JWT&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>jwtProviders&lt;/code> &lt;em>&lt;a href="#jwtauthenticationfilterprovider">JwtAuthenticationFilterProvider&lt;/a> array&lt;/em>&lt;/td>
&lt;td>JWT defines the JSON Web Token (JWT) authentication provider type. When multiple jwtProviders are specified, the JWT is considered valid if any of the providers successfully validate the JWT. For additional details, see &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/jwt_authn_filter.html">https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/jwt_authn_filter.html&lt;/a>.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="authenticationfiltertype">AuthenticationFilterType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>AuthenticationFilterType is a type of authentication provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#authenticationfilterspec">AuthenticationFilterSpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="bootstraptype">BootstrapType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>BootstrapType defines the types of bootstrap supported by Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxybootstrap">ProxyBootstrap&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="claimtoheader">ClaimToHeader&lt;/h2>
&lt;p>ClaimToHeader defines a configuration to convert JWT claims into HTTP headers&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#jwtauthenticationfilterprovider">JwtAuthenticationFilterProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>header&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Header defines the name of the HTTP request header that the JWT Claim will be saved into.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>claim&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Claim is the JWT Claim that should be saved into the header : it can be a nested claim of type (eg. &amp;ldquo;claim.nested.key&amp;rdquo;, &amp;ldquo;sub&amp;rdquo;). The nested claim name must use dot &amp;ldquo;.&amp;rdquo; to separate the JSON name path.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="clienttrafficpolicy">ClientTrafficPolicy&lt;/h2>
&lt;p>ClientTrafficPolicy allows the user to configure the behavior of the connection between the downstream client and Envoy Proxy listener.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#clienttrafficpolicylist">ClientTrafficPolicyList&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>gateway.envoyproxy.io/v1alpha1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>ClientTrafficPolicy&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>metadata&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#objectmeta-v1-meta">ObjectMeta&lt;/a>&lt;/em>&lt;/td>
&lt;td>Refer to Kubernetes API documentation for fields of &lt;code>metadata&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>spec&lt;/code> &lt;em>&lt;a href="#clienttrafficpolicyspec">ClientTrafficPolicySpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>Spec defines the desired state of ClientTrafficPolicy.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="clienttrafficpolicylist">ClientTrafficPolicyList&lt;/h2>
&lt;p>ClientTrafficPolicyList contains a list of ClientTrafficPolicy resources.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>gateway.envoyproxy.io/v1alpha1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>ClientTrafficPolicyList&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>metadata&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#listmeta-v1-meta">ListMeta&lt;/a>&lt;/em>&lt;/td>
&lt;td>Refer to Kubernetes API documentation for fields of &lt;code>metadata&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>items&lt;/code> &lt;em>&lt;a href="#clienttrafficpolicy">ClientTrafficPolicy&lt;/a> array&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="clienttrafficpolicyspec">ClientTrafficPolicySpec&lt;/h2>
&lt;p>ClientTrafficPolicySpec defines the desired state of ClientTrafficPolicy.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#clienttrafficpolicy">ClientTrafficPolicy&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>targetRef&lt;/code> &lt;em>&lt;a href="#policytargetreferencewithsectionname">PolicyTargetReferenceWithSectionName&lt;/a>&lt;/em>&lt;/td>
&lt;td>TargetRef is the name of the Gateway resource this policy is being attached to. This Policy and the TargetRef MUST be in the same namespace for this Policy to have effect and be applied to the Gateway. TargetRef&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tcpKeepalive&lt;/code> &lt;em>&lt;a href="#tcpkeepalive">TCPKeepalive&lt;/a>&lt;/em>&lt;/td>
&lt;td>TcpKeepalive settings associated with the downstream client connection. If defined, sets SO_KEEPALIVE on the listener socket to enable TCP Keepalives. Disabled by default.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="customtag">CustomTag&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxytracing">ProxyTracing&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#customtagtype">CustomTagType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type defines the type of custom tag.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>literal&lt;/code> &lt;em>&lt;a href="#literalcustomtag">LiteralCustomTag&lt;/a>&lt;/em>&lt;/td>
&lt;td>Literal adds hard-coded value to each span. It&amp;rsquo;s required when the type is &amp;ldquo;Literal&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>environment&lt;/code> &lt;em>&lt;a href="#environmentcustomtag">EnvironmentCustomTag&lt;/a>&lt;/em>&lt;/td>
&lt;td>Environment adds value from environment variable to each span. It&amp;rsquo;s required when the type is &amp;ldquo;Environment&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>requestHeader&lt;/code> &lt;em>&lt;a href="#requestheadercustomtag">RequestHeaderCustomTag&lt;/a>&lt;/em>&lt;/td>
&lt;td>RequestHeader adds value from request header to each span. It&amp;rsquo;s required when the type is &amp;ldquo;RequestHeader&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="customtagtype">CustomTagType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#customtag">CustomTag&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="environmentcustomtag">EnvironmentCustomTag&lt;/h2>
&lt;p>EnvironmentCustomTag adds value from environment variable to each span.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#customtag">CustomTag&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>name&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Name defines the name of the environment variable which to extract the value from.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>defaultValue&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>DefaultValue defines the default value to use if the environment variable is not set.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygateway">EnvoyGateway&lt;/h2>
&lt;p>EnvoyGateway is the schema for the envoygateways API.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>gateway.envoyproxy.io/v1alpha1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>EnvoyGateway&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>gateway&lt;/code> &lt;em>&lt;a href="#gateway">Gateway&lt;/a>&lt;/em>&lt;/td>
&lt;td>Gateway defines desired Gateway API specific configuration. If unset, default configuration parameters will apply.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>provider&lt;/code> &lt;em>&lt;a href="#envoygatewayprovider">EnvoyGatewayProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Provider defines the desired provider and provider-specific configuration. If unspecified, the Kubernetes provider is used with default configuration parameters.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>logging&lt;/code> &lt;em>&lt;a href="#envoygatewaylogging">EnvoyGatewayLogging&lt;/a>&lt;/em>&lt;/td>
&lt;td>Logging defines logging parameters for Envoy Gateway.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>admin&lt;/code> &lt;em>&lt;a href="#envoygatewayadmin">EnvoyGatewayAdmin&lt;/a>&lt;/em>&lt;/td>
&lt;td>Admin defines the desired admin related abilities. If unspecified, the Admin is used with default configuration parameters.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>rateLimit&lt;/code> &lt;em>&lt;a href="#ratelimit">RateLimit&lt;/a>&lt;/em>&lt;/td>
&lt;td>RateLimit defines the configuration associated with the Rate Limit service deployed by Envoy Gateway required to implement the Global Rate limiting functionality. The specific rate limit service used here is the reference implementation in Envoy. For more details visit &lt;a href="https://github.com/envoyproxy/ratelimit">https://github.com/envoyproxy/ratelimit&lt;/a>. This configuration is unneeded for &amp;ldquo;Local&amp;rdquo; rate limiting.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>extensionManager&lt;/code> &lt;em>&lt;a href="#extensionmanager">ExtensionManager&lt;/a>&lt;/em>&lt;/td>
&lt;td>ExtensionManager defines an extension manager to register for the Envoy Gateway Control Plane.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>extensionApis&lt;/code> &lt;em>&lt;a href="#extensionapisettings">ExtensionAPISettings&lt;/a>&lt;/em>&lt;/td>
&lt;td>ExtensionAPIs defines the settings related to specific Gateway API Extensions implemented by Envoy Gateway&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayadmin">EnvoyGatewayAdmin&lt;/h2>
&lt;p>EnvoyGatewayAdmin defines the Envoy Gateway Admin configuration.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>address&lt;/code> &lt;em>&lt;a href="#envoygatewayadminaddress">EnvoyGatewayAdminAddress&lt;/a>&lt;/em>&lt;/td>
&lt;td>Address defines the address of Envoy Gateway Admin Server.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>debug&lt;/code> &lt;em>boolean&lt;/em>&lt;/td>
&lt;td>Debug defines if enable the /debug endpoint of Envoy Gateway.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayadminaddress">EnvoyGatewayAdminAddress&lt;/h2>
&lt;p>EnvoyGatewayAdminAddress defines the Envoy Gateway Admin Address configuration.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayadmin">EnvoyGatewayAdmin&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>port&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>Port defines the port the admin server is exposed on.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>host&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Host defines the admin server hostname.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewaycustomprovider">EnvoyGatewayCustomProvider&lt;/h2>
&lt;p>EnvoyGatewayCustomProvider defines configuration for the Custom provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayprovider">EnvoyGatewayProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>resource&lt;/code> &lt;em>&lt;a href="#envoygatewayresourceprovider">EnvoyGatewayResourceProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Resource defines the desired resource provider. This provider is used to specify the provider to be used to retrieve the resource configurations such as Gateway API resources&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>infrastructure&lt;/code> &lt;em>&lt;a href="#envoygatewayinfrastructureprovider">EnvoyGatewayInfrastructureProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Infrastructure defines the desired infrastructure provider. This provider is used to specify the provider to be used to provide an environment to deploy the out resources like the Envoy Proxy data plane.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayfileresourceprovider">EnvoyGatewayFileResourceProvider&lt;/h2>
&lt;p>EnvoyGatewayFileResourceProvider defines configuration for the File Resource provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayresourceprovider">EnvoyGatewayResourceProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>paths&lt;/code> &lt;em>string array&lt;/em>&lt;/td>
&lt;td>Paths are the paths to a directory or file containing the resource configuration. Recursive sub directories are not currently supported.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayhostinfrastructureprovider">EnvoyGatewayHostInfrastructureProvider&lt;/h2>
&lt;p>EnvoyGatewayHostInfrastructureProvider defines configuration for the Host Infrastructure provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayinfrastructureprovider">EnvoyGatewayInfrastructureProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="envoygatewayinfrastructureprovider">EnvoyGatewayInfrastructureProvider&lt;/h2>
&lt;p>EnvoyGatewayInfrastructureProvider defines configuration for the Custom Infrastructure provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewaycustomprovider">EnvoyGatewayCustomProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#infrastructureprovidertype">InfrastructureProviderType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the type of infrastructure providers to use. Supported types are &amp;ldquo;Host&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>host&lt;/code> &lt;em>&lt;a href="#envoygatewayhostinfrastructureprovider">EnvoyGatewayHostInfrastructureProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Host defines the configuration of the Host provider. Host provides runtime deployment of the data plane as a child process on the host environment.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewaykubernetesprovider">EnvoyGatewayKubernetesProvider&lt;/h2>
&lt;p>EnvoyGatewayKubernetesProvider defines configuration for the Kubernetes provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayprovider">EnvoyGatewayProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>rateLimitDeployment&lt;/code> &lt;em>&lt;a href="#kubernetesdeploymentspec">KubernetesDeploymentSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>RateLimitDeployment defines the desired state of the Envoy ratelimit deployment resource. If unspecified, default settings for the managed Envoy ratelimit deployment resource are applied.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>watch&lt;/code> &lt;em>&lt;a href="#kuberneteswatchmode">KubernetesWatchMode&lt;/a>&lt;/em>&lt;/td>
&lt;td>Watch holds configuration of which input resources should be watched and reconciled.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>deploy&lt;/code> &lt;em>&lt;a href="#kubernetesdeploymode">KubernetesDeployMode&lt;/a>&lt;/em>&lt;/td>
&lt;td>Deploy holds configuration of how output managed resources such as the Envoy Proxy data plane should be deployed&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>overwrite_control_plane_certs&lt;/code> &lt;em>boolean&lt;/em>&lt;/td>
&lt;td>OverwriteControlPlaneCerts updates the secrets containing the control plane certs, when set.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewaylogcomponent">EnvoyGatewayLogComponent&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>EnvoyGatewayLogComponent defines a component that supports a configured logging level.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewaylogging">EnvoyGatewayLogging&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="envoygatewaylogging">EnvoyGatewayLogging&lt;/h2>
&lt;p>EnvoyGatewayLogging defines logging for Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>level&lt;/code> &lt;em>object (keys:&lt;a href="#envoygatewaylogcomponent">EnvoyGatewayLogComponent&lt;/a>, values:&lt;a href="#loglevel">LogLevel&lt;/a>)&lt;/em>&lt;/td>
&lt;td>Level is the logging level. If unspecified, defaults to &amp;ldquo;info&amp;rdquo;. EnvoyGatewayLogComponent options: default/provider/gateway-api/xds-translator/xds-server/infrastructure/global-ratelimit. LogLevel options: debug/info/error/warn.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayprovider">EnvoyGatewayProvider&lt;/h2>
&lt;p>EnvoyGatewayProvider defines the desired configuration of a provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#providertype">ProviderType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the type of provider to use. Supported types are &amp;ldquo;Kubernetes&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kubernetes&lt;/code> &lt;em>&lt;a href="#envoygatewaykubernetesprovider">EnvoyGatewayKubernetesProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Kubernetes defines the configuration of the Kubernetes provider. Kubernetes provides runtime configuration via the Kubernetes API.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>custom&lt;/code> &lt;em>&lt;a href="#envoygatewaycustomprovider">EnvoyGatewayCustomProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Custom defines the configuration for the Custom provider. This provider allows you to define a specific resource provider and a infrastructure provider.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayresourceprovider">EnvoyGatewayResourceProvider&lt;/h2>
&lt;p>EnvoyGatewayResourceProvider defines configuration for the Custom Resource provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewaycustomprovider">EnvoyGatewayCustomProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#resourceprovidertype">ResourceProviderType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the type of resource provider to use. Supported types are &amp;ldquo;File&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>file&lt;/code> &lt;em>&lt;a href="#envoygatewayfileresourceprovider">EnvoyGatewayFileResourceProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>File defines the configuration of the File provider. File provides runtime configuration defined by one or more files.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoygatewayspec">EnvoyGatewaySpec&lt;/h2>
&lt;p>EnvoyGatewaySpec defines the desired state of Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>gateway&lt;/code> &lt;em>&lt;a href="#gateway">Gateway&lt;/a>&lt;/em>&lt;/td>
&lt;td>Gateway defines desired Gateway API specific configuration. If unset, default configuration parameters will apply.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>provider&lt;/code> &lt;em>&lt;a href="#envoygatewayprovider">EnvoyGatewayProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Provider defines the desired provider and provider-specific configuration. If unspecified, the Kubernetes provider is used with default configuration parameters.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>logging&lt;/code> &lt;em>&lt;a href="#envoygatewaylogging">EnvoyGatewayLogging&lt;/a>&lt;/em>&lt;/td>
&lt;td>Logging defines logging parameters for Envoy Gateway.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>admin&lt;/code> &lt;em>&lt;a href="#envoygatewayadmin">EnvoyGatewayAdmin&lt;/a>&lt;/em>&lt;/td>
&lt;td>Admin defines the desired admin related abilities. If unspecified, the Admin is used with default configuration parameters.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>rateLimit&lt;/code> &lt;em>&lt;a href="#ratelimit">RateLimit&lt;/a>&lt;/em>&lt;/td>
&lt;td>RateLimit defines the configuration associated with the Rate Limit service deployed by Envoy Gateway required to implement the Global Rate limiting functionality. The specific rate limit service used here is the reference implementation in Envoy. For more details visit &lt;a href="https://github.com/envoyproxy/ratelimit">https://github.com/envoyproxy/ratelimit&lt;/a>. This configuration is unneeded for &amp;ldquo;Local&amp;rdquo; rate limiting.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>extensionManager&lt;/code> &lt;em>&lt;a href="#extensionmanager">ExtensionManager&lt;/a>&lt;/em>&lt;/td>
&lt;td>ExtensionManager defines an extension manager to register for the Envoy Gateway Control Plane.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>extensionApis&lt;/code> &lt;em>&lt;a href="#extensionapisettings">ExtensionAPISettings&lt;/a>&lt;/em>&lt;/td>
&lt;td>ExtensionAPIs defines the settings related to specific Gateway API Extensions implemented by Envoy Gateway&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoyjsonpatchconfig">EnvoyJSONPatchConfig&lt;/h2>
&lt;p>EnvoyJSONPatchConfig defines the configuration for patching a Envoy xDS Resource using JSONPatch semantic&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoypatchpolicyspec">EnvoyPatchPolicySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#envoyresourcetype">EnvoyResourceType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the typed URL of the Envoy xDS Resource&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>name&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Name is the name of the resource&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>operation&lt;/code> &lt;em>&lt;a href="#jsonpatchoperation">JSONPatchOperation&lt;/a>&lt;/em>&lt;/td>
&lt;td>Patch defines the JSON Patch Operation&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoypatchpolicy">EnvoyPatchPolicy&lt;/h2>
&lt;p>EnvoyPatchPolicy allows the user to modify the generated Envoy xDS resources by Envoy Gateway using this patch API&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoypatchpolicylist">EnvoyPatchPolicyList&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>gateway.envoyproxy.io/v1alpha1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>EnvoyPatchPolicy&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>metadata&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#objectmeta-v1-meta">ObjectMeta&lt;/a>&lt;/em>&lt;/td>
&lt;td>Refer to Kubernetes API documentation for fields of &lt;code>metadata&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>spec&lt;/code> &lt;em>&lt;a href="#envoypatchpolicyspec">EnvoyPatchPolicySpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>Spec defines the desired state of EnvoyPatchPolicy.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoypatchpolicylist">EnvoyPatchPolicyList&lt;/h2>
&lt;p>EnvoyPatchPolicyList contains a list of EnvoyPatchPolicy resources.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>gateway.envoyproxy.io/v1alpha1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>EnvoyPatchPolicyList&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>metadata&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#listmeta-v1-meta">ListMeta&lt;/a>&lt;/em>&lt;/td>
&lt;td>Refer to Kubernetes API documentation for fields of &lt;code>metadata&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>items&lt;/code> &lt;em>&lt;a href="#envoypatchpolicy">EnvoyPatchPolicy&lt;/a> array&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoypatchpolicyspec">EnvoyPatchPolicySpec&lt;/h2>
&lt;p>EnvoyPatchPolicySpec defines the desired state of EnvoyPatchPolicy.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoypatchpolicy">EnvoyPatchPolicy&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#envoypatchtype">EnvoyPatchType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type decides the type of patch. Valid EnvoyPatchType values are &amp;ldquo;JSONPatch&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>jsonPatches&lt;/code> &lt;em>&lt;a href="#envoyjsonpatchconfig">EnvoyJSONPatchConfig&lt;/a> array&lt;/em>&lt;/td>
&lt;td>JSONPatch defines the JSONPatch configuration.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>targetRef&lt;/code> &lt;em>&lt;a href="#policytargetreference">PolicyTargetReference&lt;/a>&lt;/em>&lt;/td>
&lt;td>TargetRef is the name of the Gateway API resource this policy is being attached to. Currently only attaching to Gateway is supported This Policy and the TargetRef MUST be in the same namespace for this Policy to have effect and be applied to the Gateway TargetRef&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>priority&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>Priority of the EnvoyPatchPolicy. If multiple EnvoyPatchPolicies are applied to the same TargetRef, they will be applied in the ascending order of the priority i.e. int32.min has the highest priority and int32.max has the lowest priority. Defaults to 0.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoypatchtype">EnvoyPatchType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>EnvoyPatchType specifies the types of Envoy patching mechanisms.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoypatchpolicyspec">EnvoyPatchPolicySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="envoyproxy">EnvoyProxy&lt;/h2>
&lt;p>EnvoyProxy is the schema for the envoyproxies API.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>gateway.envoyproxy.io/v1alpha1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>EnvoyProxy&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>metadata&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#objectmeta-v1-meta">ObjectMeta&lt;/a>&lt;/em>&lt;/td>
&lt;td>Refer to Kubernetes API documentation for fields of &lt;code>metadata&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>spec&lt;/code> &lt;em>&lt;a href="#envoyproxyspec">EnvoyProxySpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>EnvoyProxySpec defines the desired state of EnvoyProxy.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoyproxykubernetesprovider">EnvoyProxyKubernetesProvider&lt;/h2>
&lt;p>EnvoyProxyKubernetesProvider defines configuration for the Kubernetes resource provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxyprovider">EnvoyProxyProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>envoyDeployment&lt;/code> &lt;em>&lt;a href="#kubernetesdeploymentspec">KubernetesDeploymentSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>EnvoyDeployment defines the desired state of the Envoy deployment resource. If unspecified, default settings for the managed Envoy deployment resource are applied.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>envoyService&lt;/code> &lt;em>&lt;a href="#kubernetesservicespec">KubernetesServiceSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>EnvoyService defines the desired state of the Envoy service resource. If unspecified, default settings for the managed Envoy service resource are applied.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoyproxyprovider">EnvoyProxyProvider&lt;/h2>
&lt;p>EnvoyProxyProvider defines the desired state of a resource provider.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxyspec">EnvoyProxySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#providertype">ProviderType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the type of resource provider to use. A resource provider provides infrastructure resources for running the data plane, e.g. Envoy proxy, and optional auxiliary control planes. Supported types are &amp;ldquo;Kubernetes&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kubernetes&lt;/code> &lt;em>&lt;a href="#envoyproxykubernetesprovider">EnvoyProxyKubernetesProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Kubernetes defines the desired state of the Kubernetes resource provider. Kubernetes provides infrastructure resources for running the data plane, e.g. Envoy proxy. If unspecified and type is &amp;ldquo;Kubernetes&amp;rdquo;, default settings for managed Kubernetes resources are applied.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoyproxyspec">EnvoyProxySpec&lt;/h2>
&lt;p>EnvoyProxySpec defines the desired state of EnvoyProxy.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxy">EnvoyProxy&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>provider&lt;/code> &lt;em>&lt;a href="#envoyproxyprovider">EnvoyProxyProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Provider defines the desired resource provider and provider-specific configuration. If unspecified, the &amp;ldquo;Kubernetes&amp;rdquo; resource provider is used with default configuration parameters.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>logging&lt;/code> &lt;em>&lt;a href="#proxylogging">ProxyLogging&lt;/a>&lt;/em>&lt;/td>
&lt;td>Logging defines logging parameters for managed proxies.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>telemetry&lt;/code> &lt;em>&lt;a href="#proxytelemetry">ProxyTelemetry&lt;/a>&lt;/em>&lt;/td>
&lt;td>Telemetry defines telemetry parameters for managed proxies.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>bootstrap&lt;/code> &lt;em>&lt;a href="#proxybootstrap">ProxyBootstrap&lt;/a>&lt;/em>&lt;/td>
&lt;td>Bootstrap defines the Envoy Bootstrap as a YAML string. Visit &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/bootstrap/v3/bootstrap.proto#envoy-v3-api-msg-config-bootstrap-v3-bootstrap">https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/bootstrap/v3/bootstrap.proto#envoy-v3-api-msg-config-bootstrap-v3-bootstrap&lt;/a> to learn more about the syntax. If set, this is the Bootstrap configuration used for the managed Envoy Proxy fleet instead of the default Bootstrap configuration set by Envoy Gateway. Some fields within the Bootstrap that are required to communicate with the xDS Server (Envoy Gateway) and receive xDS resources from it are not configurable and will result in the &lt;code>EnvoyProxy&lt;/code> resource being rejected. Backward compatibility across minor versions is not guaranteed. We strongly recommend using &lt;code>egctl x translate&lt;/code> to generate a &lt;code>EnvoyProxy&lt;/code> resource with the &lt;code>Bootstrap&lt;/code> field set to the default Bootstrap configuration used. You can edit this configuration, and rerun &lt;code>egctl x translate&lt;/code> to ensure there are no validation errors.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>concurrency&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>Concurrency defines the number of worker threads to run. If unset, it defaults to the number of cpuset threads on the platform.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>mergeGateways&lt;/code> &lt;em>boolean&lt;/em>&lt;/td>
&lt;td>MergeGateways defines if Gateway resources should be merged onto the same Envoy Proxy Infrastructure. Setting this field to true would merge all Gateway Listeners under the parent Gateway Class. This means that the port, protocol and hostname tuple must be unique for every listener. If a duplicate listener is detected, the newer listener (based on timestamp) will be rejected and its status will be updated with a &amp;ldquo;Accepted=False&amp;rdquo; condition.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="envoyresourcetype">EnvoyResourceType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>EnvoyResourceType specifies the type URL of the Envoy resource.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyjsonpatchconfig">EnvoyJSONPatchConfig&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="extensionapisettings">ExtensionAPISettings&lt;/h2>
&lt;p>ExtensionAPISettings defines the settings specific to Gateway API Extensions.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>enableEnvoyPatchPolicy&lt;/code> &lt;em>boolean&lt;/em>&lt;/td>
&lt;td>EnableEnvoyPatchPolicy enables Envoy Gateway to reconcile and implement the EnvoyPatchPolicy resources.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="extensionhooks">ExtensionHooks&lt;/h2>
&lt;p>ExtensionHooks defines extension hooks across all supported runners&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#extensionmanager">ExtensionManager&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>xdsTranslator&lt;/code> &lt;em>&lt;a href="#xdstranslatorhooks">XDSTranslatorHooks&lt;/a>&lt;/em>&lt;/td>
&lt;td>XDSTranslator defines all the supported extension hooks for the xds-translator runner&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="extensionmanager">ExtensionManager&lt;/h2>
&lt;p>ExtensionManager defines the configuration for registering an extension manager to the Envoy Gateway control plane.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>resources&lt;/code> &lt;em>&lt;a href="#groupversionkind">GroupVersionKind&lt;/a> array&lt;/em>&lt;/td>
&lt;td>Resources defines the set of K8s resources the extension will handle.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>hooks&lt;/code> &lt;em>&lt;a href="#extensionhooks">ExtensionHooks&lt;/a>&lt;/em>&lt;/td>
&lt;td>Hooks defines the set of hooks the extension supports&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code> &lt;em>&lt;a href="#extensionservice">ExtensionService&lt;/a>&lt;/em>&lt;/td>
&lt;td>Service defines the configuration of the extension service that the Envoy Gateway Control Plane will call through extension hooks.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="extensionservice">ExtensionService&lt;/h2>
&lt;p>ExtensionService defines the configuration for connecting to a registered extension service.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#extensionmanager">ExtensionManager&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>host&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Host define the extension service hostname.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>port&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>Port defines the port the extension service is exposed on.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tls&lt;/code> &lt;em>&lt;a href="#extensiontls">ExtensionTLS&lt;/a>&lt;/em>&lt;/td>
&lt;td>TLS defines TLS configuration for communication between Envoy Gateway and the extension service.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="extensiontls">ExtensionTLS&lt;/h2>
&lt;p>ExtensionTLS defines the TLS configuration when connecting to an extension service&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#extensionservice">ExtensionService&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>certificateRef&lt;/code> &lt;em>&lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.SecretObjectReference">SecretObjectReference&lt;/a>&lt;/em>&lt;/td>
&lt;td>CertificateRef contains a references to objects (Kubernetes objects or otherwise) that contains a TLS certificate and private keys. These certificates are used to establish a TLS handshake to the extension server.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CertificateRef can only reference a Kubernetes Secret at this time.&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="fileenvoyproxyaccesslog">FileEnvoyProxyAccessLog&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxyaccesslogsink">ProxyAccessLogSink&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>path&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Path defines the file path used to expose envoy access log(e.g. /dev/stdout).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="gateway">Gateway&lt;/h2>
&lt;p>Gateway defines the desired Gateway API configuration of Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>controllerName&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>ControllerName defines the name of the Gateway API controller. If unspecified, defaults to &amp;ldquo;gateway.envoyproxy.io/gatewayclass-controller&amp;rdquo;. See the following for additional details: &lt;a href="https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass">https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.GatewayClass&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="globalratelimit">GlobalRateLimit&lt;/h2>
&lt;p>GlobalRateLimit defines global rate limit configuration.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitfilterspec">RateLimitFilterSpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>rules&lt;/code> &lt;em>&lt;a href="#ratelimitrule">RateLimitRule&lt;/a> array&lt;/em>&lt;/td>
&lt;td>Rules are a list of RateLimit selectors and limits. Each rule and its associated limit is applied in a mutually exclusive way i.e. if multiple rules get selected, each of their associated limits get applied, so a single traffic request might increase the rate limit counters for multiple rules if selected.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="groupversionkind">GroupVersionKind&lt;/h2>
&lt;p>GroupVersionKind unambiguously identifies a Kind. It can be converted to k8s.io/apimachinery/pkg/runtime/schema.GroupVersionKind&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#extensionmanager">ExtensionManager&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>group&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>version&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="headermatch">HeaderMatch&lt;/h2>
&lt;p>HeaderMatch defines the match attributes within the HTTP Headers of the request.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitselectcondition">RateLimitSelectCondition&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#headermatchtype">HeaderMatchType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type specifies how to match against the value of the header.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>name&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Name of the HTTP header.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>value&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Value within the HTTP header. Due to the case-insensitivity of header names, &amp;ldquo;foo&amp;rdquo; and &amp;ldquo;Foo&amp;rdquo; are considered equivalent. Do not set this field when Type=&amp;ldquo;Distinct&amp;rdquo;, implying matching on any/all unique values within the header.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="headermatchtype">HeaderMatchType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>HeaderMatchType specifies the semantics of how HTTP header values should be compared. Valid HeaderMatchType values are &amp;ldquo;Exact&amp;rdquo;, &amp;ldquo;RegularExpression&amp;rdquo;, and &amp;ldquo;Distinct&amp;rdquo;.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#headermatch">HeaderMatch&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="infrastructureprovidertype">InfrastructureProviderType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>InfrastructureProviderType defines the types of custom infrastructure providers supported by Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayinfrastructureprovider">EnvoyGatewayInfrastructureProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="jsonpatchoperation">JSONPatchOperation&lt;/h2>
&lt;p>JSONPatchOperation defines the JSON Patch Operation as defined in &lt;a href="https://datatracker.ietf.org/doc/html/rfc6902">https://datatracker.ietf.org/doc/html/rfc6902&lt;/a>&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyjsonpatchconfig">EnvoyJSONPatchConfig&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>op&lt;/code> &lt;em>&lt;a href="#jsonpatchoperationtype">JSONPatchOperationType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Op is the type of operation to perform&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>path&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Path is the location of the target document/field where the operation will be performed Refer to &lt;a href="https://datatracker.ietf.org/doc/html/rfc6901">https://datatracker.ietf.org/doc/html/rfc6901&lt;/a> for more details.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>value&lt;/code> &lt;em>&lt;a href="#json">JSON&lt;/a>&lt;/em>&lt;/td>
&lt;td>Value is the new value of the path location.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="jsonpatchoperationtype">JSONPatchOperationType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>JSONPatchOperationType specifies the JSON Patch operations that can be performed.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#jsonpatchoperation">JSONPatchOperation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="jwtauthenticationfilterprovider">JwtAuthenticationFilterProvider&lt;/h2>
&lt;p>JwtAuthenticationFilterProvider defines the JSON Web Token (JWT) authentication provider type and how JWTs should be verified:&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#authenticationfilterspec">AuthenticationFilterSpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>name&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Name defines a unique name for the JWT provider. A name can have a variety of forms, including RFC1123 subdomains, RFC 1123 labels, or RFC 1035 labels.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>issuer&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Issuer is the principal that issued the JWT and takes the form of a URL or email address. For additional details, see &lt;a href="https://tools.ietf.org/html/rfc7519#section-4.1.1">https://tools.ietf.org/html/rfc7519#section-4.1.1&lt;/a> for URL format and &lt;a href="https://rfc-editor.org/rfc/rfc5322.html">https://rfc-editor.org/rfc/rfc5322.html&lt;/a> for email format. If not provided, the JWT issuer is not checked.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>audiences&lt;/code> &lt;em>string array&lt;/em>&lt;/td>
&lt;td>Audiences is a list of JWT audiences allowed access. For additional details, see &lt;a href="https://tools.ietf.org/html/rfc7519#section-4.1.3">https://tools.ietf.org/html/rfc7519#section-4.1.3&lt;/a>. If not provided, JWT audiences are not checked.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteJWKS&lt;/code> &lt;em>&lt;a href="#remotejwks">RemoteJWKS&lt;/a>&lt;/em>&lt;/td>
&lt;td>RemoteJWKS defines how to fetch and cache JSON Web Key Sets (JWKS) from a remote HTTP/HTTPS endpoint.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>claimToHeaders&lt;/code> &lt;em>&lt;a href="#claimtoheader">ClaimToHeader&lt;/a> array&lt;/em>&lt;/td>
&lt;td>ClaimToHeaders is a list of JWT claims that must be extracted into HTTP request headers For examples, following config: The claim must be of type; string, int, double, bool. Array type claims are not supported&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="kubernetescontainerspec">KubernetesContainerSpec&lt;/h2>
&lt;p>KubernetesContainerSpec defines the desired state of the Kubernetes container resource.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#kubernetesdeploymentspec">KubernetesDeploymentSpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>env&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#envvar-v1-core">EnvVar&lt;/a> array&lt;/em>&lt;/td>
&lt;td>List of environment variables to set in the container.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>resources&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#resourcerequirements-v1-core">ResourceRequirements&lt;/a>&lt;/em>&lt;/td>
&lt;td>Resources required by this container. More info: &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>securityContext&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#securitycontext-v1-core">SecurityContext&lt;/a>&lt;/em>&lt;/td>
&lt;td>SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/security-context/">https://kubernetes.io/docs/tasks/configure-pod-container/security-context/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>image&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Image specifies the EnvoyProxy container image to be used, instead of the default image.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>volumeMounts&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#volumemount-v1-core">VolumeMount&lt;/a> array&lt;/em>&lt;/td>
&lt;td>VolumeMounts are volumes to mount into the container&amp;rsquo;s filesystem. Cannot be updated.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="kubernetesdeploymode">KubernetesDeployMode&lt;/h2>
&lt;p>KubernetesDeployMode holds configuration for how to deploy managed resources such as the Envoy Proxy data plane fleet.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewaykubernetesprovider">EnvoyGatewayKubernetesProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="kubernetesdeploymentspec">KubernetesDeploymentSpec&lt;/h2>
&lt;p>KubernetesDeploymentSpec defines the desired state of the Kubernetes deployment resource.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewaykubernetesprovider">EnvoyGatewayKubernetesProvider&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoyproxykubernetesprovider">EnvoyProxyKubernetesProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>replicas&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>Replicas is the number of desired pods. Defaults to 1.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>strategy&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#deploymentstrategy-v1-apps">DeploymentStrategy&lt;/a>&lt;/em>&lt;/td>
&lt;td>The deployment strategy to use to replace existing pods with new ones.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>pod&lt;/code> &lt;em>&lt;a href="#kubernetespodspec">KubernetesPodSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>Pod defines the desired annotations and securityContext of container.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>container&lt;/code> &lt;em>&lt;a href="#kubernetescontainerspec">KubernetesContainerSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>Container defines the resources and securityContext of container.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="kubernetespodspec">KubernetesPodSpec&lt;/h2>
&lt;p>KubernetesPodSpec defines the desired state of the Kubernetes pod resource.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#kubernetesdeploymentspec">KubernetesDeploymentSpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>annotations&lt;/code> &lt;em>object (keys:string, values:string)&lt;/em>&lt;/td>
&lt;td>Annotations are the annotations that should be appended to the pods. By default, no pod annotations are appended.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>labels&lt;/code> &lt;em>object (keys:string, values:string)&lt;/em>&lt;/td>
&lt;td>Labels are the additional labels that should be tagged to the pods. By default, no additional pod labels are tagged.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>securityContext&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#podsecuritycontext-v1-core">PodSecurityContext&lt;/a>&lt;/em>&lt;/td>
&lt;td>SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty. See type description for default values of each field.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>affinity&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#affinity-v1-core">Affinity&lt;/a>&lt;/em>&lt;/td>
&lt;td>If specified, the pod&amp;rsquo;s scheduling constraints.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tolerations&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#toleration-v1-core">Toleration&lt;/a> array&lt;/em>&lt;/td>
&lt;td>If specified, the pod&amp;rsquo;s tolerations.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>volumes&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#volume-v1-core">Volume&lt;/a> array&lt;/em>&lt;/td>
&lt;td>Volumes that can be mounted by containers belonging to the pod. More info: &lt;a href="https://kubernetes.io/docs/concepts/storage/volumes">https://kubernetes.io/docs/concepts/storage/volumes&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="kubernetesservicespec">KubernetesServiceSpec&lt;/h2>
&lt;p>KubernetesServiceSpec defines the desired state of the Kubernetes service resource.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxykubernetesprovider">EnvoyProxyKubernetesProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>annotations&lt;/code> &lt;em>object (keys:string, values:string)&lt;/em>&lt;/td>
&lt;td>Annotations that should be appended to the service. By default, no annotations are appended.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#servicetype">ServiceType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type determines how the Service is exposed. Defaults to LoadBalancer. Valid options are ClusterIP, LoadBalancer and NodePort. &amp;ldquo;LoadBalancer&amp;rdquo; means a service will be exposed via an external load balancer (if the cloud provider supports it). &amp;ldquo;ClusterIP&amp;rdquo; means a service will only be accessible inside the cluster, via the cluster IP. &amp;ldquo;NodePort&amp;rdquo; means a service will be exposed on a static Port on all Nodes of the cluster.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>loadBalancerClass&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>LoadBalancerClass, when specified, allows for choosing the LoadBalancer provider implementation if more than one are available or is otherwise expected to be specified&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>allocateLoadBalancerNodePorts&lt;/code> &lt;em>boolean&lt;/em>&lt;/td>
&lt;td>AllocateLoadBalancerNodePorts defines if NodePorts will be automatically allocated for services with type LoadBalancer. Default is &amp;ldquo;true&amp;rdquo;. It may be set to &amp;ldquo;false&amp;rdquo; if the cluster load-balancer does not rely on NodePorts. If the caller requests specific NodePorts (by specifying a value), those requests will be respected, regardless of this field. This field may only be set for services with type LoadBalancer and will be cleared if the type is changed to any other type.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="kuberneteswatchmode">KubernetesWatchMode&lt;/h2>
&lt;p>KubernetesWatchMode holds the configuration for which input resources to watch and reconcile.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewaykubernetesprovider">EnvoyGatewayKubernetesProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>Type&lt;/code> &lt;em>&lt;a href="#kuberneteswatchmodetype">KubernetesWatchModeType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type indicates what watch mode to use. KubernetesWatchModeTypeNamespaces and KubernetesWatchModeTypeNamespaceSelectors are currently supported By default, when this field is unset or empty, Envoy Gateway will watch for input namespaced resources from all namespaces.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Namespaces&lt;/code> &lt;em>string array&lt;/em>&lt;/td>
&lt;td>Namespaces holds the list of namespaces that Envoy Gateway will watch for namespaced scoped resources such as Gateway, HTTPRoute and Service. Note that Envoy Gateway will continue to reconcile relevant cluster scoped resources such as GatewayClass that it is linked to. Precisely one of Namespaces and NamespaceSelectors must be set&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>namespaces&lt;/code> &lt;em>string array&lt;/em>&lt;/td>
&lt;td>NamespaceSelectors holds a list of labels that namespaces have to have in order to be watched. Note this doesn&amp;rsquo;t set the informer to watch the namespaces with the given labels. Informer still watches all namespaces. But the events for objects whois namespce have no given labels will be filtered out. Precisely one of Namespaces and NamespaceSelectors must be set&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="kuberneteswatchmodetype">KubernetesWatchModeType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>KubernetesWatchModeType defines the type of KubernetesWatchMode&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#kuberneteswatchmode">KubernetesWatchMode&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="literalcustomtag">LiteralCustomTag&lt;/h2>
&lt;p>LiteralCustomTag adds hard-coded value to each span.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#customtag">CustomTag&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>value&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Value defines the hard-coded value to add to each span.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="logcomponent">LogComponent&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>LogComponent defines a component that supports a configured logging level.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxylogging">ProxyLogging&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="loglevel">LogLevel&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>LogLevel defines a log level for Envoy Gateway and EnvoyProxy system logs. This type is not implemented for EnvoyProxy until &lt;a href="https://github.com/envoyproxy/gateway/issues/280">https://github.com/envoyproxy/gateway/issues/280&lt;/a> is fixed.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewaylogging">EnvoyGatewayLogging&lt;/a>&lt;/li>
&lt;li>&lt;a href="#proxylogging">ProxyLogging&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="match">Match&lt;/h2>
&lt;p>Match defines the stats match configuration.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxymetrics">ProxyMetrics&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#matchertype">MatcherType&lt;/a>&lt;/em>&lt;/td>
&lt;td>MatcherType defines the stats matcher type&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>value&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="matchertype">MatcherType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#match">Match&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="metricsink">MetricSink&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxymetrics">ProxyMetrics&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#metricsinktype">MetricSinkType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type defines the metric sink type. EG currently only supports OpenTelemetry.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>openTelemetry&lt;/code> &lt;em>&lt;a href="#opentelemetrysink">OpenTelemetrySink&lt;/a>&lt;/em>&lt;/td>
&lt;td>OpenTelemetry defines the configuration for OpenTelemetry sink. It&amp;rsquo;s required if the sink type is OpenTelemetry.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="metricsinktype">MetricSinkType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#metricsink">MetricSink&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="opentelemetryenvoyproxyaccesslog">OpenTelemetryEnvoyProxyAccessLog&lt;/h2>
&lt;p>TODO: consider reuse ExtensionService?&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxyaccesslogsink">ProxyAccessLogSink&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>host&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Host define the extension service hostname.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>port&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>Port defines the port the extension service is exposed on.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>resources&lt;/code> &lt;em>object (keys:string, values:string)&lt;/em>&lt;/td>
&lt;td>Resources is a set of labels that describe the source of a log entry, including envoy node info. It&amp;rsquo;s recommended to follow &lt;a href="https://opentelemetry.io/docs/reference/specification/resource/semantic_conventions/">semantic conventions&lt;/a>.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="opentelemetrysink">OpenTelemetrySink&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#metricsink">MetricSink&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>host&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Host define the service hostname.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>port&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>Port defines the port the service is exposed on.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="prometheusprovider">PrometheusProvider&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxymetrics">ProxyMetrics&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="providertype">ProviderType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>ProviderType defines the types of providers supported by Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayprovider">EnvoyGatewayProvider&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoyproxyprovider">EnvoyProxyProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="proxyaccesslog">ProxyAccessLog&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxytelemetry">ProxyTelemetry&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>disable&lt;/code> &lt;em>boolean&lt;/em>&lt;/td>
&lt;td>Disable disables access logging for managed proxies if set to true.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>settings&lt;/code> &lt;em>&lt;a href="#proxyaccesslogsetting">ProxyAccessLogSetting&lt;/a> array&lt;/em>&lt;/td>
&lt;td>Settings defines accesslog settings for managed proxies. If unspecified, will send default format to stdout.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="proxyaccesslogformat">ProxyAccessLogFormat&lt;/h2>
&lt;p>ProxyAccessLogFormat defines the format of accesslog. By default accesslogs are written to standard output.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxyaccesslogsetting">ProxyAccessLogSetting&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#proxyaccesslogformattype">ProxyAccessLogFormatType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type defines the type of accesslog format.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>text&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Text defines the text accesslog format, following Envoy accesslog formatting, It&amp;rsquo;s required when the format type is &amp;ldquo;Text&amp;rdquo;. Envoy &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#command-operators">command operators&lt;/a> may be used in the format. The &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#config-access-log-format-strings">format string documentation&lt;/a> provides more information.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>json&lt;/code> &lt;em>object (keys:string, values:string)&lt;/em>&lt;/td>
&lt;td>JSON is additional attributes that describe the specific event occurrence. Structured format for the envoy access logs. Envoy &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#command-operators">command operators&lt;/a> can be used as values for fields within the Struct. It&amp;rsquo;s required when the format type is &amp;ldquo;JSON&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="proxyaccesslogformattype">ProxyAccessLogFormatType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxyaccesslogformat">ProxyAccessLogFormat&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="proxyaccesslogsetting">ProxyAccessLogSetting&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxyaccesslog">ProxyAccessLog&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>format&lt;/code> &lt;em>&lt;a href="#proxyaccesslogformat">ProxyAccessLogFormat&lt;/a>&lt;/em>&lt;/td>
&lt;td>Format defines the format of accesslog.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sinks&lt;/code> &lt;em>&lt;a href="#proxyaccesslogsink">ProxyAccessLogSink&lt;/a> array&lt;/em>&lt;/td>
&lt;td>Sinks defines the sinks of accesslog.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="proxyaccesslogsink">ProxyAccessLogSink&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxyaccesslogsetting">ProxyAccessLogSetting&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#proxyaccesslogsinktype">ProxyAccessLogSinkType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type defines the type of accesslog sink.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>file&lt;/code> &lt;em>&lt;a href="#fileenvoyproxyaccesslog">FileEnvoyProxyAccessLog&lt;/a>&lt;/em>&lt;/td>
&lt;td>File defines the file accesslog sink.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>openTelemetry&lt;/code> &lt;em>&lt;a href="#opentelemetryenvoyproxyaccesslog">OpenTelemetryEnvoyProxyAccessLog&lt;/a>&lt;/em>&lt;/td>
&lt;td>OpenTelemetry defines the OpenTelemetry accesslog sink.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="proxyaccesslogsinktype">ProxyAccessLogSinkType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxyaccesslogsink">ProxyAccessLogSink&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="proxybootstrap">ProxyBootstrap&lt;/h2>
&lt;p>ProxyBootstrap defines Envoy Bootstrap configuration.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxyspec">EnvoyProxySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#bootstraptype">BootstrapType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the type of the bootstrap configuration, it should be either Replace or Merge. If unspecified, it defaults to Replace.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>value&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Value is a YAML string of the bootstrap.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="proxylogging">ProxyLogging&lt;/h2>
&lt;p>ProxyLogging defines logging parameters for managed proxies.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxyspec">EnvoyProxySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>level&lt;/code> &lt;em>object (keys:&lt;a href="#logcomponent">LogComponent&lt;/a>, values:&lt;a href="#loglevel">LogLevel&lt;/a>)&lt;/em>&lt;/td>
&lt;td>Level is a map of logging level per component, where the component is the key and the log level is the value. If unspecified, defaults to &amp;ldquo;default: warn&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="proxymetrics">ProxyMetrics&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxytelemetry">ProxyTelemetry&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>prometheus&lt;/code> &lt;em>&lt;a href="#prometheusprovider">PrometheusProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Prometheus defines the configuration for Admin endpoint &lt;code>/stats/prometheus&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sinks&lt;/code> &lt;em>&lt;a href="#metricsink">MetricSink&lt;/a> array&lt;/em>&lt;/td>
&lt;td>Sinks defines the metric sinks where metrics are sent to.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>matches&lt;/code> &lt;em>&lt;a href="#match">Match&lt;/a> array&lt;/em>&lt;/td>
&lt;td>Matches defines configuration for selecting specific metrics instead of generating all metrics stats that are enabled by default. This helps reduce CPU and memory overhead in Envoy, but eliminating some stats may after critical functionality. Here are the stats that we strongly recommend not disabling: &lt;code>cluster_manager.warming_clusters&lt;/code>, &lt;code>cluster.&amp;lt;cluster_name&amp;gt;.membership_total&lt;/code>,&lt;code>cluster.&amp;lt;cluster_name&amp;gt;.membership_healthy&lt;/code>, &lt;code>cluster.&amp;lt;cluster_name&amp;gt;.membership_degraded&lt;/code>，reference &lt;a href="https://github.com/envoyproxy/envoy/issues/9856">https://github.com/envoyproxy/envoy/issues/9856&lt;/a>, &lt;a href="https://github.com/envoyproxy/envoy/issues/14610">https://github.com/envoyproxy/envoy/issues/14610&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>enableVirtualHostStats&lt;/code> &lt;em>boolean&lt;/em>&lt;/td>
&lt;td>EnableVirtualHostStats enables envoy stat metrics for virtual hosts.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="proxytelemetry">ProxyTelemetry&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoyproxyspec">EnvoyProxySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>accessLog&lt;/code> &lt;em>&lt;a href="#proxyaccesslog">ProxyAccessLog&lt;/a>&lt;/em>&lt;/td>
&lt;td>AccessLogs defines accesslog parameters for managed proxies. If unspecified, will send default format to stdout.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tracing&lt;/code> &lt;em>&lt;a href="#proxytracing">ProxyTracing&lt;/a>&lt;/em>&lt;/td>
&lt;td>Tracing defines tracing configuration for managed proxies. If unspecified, will not send tracing data.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>metrics&lt;/code> &lt;em>&lt;a href="#proxymetrics">ProxyMetrics&lt;/a>&lt;/em>&lt;/td>
&lt;td>Metrics defines metrics configuration for managed proxies.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="proxytracing">ProxyTracing&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxytelemetry">ProxyTelemetry&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>samplingRate&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>SamplingRate controls the rate at which traffic will be selected for tracing if no prior sampling decision has been made. Defaults to 100, valid values [0-100]. 100 indicates 100% sampling.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>customTags&lt;/code> &lt;em>object (keys:string, values:&lt;a href="#customtag">CustomTag&lt;/a>)&lt;/em>&lt;/td>
&lt;td>CustomTags defines the custom tags to add to each span. If provider is kubernetes, pod name and namespace are added by default.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>provider&lt;/code> &lt;em>&lt;a href="#tracingprovider">TracingProvider&lt;/a>&lt;/em>&lt;/td>
&lt;td>Provider defines the tracing provider. Only OpenTelemetry is supported currently.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ratelimit">RateLimit&lt;/h2>
&lt;p>RateLimit defines the configuration associated with the Rate Limit Service used for Global Rate Limiting.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygateway">EnvoyGateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="#envoygatewayspec">EnvoyGatewaySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>backend&lt;/code> &lt;em>&lt;a href="#ratelimitdatabasebackend">RateLimitDatabaseBackend&lt;/a>&lt;/em>&lt;/td>
&lt;td>Backend holds the configuration associated with the database backend used by the rate limit service to store state associated with global ratelimiting.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>timeout&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#duration-v1-meta">Duration&lt;/a>&lt;/em>&lt;/td>
&lt;td>Timeout specifies the timeout period for the proxy to access the ratelimit server If not set, timeout is 20ms.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>failClosed&lt;/code> &lt;em>boolean&lt;/em>&lt;/td>
&lt;td>FailClosed is a switch used to control the flow of traffic when the response from the ratelimit server cannot be obtained. If FailClosed is false, let the traffic pass, otherwise, don&amp;rsquo;t let the traffic pass and return 500. If not set, FailClosed is False.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ratelimitdatabasebackend">RateLimitDatabaseBackend&lt;/h2>
&lt;p>RateLimitDatabaseBackend defines the configuration associated with the database backend used by the rate limit service.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimit">RateLimit&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#ratelimitdatabasebackendtype">RateLimitDatabaseBackendType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type is the type of database backend to use. Supported types are: * Redis: Connects to a Redis database.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>redis&lt;/code> &lt;em>&lt;a href="#ratelimitredissettings">RateLimitRedisSettings&lt;/a>&lt;/em>&lt;/td>
&lt;td>Redis defines the settings needed to connect to a Redis database.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ratelimitdatabasebackendtype">RateLimitDatabaseBackendType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>RateLimitDatabaseBackendType specifies the types of database backend to be used by the rate limit service.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitdatabasebackend">RateLimitDatabaseBackend&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ratelimitfilter">RateLimitFilter&lt;/h2>
&lt;p>RateLimitFilter allows the user to limit the number of incoming requests to a predefined value based on attributes within the traffic flow.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>gateway.envoyproxy.io/v1alpha1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>&lt;code>RateLimitFilter&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>metadata&lt;/code> &lt;em>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#objectmeta-v1-meta">ObjectMeta&lt;/a>&lt;/em>&lt;/td>
&lt;td>Refer to Kubernetes API documentation for fields of &lt;code>metadata&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>spec&lt;/code> &lt;em>&lt;a href="#ratelimitfilterspec">RateLimitFilterSpec&lt;/a>&lt;/em>&lt;/td>
&lt;td>Spec defines the desired state of RateLimitFilter.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ratelimitfilterspec">RateLimitFilterSpec&lt;/h2>
&lt;p>RateLimitFilterSpec defines the desired state of RateLimitFilter.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitfilter">RateLimitFilter&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#ratelimittype">RateLimitType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type decides the scope for the RateLimits. Valid RateLimitType values are &amp;ldquo;Global&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>global&lt;/code> &lt;em>&lt;a href="#globalratelimit">GlobalRateLimit&lt;/a>&lt;/em>&lt;/td>
&lt;td>Global defines global rate limit configuration.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ratelimitredissettings">RateLimitRedisSettings&lt;/h2>
&lt;p>RateLimitRedisSettings defines the configuration for connecting to redis database.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitdatabasebackend">RateLimitDatabaseBackend&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>url&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>URL of the Redis Database.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tls&lt;/code> &lt;em>&lt;a href="#redistlssettings">RedisTLSSettings&lt;/a>&lt;/em>&lt;/td>
&lt;td>TLS defines TLS configuration for connecting to redis database.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ratelimitrule">RateLimitRule&lt;/h2>
&lt;p>RateLimitRule defines the semantics for matching attributes from the incoming requests, and setting limits for them.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#globalratelimit">GlobalRateLimit&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>clientSelectors&lt;/code> &lt;em>&lt;a href="#ratelimitselectcondition">RateLimitSelectCondition&lt;/a> array&lt;/em>&lt;/td>
&lt;td>ClientSelectors holds the list of select conditions to select specific clients using attributes from the traffic flow. All individual select conditions must hold True for this rule and its limit to be applied. If this field is empty, it is equivalent to True, and the limit is applied.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>limit&lt;/code> &lt;em>&lt;a href="#ratelimitvalue">RateLimitValue&lt;/a>&lt;/em>&lt;/td>
&lt;td>Limit holds the rate limit values. This limit is applied for traffic flows when the selectors compute to True, causing the request to be counted towards the limit. The limit is enforced and the request is ratelimited, i.e. a response with 429 HTTP status code is sent back to the client when the selected requests have reached the limit.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ratelimitselectcondition">RateLimitSelectCondition&lt;/h2>
&lt;p>RateLimitSelectCondition specifies the attributes within the traffic flow that can be used to select a subset of clients to be ratelimited. All the individual conditions must hold True for the overall condition to hold True.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitrule">RateLimitRule&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>headers&lt;/code> &lt;em>&lt;a href="#headermatch">HeaderMatch&lt;/a> array&lt;/em>&lt;/td>
&lt;td>Headers is a list of request headers to match. Multiple header values are ANDed together, meaning, a request MUST match all the specified headers.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sourceCIDR&lt;/code> &lt;em>&lt;a href="#sourcematch">SourceMatch&lt;/a>&lt;/em>&lt;/td>
&lt;td>SourceCIDR is the client IP Address range to match on.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ratelimittype">RateLimitType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>RateLimitType specifies the types of RateLimiting.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitfilterspec">RateLimitFilterSpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ratelimitunit">RateLimitUnit&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>RateLimitUnit specifies the intervals for setting rate limits. Valid RateLimitUnit values are &amp;ldquo;Second&amp;rdquo;, &amp;ldquo;Minute&amp;rdquo;, &amp;ldquo;Hour&amp;rdquo;, and &amp;ldquo;Day&amp;rdquo;.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitvalue">RateLimitValue&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ratelimitvalue">RateLimitValue&lt;/h2>
&lt;p>RateLimitValue defines the limits for rate limiting.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitrule">RateLimitRule&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>requests&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>unit&lt;/code> &lt;em>&lt;a href="#ratelimitunit">RateLimitUnit&lt;/a>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="redistlssettings">RedisTLSSettings&lt;/h2>
&lt;p>RedisTLSSettings defines the TLS configuration for connecting to redis database.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitredissettings">RateLimitRedisSettings&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>certificateRef&lt;/code> &lt;em>&lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.SecretObjectReference">SecretObjectReference&lt;/a>&lt;/em>&lt;/td>
&lt;td>CertificateRef defines the client certificate reference for TLS connections. Currently only a Kubernetes Secret of type TLS is supported.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="remotejwks">RemoteJWKS&lt;/h2>
&lt;p>RemoteJWKS defines how to fetch and cache JSON Web Key Sets (JWKS) from a remote HTTP/HTTPS endpoint.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#jwtauthenticationfilterprovider">JwtAuthenticationFilterProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>uri&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>URI is the HTTPS URI to fetch the JWKS. Envoy&amp;rsquo;s system trust bundle is used to validate the server certificate.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="requestheadercustomtag">RequestHeaderCustomTag&lt;/h2>
&lt;p>RequestHeaderCustomTag adds value from request header to each span.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#customtag">CustomTag&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>name&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Name defines the name of the request header which to extract the value from.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>defaultValue&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>DefaultValue defines the default value to use if the request header is not set.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="resourceprovidertype">ResourceProviderType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>ResourceProviderType defines the types of custom resource providers supported by Envoy Gateway.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#envoygatewayresourceprovider">EnvoyGatewayResourceProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="servicetype">ServiceType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>ServiceType string describes ingress methods for a service&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#kubernetesservicespec">KubernetesServiceSpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="sourcematch">SourceMatch&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ratelimitselectcondition">RateLimitSelectCondition&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#sourcematchtype">SourceMatchType&lt;/a>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>value&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Value is the IP CIDR that represents the range of Source IP Addresses of the client. These could also be the intermediate addresses through which the request has flown through and is part of the &lt;code>X-Forwarded-For&lt;/code> header. For example, &lt;code>192.168.0.1/32&lt;/code>, &lt;code>192.168.0.0/24&lt;/code>, &lt;code>001:db8::/64&lt;/code>.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="sourcematchtype">SourceMatchType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#sourcematch">SourceMatch&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="tcpkeepalive">TCPKeepalive&lt;/h2>
&lt;p>TCPKeepalive define the TCP Keepalive configuration.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#clienttrafficpolicyspec">ClientTrafficPolicySpec&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>probes&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>The total number of unacknowledged probes to send before deciding the connection is dead. Defaults to 9.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>idleTime&lt;/code> &lt;em>Duration&lt;/em>&lt;/td>
&lt;td>The duration a connection needs to be idle before keep-alive probes start being sent. The duration format is Defaults to &lt;code>7200s&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>interval&lt;/code> &lt;em>Duration&lt;/em>&lt;/td>
&lt;td>The duration between keep-alive probes. Defaults to &lt;code>75s&lt;/code>.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="tracingprovider">TracingProvider&lt;/h2>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#proxytracing">ProxyTracing&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code> &lt;em>&lt;a href="#tracingprovidertype">TracingProviderType&lt;/a>&lt;/em>&lt;/td>
&lt;td>Type defines the tracing provider type. EG currently only supports OpenTelemetry.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>host&lt;/code> &lt;em>string&lt;/em>&lt;/td>
&lt;td>Host define the provider service hostname.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>port&lt;/code> &lt;em>integer&lt;/em>&lt;/td>
&lt;td>Port defines the port the provider service is exposed on.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="tracingprovidertype">TracingProviderType&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#tracingprovider">TracingProvider&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="xdstranslatorhook">XDSTranslatorHook&lt;/h2>
&lt;p>&lt;em>Underlying type:&lt;/em> &lt;code>string&lt;/code>&lt;/p>
&lt;p>XDSTranslatorHook defines the types of hooks that an Envoy Gateway extension may support for the xds-translator&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#xdstranslatorhooks">XDSTranslatorHooks&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="xdstranslatorhooks">XDSTranslatorHooks&lt;/h2>
&lt;p>XDSTranslatorHooks contains all the pre and post hooks for the xds-translator runner.&lt;/p>
&lt;p>&lt;em>Appears in:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#extensionhooks">ExtensionHooks&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>pre&lt;/code> &lt;em>&lt;a href="#xdstranslatorhook">XDSTranslatorHook&lt;/a> array&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>post&lt;/code> &lt;em>&lt;a href="#xdstranslatorhook">XDSTranslatorHook&lt;/a> array&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: Envoy Gateway Extensions Design</title><link>http://gateway.xunzhuo.cafe/docs/latest/design/extending-envoy-gateway/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/latest/design/extending-envoy-gateway/</guid><description>
&lt;p>As outlined in the &lt;a href="https://github.com/envoyproxy/gateway/blob/main/GOALS.md#extensibility">official goals&lt;/a> for the Envoy Gateway project, one of the main goals is to &amp;ldquo;provide a common foundation for vendors to build value-added products
without having to re-engineer fundamental interactions&amp;rdquo;. Development of the Envoy Gateway project has been focused on developing the core features for the project and
Kubernetes Gateway API conformance. This system focuses on the “common foundation for vendors” component by introducing a way for vendors to extend Envoy Gateway.&lt;/p>
&lt;p>To meaningfully extend Envoy Gateway and provide additional features, Extensions need to be able to introduce their own custom resources and have a high level of control
over the configuration generated by Envoy Gateway. Simply applying some static xDS configuration patches or relying on the existing Gateway API resources are both insufficient on their own
as means to add larger features that require dynamic user-configuration.&lt;/p>
&lt;p>As an example, an extension developer may wish to provide their own out-of-the-box authentication filters that require configuration from the end-user. This is a scenario where the ability to introduce
custom resources and attach them to &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.HTTPRoute">HTTPRoute&lt;/a>s as an &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.LocalObjectReference">ExtensionRef&lt;/a> is necessary. Providing the same feature through a series of xDS patch resources would be too cumbersome for many end-users that want to avoid
that level of complexity when managing their clusters.&lt;/p>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;ul>
&lt;li>Provide a foundation for extending the Envoy Gateway control plane&lt;/li>
&lt;li>Allow Extension Developers to introduce their own custom resources for extending the Gateway-API via &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.LocalObjectReference">ExtensionRefs&lt;/a>, &lt;a href="https://gateway-api.sigs.k8s.io/references/policy-attachment/?h=policy">policyAttachments&lt;/a> (future) and &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.BackendObjectReference">backendRefs&lt;/a> (future).&lt;/li>
&lt;li>Extension developers should &lt;strong>NOT&lt;/strong> have to maintain a custom fork of Envoy Gateway&lt;/li>
&lt;li>Provide a system for extending Envoy Gateway which allows extension projects to ship updates independent of Envoy Gateway&amp;rsquo;s release schedule&lt;/li>
&lt;li>Modify the generated Envoy xDS config&lt;/li>
&lt;li>Setup a foundation for the initial iteration of Extending Envoy Gateway&lt;/li>
&lt;li>Allow an Extension to hook into the infra manager pipeline (future)&lt;/li>
&lt;/ul>
&lt;h2 id="non-goals">Non-Goals&lt;/h2>
&lt;ul>
&lt;li>The initial design does not capture every hook that Envoy Gateway will eventually support.&lt;/li>
&lt;li>Extend &lt;a href="https://gateway-api.sigs.k8s.io/references/policy-attachment/?h=policy">Gateway API Policy Attachments&lt;/a>. At some point, these will be addressed using this extension system, but the initial implementation omits these.&lt;/li>
&lt;li>Support multiple extensions at the same time. Due to the fact that extensions will be modifying xDS resources after they are generated, handling the order of extension execution for each individual hook point is a challenge. Additionally, there is no
real way to prevent one extension from overwriting or breaking modifications to xDS resources that were made by another extension that was executed first.&lt;/li>
&lt;/ul>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Envoy Gateway can be extended by vendors by means of an extension server developed by the vendor and deployed alongside Envoy Gateway.
An extension server can make use of one or more pre/post hooks inside Envoy Gateway before and after its major components (translator, etc.) to allow the extension to modify the data going into or coming out of these components.
An extension can be created external to Envoy Gateway as its own Kubernetes deployment or loaded as a sidecar. gRPC is used for the calls between Envoy Gateway and an extension. In the hook call, Envoy Gateway sends data as well
as context information to the extension and expects a reply with a modified version of the data that was sent to the extension. Since extensions fundamentally alter the logic and data that Envoy Gateway provides, Extension projects assume responsibility for any bugs and issues
they create as a direct result of their modification of Envoy Gateway.&lt;/p>
&lt;h2 id="diagram">Diagram&lt;/h2>
&lt;p>&lt;img src="../images/extension-example.png" alt="Architecture">&lt;/p>
&lt;h2 id="registering-extensions-in-envoy-gateway">Registering Extensions in Envoy Gateway&lt;/h2>
&lt;p>Information about the extension that Envoy Gateway needs to load is configured in the Envoy Gateway config.&lt;/p>
&lt;p>An example configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">extensionManager&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example.myextension.io&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">version&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">OAuth2Filter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hooks&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">xdsTranslator&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">post&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">Route&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">VirtualHost&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">HTTPListener&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">Translation&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">service&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">host&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">my-extension.example&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">443&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">tls&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">certificateRef&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">my-secret&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">namespace&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">default&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>An extension must supply connection information in the &lt;code>extension.service&lt;/code> field so that Envoy Gateway can communicate with the extension. The &lt;code>tls&lt;/code> configuration is optional.&lt;/p>
&lt;p>If the extension wants Envoy Gateway to watch resources for it then the extension must configure the optional &lt;code>extension.resources&lt;/code> field and supply a list of:&lt;/p>
&lt;ul>
&lt;li>&lt;code>group&lt;/code>: the API group of the resource&lt;/li>
&lt;li>&lt;code>version&lt;/code>: the API version of the resource&lt;/li>
&lt;li>&lt;code>kind&lt;/code>: the Kind of resource&lt;/li>
&lt;/ul>
&lt;p>The extension can configure the &lt;code>extensionManager.hooks&lt;/code> field to specify which hook points it would like to support. If a given hook is not listed here then it will not be executed even
if the extension is configured properly. This allows extension developers to only opt-in to the hook points they want to make use of.&lt;/p>
&lt;p>This configuration is required to be provided at bootstrap and modifying the registered extension during runtime is not currently supported.
Envoy Gateway will keep track of the registered extension and its API &lt;code>groups&lt;/code> and &lt;code>kinds&lt;/code> when processing Gateway API resources.&lt;/p>
&lt;h2 id="extending-gateway-api-and-the-data-plane">Extending Gateway API and the Data Plane&lt;/h2>
&lt;p>Envoy Gateway manages &lt;a href="https://www.envoyproxy.io/">Envoy&lt;/a> deployments, which act as the data plane that handles actual user traffic. Users configure the data plane using the K8s Gateway API resources which Envoy
Gateway converts into &lt;a href="https://www.envoyproxy.io/docs/envoy/v1.25.1/configuration/configuration">Envoy specific configuration (xDS)&lt;/a> to send over to Envoy.&lt;/p>
&lt;p>Gateway API offers &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.LocalObjectReference">ExtensionRef filters&lt;/a> and &lt;a href="https://gateway-api.sigs.k8s.io/references/policy-attachment/?h=policy">Policy Attachments&lt;/a> as extension points for implementers to use. Envoy Gateway extends the Gateway API using these extension points to provide support for &lt;a href="https://gateway.envoyproxy.io/v0.3.0/user/rate-limit.html">rate limiting&lt;/a>
and &lt;a href="https://gateway.envoyproxy.io/v0.3.0/user/authn.html">authentication&lt;/a> native to the project. The initial design of Envoy Gateway extensions will primarily focus on ExtensionRef filters so that extension developers can reference their own resources as HTTP Filters in the same way
that Envoy Gateway has native support for rate limiting and authentication filters.&lt;/p>
&lt;p>When Envoy Gateway encounters an &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.HTTPRoute">HTTPRoute&lt;/a> or &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1alpha2.GRPCRoute">GRPCRoute&lt;/a> that has an &lt;code>ExtensionRef&lt;/code> &lt;code>filter&lt;/code> with a &lt;code>group&lt;/code> and &lt;code>kind&lt;/code> that Envoy Gateway does not support, it will first
check the registered extension to determine if it supports the referenced object before considering it a configuration error.&lt;/p>
&lt;p>This allows users to be able to reference additional filters provided by their Envoy Gateway Extension, in their &lt;code>HTTPRoute&lt;/code>s / &lt;code>GRPCRoute&lt;/code>s:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example.myextension.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">OAuth2Filter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">oauth2-filter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">...&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">HTTPRoute&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">parentRefs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">eg&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hostnames&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">www.example.com&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">rules&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">clientSelectors&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">PathPrefix&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">value&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">filters&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ExtensionRef&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">extensionRef&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example.myextension.io&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">OAuth2Filter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">oauth2-filter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">backendRefs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">backend&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3000&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In order to enable the usage of new resources introduced by an extension for translation and xDS modification, Envoy Gateway provides hook points within the translation pipeline, where it calls out to the extension service registered in the &lt;a href="https://gateway.envoyproxy.io/v0.3.0/api/config_types.html#envoygateway">EnvoyGateway config&lt;/a>
if they specify an &lt;code>group&lt;/code> that matches the &lt;code>group&lt;/code> of an &lt;code>ExtensionRef&lt;/code> filter. The extension will then be able to modify the xDS that Envoy Gateway generated and send back the
modified configuration. If an extension is not registered or if the registered extension does not specify support for the &lt;code>group&lt;/code> of an &lt;code>ExtensionRef&lt;/code> filter then Envoy Gateway will treat it as an unknown resource
and provide an error to the user.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> Currently (as of &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io%2fv1beta1">v1beta1&lt;/a>) Gateway API does not provide a means to specify the namespace or version of an object referenced as an &lt;code>ExtensionRef&lt;/code>. The extension mechanism will assume that
the namespace of any &lt;code>ExtensionRef&lt;/code> is the same as the namespace of the &lt;code>HTTPRoute&lt;/code> or &lt;code>GRPCRoute&lt;/code> it is attached to rather than treating the &lt;code>name&lt;/code> field of an &lt;code>ExtensionRef&lt;/code> as a &lt;code>name.namespace&lt;/code> string.
If Gateway API adds support for these fields then the design of the Envoy Gateway extensions will be updated to support them.&lt;/p>
&lt;h2 id="watching-new-resources">Watching New Resources&lt;/h2>
&lt;p>Envoy Gateway will dynamically create new watches on resources introduced by the registered Extension. It does so by using the &lt;a href="https://github.com/kubernetes-sigs/controller-runtime">controller-runtime&lt;/a> to create new watches on &lt;a href="https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1/unstructured">Unstructured&lt;/a> resources that match the &lt;code>version&lt;/code>s, &lt;code>group&lt;/code>s, and &lt;code>kind&lt;/code>s that the
registered extension configured. When communicating with an extension, Envoy Gateway sends these Unstructured resources over to the extension. This eliminates the need for the extension to create its own watches which would have a strong chance of creating race conditions and reconciliation loops when resources change. When an extension receives the Unstructured resources from Envoy Gateway it can perform its own type validation on them. Currently we make the simplifying assumption that the registered extension&amp;rsquo;s &lt;code>Kinds&lt;/code> are filters referenced by &lt;code>extensionRef&lt;/code> in &lt;code>HTTPRouteFilter&lt;/code>s . Support for Policy attachments will be introduced at a later time.&lt;/p>
&lt;h2 id="xds-hooks-api">xDS Hooks API&lt;/h2>
&lt;p>Envoy Gateway supports the following hooks as the initial foundation of the Extension system. Additional hooks can be developed using this extension system at a later point as new use-cases and needs are discovered. The primary iteration of the extension hooks
focuses solely on the modification of xDS resources.&lt;/p>
&lt;h3 id="route-modification-hook">Route Modification Hook&lt;/h3>
&lt;p>The &lt;a href="https://www.envoyproxy.io/docs/envoy/v1.23.0/api-v3/config/route/v3/route_components.proto#config-route-v3-route">Route&lt;/a> level Hook provides a way for extensions to modify a route generated by Envoy Gateway before it is finalized.
Doing so allows extensions to configure/modify route fields configured by Envoy Gateway and also to configure the
Route&amp;rsquo;s TypedPerFilterConfig which may be desirable to do things such as pass settings and information to ext_authz filters.
The Post Route Modify hook also passes a list of Unstructured data for the externalRefs owned by the extension on the HTTPRoute that created this xDS route
This hook is always executed when an extension is loaded that has added &lt;code>Route&lt;/code> to the &lt;code>EnvoyProxy.extensionManager.hooks.xdsTranslator.post&lt;/code>, and only on Routes which were generated from an HTTPRoute that uses extension resources as externalRef filters.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// PostRouteModifyRequest sends a Route that was generated by Envoy Gateway along with context information to an extension so that the Route can be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">message&lt;/span> &lt;span style="color:#000">PostRouteModifyRequest&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">envoy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">config&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">route&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">v3&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Route&lt;/span> &lt;span style="color:#000">route&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">PostRouteExtensionContext&lt;/span> &lt;span style="color:#000">post_route_context&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// RouteExtensionContext provides resources introduced by an extension and watched by Envoy Gateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// additional context information can be added to this message as more use-cases are discovered
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">message&lt;/span> &lt;span style="color:#000">PostRouteExtensionContext&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Resources introduced by the extension that were used as extensionRefs in an HTTPRoute/GRPCRoute
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">repeated&lt;/span> &lt;span style="color:#000">ExtensionResource&lt;/span> &lt;span style="color:#000">extension_resources&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// hostnames are the fully qualified domain names attached to the HTTPRoute
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">repeated&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span> &lt;span style="color:#000">hostnames&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// ExtensionResource stores the data for a K8s API object referenced in an HTTPRouteFilter
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// extensionRef. It is constructed from an unstructured.Unstructured marshalled to JSON. An extension
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// can marshal the bytes from this resource back into an unstructured.Unstructured and then
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// perform type checking to obtain the resource.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">message&lt;/span> &lt;span style="color:#000">ExtensionResource&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">bytes&lt;/span> &lt;span style="color:#000">unstructured_bytes&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// PostRouteModifyResponse is the expected response from an extension and contains a modified version of the Route that was sent
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// If an extension returns a nil Route then it will not be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">message&lt;/span> &lt;span style="color:#000">PostRouteModifyResponse&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">envoy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">config&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">route&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">v3&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Route&lt;/span> &lt;span style="color:#000">route&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="virtualhost-modification-hook">VirtualHost Modification Hook&lt;/h3>
&lt;p>The &lt;a href="https://www.envoyproxy.io/docs/envoy/v1.23.0/api-v3/config/route/v3/route_components.proto#config-route-v3-virtualhost">VirtualHost&lt;/a> Hook provides a way for extensions to modify a VirtualHost generated by Envoy Gateway before it is finalized.
An extension can also make use of this hook to generate and insert entirely new Routes not generated by Envoy Gateway.
This hook is always executed when an extension is loaded that has added &lt;code>VirtualHost&lt;/code> to the &lt;code>EnvoyProxy.extensionManager.hooks.xdsTranslator.post&lt;/code>.
An extension may return nil to not make any changes to the VirtualHost.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// PostVirtualHostModifyRequest sends a VirtualHost that was generated by Envoy Gateway along with context information to an extension so that the VirtualHost can be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostVirtualHostModifyRequest&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">envoy.config.route.v3.VirtualHost&lt;/span> &lt;span style="color:#000">virtual_host&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">PostVirtualHostExtensionContext&lt;/span> &lt;span style="color:#000">post_virtual_host_context&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// Empty for now but we can add fields to the context as use-cases are discovered without
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// breaking any clients that use the API
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// additional context information can be added to this message as more use-cases are discovered
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostVirtualHostExtensionContext&lt;/span> &lt;span style="color:#000;font-weight:bold">{}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// PostVirtualHostModifyResponse is the expected response from an extension and contains a modified version of the VirtualHost that was sent
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// If an extension returns a nil Virtual Host then it will not be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostVirtualHostModifyResponse&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">envoy.config.route.v3.VirtualHost&lt;/span> &lt;span style="color:#000">virtual_host&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="http-listener-modification-hook">HTTP Listener Modification Hook&lt;/h3>
&lt;p>The HTTP &lt;a href="https://www.envoyproxy.io/docs/envoy/v1.23.0/api-v3/config/listener/v3/listener.proto#config-listener-v3-listener">Listener&lt;/a> modification hook is the broadest xDS modification Hook available and allows an extension to make changes to a Listener generated by Envoy Gateway before it is finalized.
This hook is always executed when an extension is loaded that has added &lt;code>HTTPListener&lt;/code> to the &lt;code>EnvoyProxy.extensionManager.hooks.xdsTranslator.post&lt;/code>. An extension may return nil
in order to not make any changes to the Listener.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// PostVirtualHostModifyRequest sends a Listener that was generated by Envoy Gateway along with context information to an extension so that the Listener can be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostHTTPListenerModifyRequest&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">envoy.config.listener.v3.Listener&lt;/span> &lt;span style="color:#000">listener&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">PostHTTPListenerExtensionContext&lt;/span> &lt;span style="color:#000">post_listener_context&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// Empty for now but we can add fields to the context as use-cases are discovered without
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// breaking any clients that use the API
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// additional context information can be added to this message as more use-cases are discovered
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostHTTPListenerExtensionContext&lt;/span> &lt;span style="color:#000;font-weight:bold">{}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// PostHTTPListenerModifyResponse is the expected response from an extension and contains a modified version of the Listener that was sent
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// If an extension returns a nil Listener then it will not be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostHTTPListenerModifyResponse&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">envoy.config.listener.v3.Listener&lt;/span> &lt;span style="color:#000">listener&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="post-xds-translation-modify-hook">Post xDS Translation Modify Hook&lt;/h3>
&lt;p>The Post Translate Modify hook allows an extension to modify the clusters and secrets in the xDS config.
This allows for inserting clusters that may change along with extension specific configuration to be dynamically created rather than
using custom bootstrap config which would be sufficient for clusters that are static and not prone to have their configurations changed.
An example of how this may be used is to inject a cluster that will be used by an ext_authz http filter created by the extension.
The list of clusters and secrets returned by the extension are used as the final list of all clusters and secrets
This hook is always executed when an extension is loaded that has added &lt;code>Translation&lt;/code> to the &lt;code>EnvoyProxy.extensionManager.hooks.xdsTranslator.post&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// PostTranslateModifyRequest currently sends only clusters and secrets to an extension.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// The extension is free to add/modify/remove the resources it received.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostTranslateModifyRequest&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">PostTranslateExtensionContext&lt;/span> &lt;span style="color:#000">post_translate_context&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">repeated&lt;/span> &lt;span style="color:#000">envoy.config.cluster.v3.Cluster&lt;/span> &lt;span style="color:#000">clusters&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">repeated&lt;/span> &lt;span style="color:#000">envoy.extensions.transport_sockets.tls.v3.Secret&lt;/span> &lt;span style="color:#000">secrets&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// PostTranslateModifyResponse is the expected response from an extension and contains
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// the full list of xDS clusters and secrets to be used for the xDS config.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostTranslateModifyResponse&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">repeated&lt;/span> &lt;span style="color:#000">envoy.config.cluster.v3.Cluster&lt;/span> &lt;span style="color:#000">clusters&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">repeated&lt;/span> &lt;span style="color:#000">envoy.extensions.transport_sockets.tls.v3.Secret&lt;/span> &lt;span style="color:#000">secrets&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="extension-service">Extension Service&lt;/h3>
&lt;p>Currently, an extension must implement all of the following hooks although it may return the input(s) it received
if no modification of the resource is desired. A future expansion of the extension hooks will allow an Extension to specify
with config which Hooks it would like to &amp;ldquo;subscribe&amp;rdquo; to and which Hooks it does not wish to support. These specific Hooks were chosen
in order to provide extensions with the ability to have both broad and specific control over xDS resources and to minimize the amount of data being sent.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">service&lt;/span> &lt;span style="color:#000">EnvoyGatewayExtension&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">rpc&lt;/span> &lt;span style="color:#000">PostRouteModify&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostRouteModifyRequest&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">returns&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostRouteModifyResponse&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{};&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">rpc&lt;/span> &lt;span style="color:#000">PostVirtualHostModify&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostVirtualHostModifyRequest&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">returns&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostVirtualHostModifyResponse&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{};&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">rpc&lt;/span> &lt;span style="color:#000">PostHTTPListenerModify&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostHTTPListenerModifyRequest&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">returns&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostHTTPListenerModifyResponse&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{};&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">rpc&lt;/span> &lt;span style="color:#000">PostTranslateModify&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostTranslateModifyRequest&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">returns&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostTranslateModifyResponse&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{};&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="design-decisions">Design Decisions&lt;/h2>
&lt;ul>
&lt;li>Envoy Gateway watches new custom resources introduced by a loaded extension and passes the resources back to the extension when they are used.
&lt;ul>
&lt;li>This decision was made to solve the problem about how resources introduced by an extension get watched. If an extension server watches its own resources then it would need some way to trigger an Envoy Gateway reconfigure when a resource that Envoy Gateway is not watching gets updated. Having Envoy Gateway watch all resources removes any concern about creating race confitions or reconcile loops that would result from Envoy Gateway and the extension server both having so much separate state that needs to be synchronized.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The Extension Server takes ownership of producing the correct xDS configuration in the hook responses&lt;/li>
&lt;li>The Extension Server will be responsible for ensuring the performance of the hook processing time&lt;/li>
&lt;li>The Post xDS level gRPC hooks all currently send a context field even though it contains nothing for several hooks. These fields exist so that they can be updadated in the future to pass
additional information to extensions as new use-cases and needs are discovered.&lt;/li>
&lt;li>The initial design supplies the scaffolding for both &amp;ldquo;pre xDS&amp;rdquo; and &amp;ldquo;post xDS&amp;rdquo; hooks. Only the post hooks are currently implemented which operate on xDS resources after they have been generated.
The pre hooks will be implemented at a later date along with one or more hooks in the infra manager. The infra manager level hook(s) will exist to power use-cases such as dynamically creating Deployments/Services for the extension the
whenever Envoy Gateway creates an instance of Envoy Proxy. An extension developer might want to take advantage of this functionality to inject a new authorization service as a sidecar on the Envoy Proxy deployment for reduced latency.&lt;/li>
&lt;li>Multiple extensions are not be supported at the same time. Preventing conflict between multiple extensions that are mangling xDS resources is too difficult to ensure compatibility with and is likely to only generate issues.&lt;/li>
&lt;/ul>
&lt;h2 id="known-challenges">Known Challenges&lt;/h2>
&lt;p>Extending Envoy Gateway by using an external extension server which makes use of hook points in Envoy Gateway does comes with a few trade-offs. One known trade-off is the impact of the time that it takes for the hook calls to be executed. Since an extension would make use of hook points in Envoy Gateway that use gRPC for communication, the time it takes to perform these requests could become a concern for some extension developers. One way to minimize the request time of the hook calls is to load the extension server as a sidecar to Envoy Gateway to minimize the impact of networking on the hook calls.&lt;/p></description></item><item><title>Docs: Envoy Gateway Extensions Design</title><link>http://gateway.xunzhuo.cafe/docs/v0.4.0/design/extending-envoy-gateway/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.4.0/design/extending-envoy-gateway/</guid><description>
&lt;p>As outlined in the &lt;a href="https://github.com/envoyproxy/gateway/blob/main/GOALS.md#extensibility">official goals&lt;/a> for the Envoy Gateway project, one of the main goals is to &amp;ldquo;provide a common foundation for vendors to build value-added products
without having to re-engineer fundamental interactions&amp;rdquo;. Development of the Envoy Gateway project has been focused on developing the core features for the project and
Kubernetes Gateway API conformance. This system focuses on the “common foundation for vendors” component by introducing a way for vendors to extend Envoy Gateway.&lt;/p>
&lt;p>To meaningfully extend Envoy Gateway and provide additional features, Extensions need to be able to introduce their own custom resources and have a high level of control
over the configuration generated by Envoy Gateway. Simply applying some static xDS configuration patches or relying on the existing Gateway API resources are both insufficient on their own
as means to add larger features that require dynamic user-configuration.&lt;/p>
&lt;p>As an example, an extension developer may wish to provide their own out-of-the-box authentication filters that require configuration from the end-user. This is a scenario where the ability to introduce
custom resources and attach them to &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.HTTPRoute">HTTPRoute&lt;/a>s as an &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.LocalObjectReference">ExtensionRef&lt;/a> is necessary. Providing the same feature through a series of xDS patch resources would be too cumbersome for many end-users that want to avoid
that level of complexity when managing their clusters.&lt;/p>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;ul>
&lt;li>Provide a foundation for extending the Envoy Gateway control plane&lt;/li>
&lt;li>Allow Extension Developers to introduce their own custom resources for extending the Gateway-API via &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.LocalObjectReference">ExtensionRefs&lt;/a>, &lt;a href="https://gateway-api.sigs.k8s.io/references/policy-attachment/?h=policy">policyAttachments&lt;/a> (future) and &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.BackendObjectReference">backendRefs&lt;/a> (future).&lt;/li>
&lt;li>Extension developers should &lt;strong>NOT&lt;/strong> have to maintain a custom fork of Envoy Gateway&lt;/li>
&lt;li>Provide a system for extending Envoy Gateway which allows extension projects to ship updates independent of Envoy Gateway&amp;rsquo;s release schedule&lt;/li>
&lt;li>Modify the generated Envoy xDS config&lt;/li>
&lt;li>Setup a foundation for the initial iteration of Extending Envoy Gateway&lt;/li>
&lt;li>Allow an Extension to hook into the infra manager pipeline (future)&lt;/li>
&lt;/ul>
&lt;h2 id="non-goals">Non-Goals&lt;/h2>
&lt;ul>
&lt;li>The initial design does not capture every hook that Envoy Gateway will eventually support.&lt;/li>
&lt;li>Extend &lt;a href="https://gateway-api.sigs.k8s.io/references/policy-attachment/?h=policy">Gateway API Policy Attachments&lt;/a>. At some point, these will be addressed using this extension system, but the initial implementation omits these.&lt;/li>
&lt;li>Support multiple extensions at the same time. Due to the fact that extensions will be modifying xDS resources after they are generated, handling the order of extension execution for each individual hook point is a challenge. Additionally, there is no
real way to prevent one extension from overwriting or breaking modifications to xDS resources that were made by another extension that was executed first.&lt;/li>
&lt;/ul>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Envoy Gateway can be extended by vendors by means of an extension server developed by the vendor and deployed alongside Envoy Gateway.
An extension server can make use of one or more pre/post hooks inside Envoy Gateway before and after its major components (translator, etc.) to allow the extension to modify the data going into or coming out of these components.
An extension can be created external to Envoy Gateway as its own Kubernetes deployment or loaded as a sidecar. gRPC is used for the calls between Envoy Gateway and an extension. In the hook call, Envoy Gateway sends data as well
as context information to the extension and expects a reply with a modified version of the data that was sent to the extension. Since extensions fundamentally alter the logic and data that Envoy Gateway provides, Extension projects assume responsibility for any bugs and issues
they create as a direct result of their modification of Envoy Gateway.&lt;/p>
&lt;h2 id="diagram">Diagram&lt;/h2>
&lt;p>&lt;img src="../images/extension-example.png" alt="Architecture">&lt;/p>
&lt;h2 id="registering-extensions-in-envoy-gateway">Registering Extensions in Envoy Gateway&lt;/h2>
&lt;p>Information about the extension that Envoy Gateway needs to load is configured in the Envoy Gateway config.&lt;/p>
&lt;p>An example configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">extension&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example.myextension.io&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">version&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">OAuth2Filter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hooks&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">post&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">Route&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">VirtualHost&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">HTTPListener&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">Translation&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">service&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">host&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">my-extension.example&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">443&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">tls&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">certificateRef&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">my-secret&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">namespace&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">default&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>An extension must supply connection information in the &lt;code>extension.service&lt;/code> field so that Envoy Gateway can communicate with the extension. The &lt;code>tls&lt;/code> configuration is optional.&lt;/p>
&lt;p>If the extension wants Envoy Gateway to watch resources for it then the extension must configure the optional &lt;code>extension.resources&lt;/code> field and supply a list of:&lt;/p>
&lt;ul>
&lt;li>&lt;code>group&lt;/code>: the API group of the resource&lt;/li>
&lt;li>&lt;code>version&lt;/code>: the API version of the resource&lt;/li>
&lt;li>&lt;code>kind&lt;/code>: the Kind of resource&lt;/li>
&lt;/ul>
&lt;p>The extension can configure the &lt;code>extension.hooks&lt;/code> field to specify which hook points it would like to support. If a given hook is not listed here then it will not be executed even
if the extension is configured properly. This allows extension developers to only opt-in to the hook points they want to make use of.&lt;/p>
&lt;p>This configuration is required to be provided at bootstrap and modifying the registered extension during runtime is not currently supported.
Envoy Gateway will keep track of the registered extension and its API &lt;code>groups&lt;/code> and &lt;code>kinds&lt;/code> when processing Gateway API resources.&lt;/p>
&lt;h2 id="extending-gateway-api-and-the-data-plane">Extending Gateway API and the Data Plane&lt;/h2>
&lt;p>Envoy Gateway manages &lt;a href="https://www.envoyproxy.io/">Envoy&lt;/a> deployments, which act as the data plane that handles actual user traffic. Users configure the data plane using the K8s Gateway API resources which Envoy
Gateway converts into &lt;a href="https://www.envoyproxy.io/docs/envoy/v1.25.1/configuration/configuration">Envoy specific configuration (xDS)&lt;/a> to send over to Envoy.&lt;/p>
&lt;p>Gateway API offers &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.LocalObjectReference">ExtensionRef filters&lt;/a> and &lt;a href="https://gateway-api.sigs.k8s.io/references/policy-attachment/?h=policy">Policy Attachments&lt;/a> as extension points for implementers to use. Envoy Gateway extends the Gateway API using these extension points to provide support for &lt;a href="https://gateway.envoyproxy.io/v0.3.0/user/rate-limit.html">rate limiting&lt;/a>
and &lt;a href="https://gateway.envoyproxy.io/v0.3.0/user/authn.html">authentication&lt;/a> native to the project. The initial design of Envoy Gateway extensions will primarily focus on ExtensionRef filters so that extension developers can reference their own resources as HTTP Filters in the same way
that Envoy Gateway has native support for rate limiting and authentication filters.&lt;/p>
&lt;p>When Envoy Gateway encounters an &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.HTTPRoute">HTTPRoute&lt;/a> or &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1alpha2.GRPCRoute">GRPCRoute&lt;/a> that has an &lt;code>ExtensionRef&lt;/code> &lt;code>filter&lt;/code> with a &lt;code>group&lt;/code> and &lt;code>kind&lt;/code> that Envoy Gateway does not support, it will first
check the registered extension to determine if it supports the referenced object before considering it a configuration error.&lt;/p>
&lt;p>This allows users to be able to reference additional filters provided by their Envoy Gateway Extension, in their &lt;code>HTTPRoute&lt;/code>s / &lt;code>GRPCRoute&lt;/code>s:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example.myextension.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">OAuth2Filter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">oauth2-filter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">...&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">HTTPRoute&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">parentRefs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">eg&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hostnames&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">www.example.com&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">rules&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">clientSelectors&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">PathPrefix&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">value&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">filters&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ExtensionRef&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">extensionRef&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example.myextension.io&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">OAuth2Filter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">oauth2-filter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">backendRefs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">backend&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3000&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In order to enable the usage of new resources introduced by an extension for translation and xDS modification, Envoy Gateway provides hook points within the translation pipeline, where it calls out to the extension service registered in the &lt;a href="https://gateway.envoyproxy.io/v0.3.0/api/config_types.html#envoygateway">EnvoyGateway config&lt;/a>
if they specify an &lt;code>group&lt;/code> that matches the &lt;code>group&lt;/code> of an &lt;code>ExtensionRef&lt;/code> filter. The extension will then be able to modify the xDS that Envoy Gateway generated and send back the
modified configuration. If an extension is not registered or if the registered extension does not specify support for the &lt;code>group&lt;/code> of an &lt;code>ExtensionRef&lt;/code> filter then Envoy Gateway will treat it as an unknown resource
and provide an error to the user.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> Currently (as of &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io%2fv1beta1">v1beta1&lt;/a>) Gateway API does not provide a means to specify the namespace or version of an object referenced as an &lt;code>ExtensionRef&lt;/code>. The extension mechanism will assume that
the namespace of any &lt;code>ExtensionRef&lt;/code> is the same as the namespace of the &lt;code>HTTPRoute&lt;/code> or &lt;code>GRPCRoute&lt;/code> it is attached to rather than treating the &lt;code>name&lt;/code> field of an &lt;code>ExtensionRef&lt;/code> as a &lt;code>name.namespace&lt;/code> string.
If Gateway API adds support for these fields then the design of the Envoy Gateway extensions will be updated to support them.&lt;/p>
&lt;h2 id="watching-new-resources">Watching New Resources&lt;/h2>
&lt;p>Envoy Gateway will dynamically create new watches on resources introduced by the registered Extension. It does so by using the &lt;a href="https://github.com/kubernetes-sigs/controller-runtime">controller-runtime&lt;/a> to create new watches on &lt;a href="https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1/unstructured">Unstructured&lt;/a> resources that match the &lt;code>version&lt;/code>s, &lt;code>group&lt;/code>s, and &lt;code>kind&lt;/code>s that the
registered extension configured. When communicating with an extension, Envoy Gateway sends these Unstructured resources over to the extension. This eliminates the need for the extension to create its own watches which would have a strong chance of creating race conditions and reconciliation loops when resources change. When an extension receives the Unstructured resources from Envoy Gateway it can perform its own type validation on them. Currently we make the simplifying assumption that the registered extension&amp;rsquo;s &lt;code>Kinds&lt;/code> are filters referenced by &lt;code>extensionRef&lt;/code> in &lt;code>HTTPRouteFilter&lt;/code>s . Support for Policy attachments will be introduced at a later time.&lt;/p>
&lt;h2 id="xds-hooks-api">xDS Hooks API&lt;/h2>
&lt;p>Envoy Gateway supports the following hooks as the initial foundation of the Extension system. Additional hooks can be developed using this extension system at a later point as new use-cases and needs are discovered. The primary iteration of the extension hooks
focuses solely on the modification of xDS resources.&lt;/p>
&lt;h3 id="route-modification-hook">Route Modification Hook&lt;/h3>
&lt;p>The &lt;a href="https://www.envoyproxy.io/docs/envoy/v1.23.0/api-v3/config/route/v3/route_components.proto#config-route-v3-route">Route&lt;/a> level Hook provides a way for extensions to modify a route generated by Envoy Gateway before it is finalized.
Doing so allows extensions to configure/modify route fields configured by Envoy Gateway and also to configure the
Route&amp;rsquo;s TypedPerFilterConfig which may be desirable to do things such as pass settings and information to ext_authz filters.
The Post Route Modify hook also passes a list of Unstructured data for the externalRefs owned by the extension on the HTTPRoute that created this xDS route
This hook is always executed when an extension is loaded that has added &lt;code>Route&lt;/code> to the &lt;code>EnvoyProxy.extensions.hooks.post&lt;/code>, and only on Routes which were generated from an HTTPRoute that uses extension resources as externalRef filters.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// PostRouteModifyRequest sends a Route that was generated by Envoy Gateway along with context information to an extension so that the Route can be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">message&lt;/span> &lt;span style="color:#000">PostRouteModifyRequest&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">envoy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">config&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">route&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">v3&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Route&lt;/span> &lt;span style="color:#000">route&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">PostRouteExtensionContext&lt;/span> &lt;span style="color:#000">post_route_context&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// RouteExtensionContext provides resources introduced by an extension and watched by Envoy Gateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// additional context information can be added to this message as more use-cases are discovered
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">message&lt;/span> &lt;span style="color:#000">PostRouteExtensionContext&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Resources introduced by the extension that were used as extensionRefs in an HTTPRoute/GRPCRoute
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">repeated&lt;/span> &lt;span style="color:#000">ExtensionResource&lt;/span> &lt;span style="color:#000">extension_resources&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// hostnames are the fully qualified domain names attached to the HTTPRoute
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">repeated&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span> &lt;span style="color:#000">hostnames&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// ExtensionResource stores the data for a K8s API object referenced in an HTTPRouteFilter
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// extensionRef. It is constructed from an unstructured.Unstructured marshalled to JSON. An extension
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// can marshal the bytes from this resource back into an unstructured.Unstructured and then
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// perform type checking to obtain the resource.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">message&lt;/span> &lt;span style="color:#000">ExtensionResource&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">bytes&lt;/span> &lt;span style="color:#000">unstructured_bytes&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// PostRouteModifyResponse is the expected response from an extension and contains a modified version of the Route that was sent
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// If an extension returns a nil Route then it will not be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">message&lt;/span> &lt;span style="color:#000">PostRouteModifyResponse&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">envoy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">config&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">route&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">v3&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Route&lt;/span> &lt;span style="color:#000">route&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="virtualhost-modification-hook">VirtualHost Modification Hook&lt;/h3>
&lt;p>The &lt;a href="https://www.envoyproxy.io/docs/envoy/v1.23.0/api-v3/config/route/v3/route_components.proto#config-route-v3-virtualhost">VirtualHost&lt;/a> Hook provides a way for extensions to modify a VirtualHost generated by Envoy Gateway before it is finalized.
An extension can also make use of this hook to generate and insert entirely new Routes not generated by Envoy Gateway.
This hook is always executed when an extension is loaded that has added &lt;code>VirtualHost&lt;/code> to the &lt;code>EnvoyProxy.extensions.hooks.post&lt;/code>.
An extension may return nil to not make any changes to the VirtualHost.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// PostVirtualHostModifyRequest sends a VirtualHost that was generated by Envoy Gateway along with context information to an extension so that the VirtualHost can be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostVirtualHostModifyRequest&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">envoy.config.route.v3.VirtualHost&lt;/span> &lt;span style="color:#000">virtual_host&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">PostVirtualHostExtensionContext&lt;/span> &lt;span style="color:#000">post_virtual_host_context&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// Empty for now but we can add fields to the context as use-cases are discovered without
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// breaking any clients that use the API
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// additional context information can be added to this message as more use-cases are discovered
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostVirtualHostExtensionContext&lt;/span> &lt;span style="color:#000;font-weight:bold">{}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// PostVirtualHostModifyResponse is the expected response from an extension and contains a modified version of the VirtualHost that was sent
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// If an extension returns a nil Virtual Host then it will not be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostVirtualHostModifyResponse&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">envoy.config.route.v3.VirtualHost&lt;/span> &lt;span style="color:#000">virtual_host&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="http-listener-modification-hook">HTTP Listener Modification Hook&lt;/h3>
&lt;p>The HTTP &lt;a href="https://www.envoyproxy.io/docs/envoy/v1.23.0/api-v3/config/listener/v3/listener.proto#config-listener-v3-listener">Listener&lt;/a> modification hook is the broadest xDS modification Hook available and allows an extension to make changes to a Listener generated by Envoy Gateway before it is finalized.
This hook is always executed when an extension is loaded that has added &lt;code>HTTPListener&lt;/code> to the &lt;code>EnvoyProxy.extensions.hooks.post&lt;/code>. An extension may return nil
in order to not make any changes to the Listener.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// PostVirtualHostModifyRequest sends a Listener that was generated by Envoy Gateway along with context information to an extension so that the Listener can be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostHTTPListenerModifyRequest&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">envoy.config.listener.v3.Listener&lt;/span> &lt;span style="color:#000">listener&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">PostHTTPListenerExtensionContext&lt;/span> &lt;span style="color:#000">post_listener_context&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// Empty for now but we can add fields to the context as use-cases are discovered without
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// breaking any clients that use the API
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// additional context information can be added to this message as more use-cases are discovered
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostHTTPListenerExtensionContext&lt;/span> &lt;span style="color:#000;font-weight:bold">{}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// PostHTTPListenerModifyResponse is the expected response from an extension and contains a modified version of the Listener that was sent
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// If an extension returns a nil Listener then it will not be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostHTTPListenerModifyResponse&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">envoy.config.listener.v3.Listener&lt;/span> &lt;span style="color:#000">listener&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="post-xds-translation-modify-hook">Post xDS Translation Modify Hook&lt;/h3>
&lt;p>The Post Translate Modify hook allows an extension to modify the clusters and secrets in the xDS config.
This allows for inserting clusters that may change along with extension specific configuration to be dynamically created rather than
using custom bootstrap config which would be sufficient for clusters that are static and not prone to have their configurations changed.
An example of how this may be used is to inject a cluster that will be used by an ext_authz http filter created by the extension.
The list of clusters and secrets returned by the extension are used as the final list of all clusters and secrets
This hook is always executed when an extension is loaded that has added &lt;code>Translation&lt;/code> to the &lt;code>EnvoyProxy.extensions.hooks.post&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// PostTranslateModifyRequest currently sends only clusters and secrets to an extension.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// The extension is free to add/modify/remove the resources it received.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostTranslateModifyRequest&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">PostTranslateExtensionContext&lt;/span> &lt;span style="color:#000">post_translate_context&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">repeated&lt;/span> &lt;span style="color:#000">envoy.config.cluster.v3.Cluster&lt;/span> &lt;span style="color:#000">clusters&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">repeated&lt;/span> &lt;span style="color:#000">envoy.extensions.transport_sockets.tls.v3.Secret&lt;/span> &lt;span style="color:#000">secrets&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// PostTranslateModifyResponse is the expected response from an extension and contains
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// the full list of xDS clusters and secrets to be used for the xDS config.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostTranslateModifyResponse&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">repeated&lt;/span> &lt;span style="color:#000">envoy.config.cluster.v3.Cluster&lt;/span> &lt;span style="color:#000">clusters&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">repeated&lt;/span> &lt;span style="color:#000">envoy.extensions.transport_sockets.tls.v3.Secret&lt;/span> &lt;span style="color:#000">secrets&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="extension-service">Extension Service&lt;/h3>
&lt;p>Currently, an extension must implement all of the following hooks although it may return the input(s) it received
if no modification of the resource is desired. A future expansion of the extension hooks will allow an Extension to specify
with config which Hooks it would like to &amp;ldquo;subscribe&amp;rdquo; to and which Hooks it does not wish to support. These specific Hooks were chosen
in order to provide extensions with the ability to have both broad and specific control over xDS resources and to minimize the amount of data being sent.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">service&lt;/span> &lt;span style="color:#000">EnvoyGatewayExtension&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">rpc&lt;/span> &lt;span style="color:#000">PostRouteModify&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostRouteModifyRequest&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">returns&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostRouteModifyResponse&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{};&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">rpc&lt;/span> &lt;span style="color:#000">PostVirtualHostModify&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostVirtualHostModifyRequest&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">returns&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostVirtualHostModifyResponse&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{};&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">rpc&lt;/span> &lt;span style="color:#000">PostHTTPListenerModify&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostHTTPListenerModifyRequest&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">returns&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostHTTPListenerModifyResponse&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{};&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">rpc&lt;/span> &lt;span style="color:#000">PostTranslateModify&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostTranslateModifyRequest&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">returns&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostTranslateModifyResponse&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{};&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="design-decisions">Design Decisions&lt;/h2>
&lt;ul>
&lt;li>Envoy Gateway watches new custom resources introduced by a loaded extension and passes the resources back to the extension when they are used.
&lt;ul>
&lt;li>This decision was made to solve the problem about how resources introduced by an extension get watched. If an extension server watches its own resources then it would need some way to trigger an Envoy Gateway reconfigure when a resource that Envoy Gateway is not watching gets updated. Having Envoy Gateway watch all resources removes any concern about creating race confitions or reconcile loops that would result from Envoy Gateway and the extension server both having so much separate state that needs to be synchronized.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The Extension Server takes ownership of producing the correct xDS configuration in the hook responses&lt;/li>
&lt;li>The Extension Server will be responsible for ensuring the performance of the hook processing time&lt;/li>
&lt;li>The Post xDS level gRPC hooks all currently send a context field even though it contains nothing for several hooks. These fields exist so that they can be updadated in the future to pass
additional information to extensions as new use-cases and needs are discovered.&lt;/li>
&lt;li>The initial design supplies the scaffolding for both &amp;ldquo;pre xDS&amp;rdquo; and &amp;ldquo;post xDS&amp;rdquo; hooks. Only the post hooks are currently implemented which operate on xDS resources after they have been generated.
The pre hooks will be implemented at a later date along with one or more hooks in the infra manager. The infra manager level hook(s) will exist to power use-cases such as dynamically creating Deployments/Services for the extension the
whenever Envoy Gateway creates an instance of Envoy Proxy. An extension developer might want to take advantage of this functionality to inject a new authorization service as a sidecar on the Envoy Proxy deployment for reduced latency.&lt;/li>
&lt;li>Multiple extensions are not be supported at the same time. Preventing conflict between multiple extensions that are mangling xDS resources is too difficult to ensure compatibility with and is likely to only generate issues.&lt;/li>
&lt;/ul>
&lt;h2 id="known-challenges">Known Challenges&lt;/h2>
&lt;p>Extending Envoy Gateway by using an external extension server which makes use of hook points in Envoy Gateway does comes with a few trade-offs. One known trade-off is the impact of the time that it takes for the hook calls to be executed. Since an extension would make use of hook points in Envoy Gateway that use gRPC for communication, the time it takes to perform these requests could become a concern for some extension developers. One way to minimize the request time of the hook calls is to load the extension server as a sidecar to Envoy Gateway to minimize the impact of networking on the hook calls.&lt;/p></description></item><item><title>Docs: Envoy Gateway Extensions Design</title><link>http://gateway.xunzhuo.cafe/docs/v0.5.0/design/extending-envoy-gateway/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.5.0/design/extending-envoy-gateway/</guid><description>
&lt;p>As outlined in the &lt;a href="https://github.com/envoyproxy/gateway/blob/main/GOALS.md#extensibility">official goals&lt;/a> for the Envoy Gateway project, one of the main goals is to &amp;ldquo;provide a common foundation for vendors to build value-added products
without having to re-engineer fundamental interactions&amp;rdquo;. Development of the Envoy Gateway project has been focused on developing the core features for the project and
Kubernetes Gateway API conformance. This system focuses on the “common foundation for vendors” component by introducing a way for vendors to extend Envoy Gateway.&lt;/p>
&lt;p>To meaningfully extend Envoy Gateway and provide additional features, Extensions need to be able to introduce their own custom resources and have a high level of control
over the configuration generated by Envoy Gateway. Simply applying some static xDS configuration patches or relying on the existing Gateway API resources are both insufficient on their own
as means to add larger features that require dynamic user-configuration.&lt;/p>
&lt;p>As an example, an extension developer may wish to provide their own out-of-the-box authentication filters that require configuration from the end-user. This is a scenario where the ability to introduce
custom resources and attach them to &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.HTTPRoute">HTTPRoute&lt;/a>s as an &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.LocalObjectReference">ExtensionRef&lt;/a> is necessary. Providing the same feature through a series of xDS patch resources would be too cumbersome for many end-users that want to avoid
that level of complexity when managing their clusters.&lt;/p>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;ul>
&lt;li>Provide a foundation for extending the Envoy Gateway control plane&lt;/li>
&lt;li>Allow Extension Developers to introduce their own custom resources for extending the Gateway-API via &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.LocalObjectReference">ExtensionRefs&lt;/a>, &lt;a href="https://gateway-api.sigs.k8s.io/references/policy-attachment/?h=policy">policyAttachments&lt;/a> (future) and &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.BackendObjectReference">backendRefs&lt;/a> (future).&lt;/li>
&lt;li>Extension developers should &lt;strong>NOT&lt;/strong> have to maintain a custom fork of Envoy Gateway&lt;/li>
&lt;li>Provide a system for extending Envoy Gateway which allows extension projects to ship updates independent of Envoy Gateway&amp;rsquo;s release schedule&lt;/li>
&lt;li>Modify the generated Envoy xDS config&lt;/li>
&lt;li>Setup a foundation for the initial iteration of Extending Envoy Gateway&lt;/li>
&lt;li>Allow an Extension to hook into the infra manager pipeline (future)&lt;/li>
&lt;/ul>
&lt;h2 id="non-goals">Non-Goals&lt;/h2>
&lt;ul>
&lt;li>The initial design does not capture every hook that Envoy Gateway will eventually support.&lt;/li>
&lt;li>Extend &lt;a href="https://gateway-api.sigs.k8s.io/references/policy-attachment/?h=policy">Gateway API Policy Attachments&lt;/a>. At some point, these will be addressed using this extension system, but the initial implementation omits these.&lt;/li>
&lt;li>Support multiple extensions at the same time. Due to the fact that extensions will be modifying xDS resources after they are generated, handling the order of extension execution for each individual hook point is a challenge. Additionally, there is no
real way to prevent one extension from overwriting or breaking modifications to xDS resources that were made by another extension that was executed first.&lt;/li>
&lt;/ul>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Envoy Gateway can be extended by vendors by means of an extension server developed by the vendor and deployed alongside Envoy Gateway.
An extension server can make use of one or more pre/post hooks inside Envoy Gateway before and after its major components (translator, etc.) to allow the extension to modify the data going into or coming out of these components.
An extension can be created external to Envoy Gateway as its own Kubernetes deployment or loaded as a sidecar. gRPC is used for the calls between Envoy Gateway and an extension. In the hook call, Envoy Gateway sends data as well
as context information to the extension and expects a reply with a modified version of the data that was sent to the extension. Since extensions fundamentally alter the logic and data that Envoy Gateway provides, Extension projects assume responsibility for any bugs and issues
they create as a direct result of their modification of Envoy Gateway.&lt;/p>
&lt;h2 id="diagram">Diagram&lt;/h2>
&lt;p>&lt;img src="../images/extension-example.png" alt="Architecture">&lt;/p>
&lt;h2 id="registering-extensions-in-envoy-gateway">Registering Extensions in Envoy Gateway&lt;/h2>
&lt;p>Information about the extension that Envoy Gateway needs to load is configured in the Envoy Gateway config.&lt;/p>
&lt;p>An example configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">config.gateway.envoyproxy.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">EnvoyGateway&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">extensionManager&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example.myextension.io&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">version&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">OAuth2Filter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hooks&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">xdsTranslator&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">post&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">Route&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">VirtualHost&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">HTTPListener&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">Translation&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">service&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">host&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">my-extension.example&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">443&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">tls&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">certificateRef&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">my-secret&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">namespace&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">default&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>An extension must supply connection information in the &lt;code>extension.service&lt;/code> field so that Envoy Gateway can communicate with the extension. The &lt;code>tls&lt;/code> configuration is optional.&lt;/p>
&lt;p>If the extension wants Envoy Gateway to watch resources for it then the extension must configure the optional &lt;code>extension.resources&lt;/code> field and supply a list of:&lt;/p>
&lt;ul>
&lt;li>&lt;code>group&lt;/code>: the API group of the resource&lt;/li>
&lt;li>&lt;code>version&lt;/code>: the API version of the resource&lt;/li>
&lt;li>&lt;code>kind&lt;/code>: the Kind of resource&lt;/li>
&lt;/ul>
&lt;p>The extension can configure the &lt;code>extensionManager.hooks&lt;/code> field to specify which hook points it would like to support. If a given hook is not listed here then it will not be executed even
if the extension is configured properly. This allows extension developers to only opt-in to the hook points they want to make use of.&lt;/p>
&lt;p>This configuration is required to be provided at bootstrap and modifying the registered extension during runtime is not currently supported.
Envoy Gateway will keep track of the registered extension and its API &lt;code>groups&lt;/code> and &lt;code>kinds&lt;/code> when processing Gateway API resources.&lt;/p>
&lt;h2 id="extending-gateway-api-and-the-data-plane">Extending Gateway API and the Data Plane&lt;/h2>
&lt;p>Envoy Gateway manages &lt;a href="https://www.envoyproxy.io/">Envoy&lt;/a> deployments, which act as the data plane that handles actual user traffic. Users configure the data plane using the K8s Gateway API resources which Envoy
Gateway converts into &lt;a href="https://www.envoyproxy.io/docs/envoy/v1.25.1/configuration/configuration">Envoy specific configuration (xDS)&lt;/a> to send over to Envoy.&lt;/p>
&lt;p>Gateway API offers &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.LocalObjectReference">ExtensionRef filters&lt;/a> and &lt;a href="https://gateway-api.sigs.k8s.io/references/policy-attachment/?h=policy">Policy Attachments&lt;/a> as extension points for implementers to use. Envoy Gateway extends the Gateway API using these extension points to provide support for &lt;a href="https://gateway.envoyproxy.io/v0.3.0/user/rate-limit.html">rate limiting&lt;/a>
and &lt;a href="https://gateway.envoyproxy.io/v0.3.0/user/authn.html">authentication&lt;/a> native to the project. The initial design of Envoy Gateway extensions will primarily focus on ExtensionRef filters so that extension developers can reference their own resources as HTTP Filters in the same way
that Envoy Gateway has native support for rate limiting and authentication filters.&lt;/p>
&lt;p>When Envoy Gateway encounters an &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1beta1.HTTPRoute">HTTPRoute&lt;/a> or &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1alpha2.GRPCRoute">GRPCRoute&lt;/a> that has an &lt;code>ExtensionRef&lt;/code> &lt;code>filter&lt;/code> with a &lt;code>group&lt;/code> and &lt;code>kind&lt;/code> that Envoy Gateway does not support, it will first
check the registered extension to determine if it supports the referenced object before considering it a configuration error.&lt;/p>
&lt;p>This allows users to be able to reference additional filters provided by their Envoy Gateway Extension, in their &lt;code>HTTPRoute&lt;/code>s / &lt;code>GRPCRoute&lt;/code>s:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example.myextension.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">OAuth2Filter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">oauth2-filter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">...&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gateway.networking.k8s.io/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">HTTPRoute&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">parentRefs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">eg&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hostnames&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">www.example.com&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">rules&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">clientSelectors&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">PathPrefix&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">value&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">filters&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ExtensionRef&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">extensionRef&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example.myextension.io&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">OAuth2Filter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">oauth2-filter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">backendRefs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">backend&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3000&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In order to enable the usage of new resources introduced by an extension for translation and xDS modification, Envoy Gateway provides hook points within the translation pipeline, where it calls out to the extension service registered in the &lt;a href="https://gateway.envoyproxy.io/v0.3.0/api/config_types.html#envoygateway">EnvoyGateway config&lt;/a>
if they specify an &lt;code>group&lt;/code> that matches the &lt;code>group&lt;/code> of an &lt;code>ExtensionRef&lt;/code> filter. The extension will then be able to modify the xDS that Envoy Gateway generated and send back the
modified configuration. If an extension is not registered or if the registered extension does not specify support for the &lt;code>group&lt;/code> of an &lt;code>ExtensionRef&lt;/code> filter then Envoy Gateway will treat it as an unknown resource
and provide an error to the user.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> Currently (as of &lt;a href="https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io%2fv1beta1">v1beta1&lt;/a>) Gateway API does not provide a means to specify the namespace or version of an object referenced as an &lt;code>ExtensionRef&lt;/code>. The extension mechanism will assume that
the namespace of any &lt;code>ExtensionRef&lt;/code> is the same as the namespace of the &lt;code>HTTPRoute&lt;/code> or &lt;code>GRPCRoute&lt;/code> it is attached to rather than treating the &lt;code>name&lt;/code> field of an &lt;code>ExtensionRef&lt;/code> as a &lt;code>name.namespace&lt;/code> string.
If Gateway API adds support for these fields then the design of the Envoy Gateway extensions will be updated to support them.&lt;/p>
&lt;h2 id="watching-new-resources">Watching New Resources&lt;/h2>
&lt;p>Envoy Gateway will dynamically create new watches on resources introduced by the registered Extension. It does so by using the &lt;a href="https://github.com/kubernetes-sigs/controller-runtime">controller-runtime&lt;/a> to create new watches on &lt;a href="https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1/unstructured">Unstructured&lt;/a> resources that match the &lt;code>version&lt;/code>s, &lt;code>group&lt;/code>s, and &lt;code>kind&lt;/code>s that the
registered extension configured. When communicating with an extension, Envoy Gateway sends these Unstructured resources over to the extension. This eliminates the need for the extension to create its own watches which would have a strong chance of creating race conditions and reconciliation loops when resources change. When an extension receives the Unstructured resources from Envoy Gateway it can perform its own type validation on them. Currently we make the simplifying assumption that the registered extension&amp;rsquo;s &lt;code>Kinds&lt;/code> are filters referenced by &lt;code>extensionRef&lt;/code> in &lt;code>HTTPRouteFilter&lt;/code>s . Support for Policy attachments will be introduced at a later time.&lt;/p>
&lt;h2 id="xds-hooks-api">xDS Hooks API&lt;/h2>
&lt;p>Envoy Gateway supports the following hooks as the initial foundation of the Extension system. Additional hooks can be developed using this extension system at a later point as new use-cases and needs are discovered. The primary iteration of the extension hooks
focuses solely on the modification of xDS resources.&lt;/p>
&lt;h3 id="route-modification-hook">Route Modification Hook&lt;/h3>
&lt;p>The &lt;a href="https://www.envoyproxy.io/docs/envoy/v1.23.0/api-v3/config/route/v3/route_components.proto#config-route-v3-route">Route&lt;/a> level Hook provides a way for extensions to modify a route generated by Envoy Gateway before it is finalized.
Doing so allows extensions to configure/modify route fields configured by Envoy Gateway and also to configure the
Route&amp;rsquo;s TypedPerFilterConfig which may be desirable to do things such as pass settings and information to ext_authz filters.
The Post Route Modify hook also passes a list of Unstructured data for the externalRefs owned by the extension on the HTTPRoute that created this xDS route
This hook is always executed when an extension is loaded that has added &lt;code>Route&lt;/code> to the &lt;code>EnvoyProxy.extensionManager.hooks.xdsTranslator.post&lt;/code>, and only on Routes which were generated from an HTTPRoute that uses extension resources as externalRef filters.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// PostRouteModifyRequest sends a Route that was generated by Envoy Gateway along with context information to an extension so that the Route can be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">message&lt;/span> &lt;span style="color:#000">PostRouteModifyRequest&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">envoy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">config&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">route&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">v3&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Route&lt;/span> &lt;span style="color:#000">route&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">PostRouteExtensionContext&lt;/span> &lt;span style="color:#000">post_route_context&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// RouteExtensionContext provides resources introduced by an extension and watched by Envoy Gateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// additional context information can be added to this message as more use-cases are discovered
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">message&lt;/span> &lt;span style="color:#000">PostRouteExtensionContext&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Resources introduced by the extension that were used as extensionRefs in an HTTPRoute/GRPCRoute
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">repeated&lt;/span> &lt;span style="color:#000">ExtensionResource&lt;/span> &lt;span style="color:#000">extension_resources&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// hostnames are the fully qualified domain names attached to the HTTPRoute
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">repeated&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span> &lt;span style="color:#000">hostnames&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// ExtensionResource stores the data for a K8s API object referenced in an HTTPRouteFilter
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// extensionRef. It is constructed from an unstructured.Unstructured marshalled to JSON. An extension
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// can marshal the bytes from this resource back into an unstructured.Unstructured and then
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// perform type checking to obtain the resource.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">message&lt;/span> &lt;span style="color:#000">ExtensionResource&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">bytes&lt;/span> &lt;span style="color:#000">unstructured_bytes&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// PostRouteModifyResponse is the expected response from an extension and contains a modified version of the Route that was sent
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// If an extension returns a nil Route then it will not be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">message&lt;/span> &lt;span style="color:#000">PostRouteModifyResponse&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">envoy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">config&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">route&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">v3&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Route&lt;/span> &lt;span style="color:#000">route&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="virtualhost-modification-hook">VirtualHost Modification Hook&lt;/h3>
&lt;p>The &lt;a href="https://www.envoyproxy.io/docs/envoy/v1.23.0/api-v3/config/route/v3/route_components.proto#config-route-v3-virtualhost">VirtualHost&lt;/a> Hook provides a way for extensions to modify a VirtualHost generated by Envoy Gateway before it is finalized.
An extension can also make use of this hook to generate and insert entirely new Routes not generated by Envoy Gateway.
This hook is always executed when an extension is loaded that has added &lt;code>VirtualHost&lt;/code> to the &lt;code>EnvoyProxy.extensionManager.hooks.xdsTranslator.post&lt;/code>.
An extension may return nil to not make any changes to the VirtualHost.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// PostVirtualHostModifyRequest sends a VirtualHost that was generated by Envoy Gateway along with context information to an extension so that the VirtualHost can be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostVirtualHostModifyRequest&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">envoy.config.route.v3.VirtualHost&lt;/span> &lt;span style="color:#000">virtual_host&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">PostVirtualHostExtensionContext&lt;/span> &lt;span style="color:#000">post_virtual_host_context&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// Empty for now but we can add fields to the context as use-cases are discovered without
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// breaking any clients that use the API
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// additional context information can be added to this message as more use-cases are discovered
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostVirtualHostExtensionContext&lt;/span> &lt;span style="color:#000;font-weight:bold">{}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// PostVirtualHostModifyResponse is the expected response from an extension and contains a modified version of the VirtualHost that was sent
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// If an extension returns a nil Virtual Host then it will not be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostVirtualHostModifyResponse&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">envoy.config.route.v3.VirtualHost&lt;/span> &lt;span style="color:#000">virtual_host&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="http-listener-modification-hook">HTTP Listener Modification Hook&lt;/h3>
&lt;p>The HTTP &lt;a href="https://www.envoyproxy.io/docs/envoy/v1.23.0/api-v3/config/listener/v3/listener.proto#config-listener-v3-listener">Listener&lt;/a> modification hook is the broadest xDS modification Hook available and allows an extension to make changes to a Listener generated by Envoy Gateway before it is finalized.
This hook is always executed when an extension is loaded that has added &lt;code>HTTPListener&lt;/code> to the &lt;code>EnvoyProxy.extensionManager.hooks.xdsTranslator.post&lt;/code>. An extension may return nil
in order to not make any changes to the Listener.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// PostVirtualHostModifyRequest sends a Listener that was generated by Envoy Gateway along with context information to an extension so that the Listener can be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostHTTPListenerModifyRequest&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">envoy.config.listener.v3.Listener&lt;/span> &lt;span style="color:#000">listener&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">PostHTTPListenerExtensionContext&lt;/span> &lt;span style="color:#000">post_listener_context&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// Empty for now but we can add fields to the context as use-cases are discovered without
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// breaking any clients that use the API
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// additional context information can be added to this message as more use-cases are discovered
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostHTTPListenerExtensionContext&lt;/span> &lt;span style="color:#000;font-weight:bold">{}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// PostHTTPListenerModifyResponse is the expected response from an extension and contains a modified version of the Listener that was sent
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// If an extension returns a nil Listener then it will not be modified
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostHTTPListenerModifyResponse&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">envoy.config.listener.v3.Listener&lt;/span> &lt;span style="color:#000">listener&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="post-xds-translation-modify-hook">Post xDS Translation Modify Hook&lt;/h3>
&lt;p>The Post Translate Modify hook allows an extension to modify the clusters and secrets in the xDS config.
This allows for inserting clusters that may change along with extension specific configuration to be dynamically created rather than
using custom bootstrap config which would be sufficient for clusters that are static and not prone to have their configurations changed.
An example of how this may be used is to inject a cluster that will be used by an ext_authz http filter created by the extension.
The list of clusters and secrets returned by the extension are used as the final list of all clusters and secrets
This hook is always executed when an extension is loaded that has added &lt;code>Translation&lt;/code> to the &lt;code>EnvoyProxy.extensionManager.hooks.xdsTranslator.post&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// PostTranslateModifyRequest currently sends only clusters and secrets to an extension.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// The extension is free to add/modify/remove the resources it received.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostTranslateModifyRequest&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#000">PostTranslateExtensionContext&lt;/span> &lt;span style="color:#000">post_translate_context&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">repeated&lt;/span> &lt;span style="color:#000">envoy.config.cluster.v3.Cluster&lt;/span> &lt;span style="color:#000">clusters&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">repeated&lt;/span> &lt;span style="color:#000">envoy.extensions.transport_sockets.tls.v3.Secret&lt;/span> &lt;span style="color:#000">secrets&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// PostTranslateModifyResponse is the expected response from an extension and contains
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// the full list of xDS clusters and secrets to be used for the xDS config.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span> &lt;span style="color:#000">PostTranslateModifyResponse&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">repeated&lt;/span> &lt;span style="color:#000">envoy.config.cluster.v3.Cluster&lt;/span> &lt;span style="color:#000">clusters&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">repeated&lt;/span> &lt;span style="color:#000">envoy.extensions.transport_sockets.tls.v3.Secret&lt;/span> &lt;span style="color:#000">secrets&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="extension-service">Extension Service&lt;/h3>
&lt;p>Currently, an extension must implement all of the following hooks although it may return the input(s) it received
if no modification of the resource is desired. A future expansion of the extension hooks will allow an Extension to specify
with config which Hooks it would like to &amp;ldquo;subscribe&amp;rdquo; to and which Hooks it does not wish to support. These specific Hooks were chosen
in order to provide extensions with the ability to have both broad and specific control over xDS resources and to minimize the amount of data being sent.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">service&lt;/span> &lt;span style="color:#000">EnvoyGatewayExtension&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">rpc&lt;/span> &lt;span style="color:#000">PostRouteModify&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostRouteModifyRequest&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">returns&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostRouteModifyResponse&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{};&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">rpc&lt;/span> &lt;span style="color:#000">PostVirtualHostModify&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostVirtualHostModifyRequest&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">returns&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostVirtualHostModifyResponse&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{};&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">rpc&lt;/span> &lt;span style="color:#000">PostHTTPListenerModify&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostHTTPListenerModifyRequest&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">returns&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostHTTPListenerModifyResponse&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{};&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">rpc&lt;/span> &lt;span style="color:#000">PostTranslateModify&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostTranslateModifyRequest&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">returns&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PostTranslateModifyResponse&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{};&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="design-decisions">Design Decisions&lt;/h2>
&lt;ul>
&lt;li>Envoy Gateway watches new custom resources introduced by a loaded extension and passes the resources back to the extension when they are used.
&lt;ul>
&lt;li>This decision was made to solve the problem about how resources introduced by an extension get watched. If an extension server watches its own resources then it would need some way to trigger an Envoy Gateway reconfigure when a resource that Envoy Gateway is not watching gets updated. Having Envoy Gateway watch all resources removes any concern about creating race confitions or reconcile loops that would result from Envoy Gateway and the extension server both having so much separate state that needs to be synchronized.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The Extension Server takes ownership of producing the correct xDS configuration in the hook responses&lt;/li>
&lt;li>The Extension Server will be responsible for ensuring the performance of the hook processing time&lt;/li>
&lt;li>The Post xDS level gRPC hooks all currently send a context field even though it contains nothing for several hooks. These fields exist so that they can be updadated in the future to pass
additional information to extensions as new use-cases and needs are discovered.&lt;/li>
&lt;li>The initial design supplies the scaffolding for both &amp;ldquo;pre xDS&amp;rdquo; and &amp;ldquo;post xDS&amp;rdquo; hooks. Only the post hooks are currently implemented which operate on xDS resources after they have been generated.
The pre hooks will be implemented at a later date along with one or more hooks in the infra manager. The infra manager level hook(s) will exist to power use-cases such as dynamically creating Deployments/Services for the extension the
whenever Envoy Gateway creates an instance of Envoy Proxy. An extension developer might want to take advantage of this functionality to inject a new authorization service as a sidecar on the Envoy Proxy deployment for reduced latency.&lt;/li>
&lt;li>Multiple extensions are not be supported at the same time. Preventing conflict between multiple extensions that are mangling xDS resources is too difficult to ensure compatibility with and is likely to only generate issues.&lt;/li>
&lt;/ul>
&lt;h2 id="known-challenges">Known Challenges&lt;/h2>
&lt;p>Extending Envoy Gateway by using an external extension server which makes use of hook points in Envoy Gateway does comes with a few trade-offs. One known trade-off is the impact of the time that it takes for the hook calls to be executed. Since an extension would make use of hook points in Envoy Gateway that use gRPC for communication, the time it takes to perform these requests could become a concern for some extension developers. One way to minimize the request time of the hook calls is to load the extension server as a sidecar to Envoy Gateway to minimize the impact of networking on the hook calls.&lt;/p></description></item><item><title>Docs: Envoy Patch Policy</title><link>http://gateway.xunzhuo.cafe/docs/latest/user/envoy-patch-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/latest/user/envoy-patch-policy/</guid><description>
&lt;p>This guide explains the usage of the &lt;a href="https://gateway.envoyproxy.io/latest/api/extension_types.html#envoypatchpolicy">EnvoyPatchPolicy&lt;/a> API.
&lt;strong>Note:&lt;/strong> This API is meant for users extremely familiar with Envoy &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/operations/dynamic_configuration">xDS&lt;/a> semantics.
Also before considering this API for production use cases, please be aware that this API
is unstable and the outcome may change across versions. Use at your own risk.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>The &lt;a href="https://gateway.envoyproxy.io/latest/api/extension_types.html#envoypatchpolicy">EnvoyPatchPolicy&lt;/a> API allows user to modify the output &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/operations/dynamic_configuration">xDS&lt;/a>
configuration generated by Envoy Gateway intended for EnvoyProxy,
using &lt;a href="https://datatracker.ietf.org/doc/html/rfc6902">JSON Patch&lt;/a> semantics.&lt;/p>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>This API was introduced to allow advanced users to be able to leverage Envoy Proxy functionality
not exposed by Envoy Gateway APIs today.&lt;/p>
&lt;h2 id="quickstart">Quickstart&lt;/h2>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;ul>
&lt;li>Follow the steps from the &lt;a href="quickstart.md">Quickstart&lt;/a> guide to install Envoy Gateway and the example manifest.
Before proceeding, you should be able to query the example backend using HTTP.&lt;/li>
&lt;/ul>
&lt;h3 id="enable-envoypatchpolicy">Enable EnvoyPatchPolicy&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>By default EnvoyPatchPolicy][] is disabled. Lets enable it in the &lt;a href="https://gateway.envoyproxy.io/latest/api/config_types.html#envoygateway">EnvoyGateway&lt;/a> startup configuration&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The default installation of Envoy Gateway installs a default &lt;a href="https://gateway.envoyproxy.io/latest/api/config_types.html#envoygateway">EnvoyGateway&lt;/a> configuration and attaches it
using a &lt;code>ConfigMap&lt;/code>. In the next step, we will update this resource to enable EnvoyPatchPolicy.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: ConfigMap
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: envoy-gateway-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">data:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoy-gateway.yaml: |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> apiVersion: gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kind: EnvoyGateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> gateway:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> controllerName: gateway.envoyproxy.io/gatewayclass-controller
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> extensionApis:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> enableEnvoyPatchPolicy: true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>After updating the &lt;code>ConfigMap&lt;/code>, you will need to restart the &lt;code>envoy-gateway&lt;/code> deployment so the configuration kicks in&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl rollout restart deployment envoy-gateway -n envoy-gateway-system
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="testing">Testing&lt;/h2>
&lt;h3 id="customize-response">Customize Response&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Lets use EnvoyProxy&amp;rsquo;s &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/local_reply">Local Reply Modification&lt;/a> feature to return a custom response back to the client when
the status code is &lt;code>404&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Lets apply the configuration&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyPatchPolicy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-response-patch-policy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: default
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> targetRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> group: gateway.networking.k8s.io
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kind: Gateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: default
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: JSONPatch
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> jsonPatches:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - type: &amp;#34;type.googleapis.com/envoy.config.listener.v3.Listener&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> # The listener name is of the form &amp;lt;GatewayNamespace&amp;gt;/&amp;lt;GatewayName&amp;gt;/&amp;lt;GatewayListenerName&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: default/eg/http
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> operation:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> op: add
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> path: &amp;#34;/default_filter_chain/filters/0/typed_config/local_reply_config&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> value:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> mappers:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - filter:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> status_code_filter:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> comparison:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> op: EQ
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> value:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> default_value: 404
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> runtime_key: key_b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> status_code: 406
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> body:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> inline_string: &amp;#34;could not find what you are looking for&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Lets edit the HTTPRoute resource from the Quickstart to only match on paths with value &lt;code>/get&lt;/code>&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>kubectl patch httproute backend --type=json --patch &amp;#39;[{
&amp;#34;op&amp;#34;: &amp;#34;add&amp;#34;,
&amp;#34;path&amp;#34;: &amp;#34;/spec/rules/0/matches/0/path/value&amp;#34;,
&amp;#34;value&amp;#34;: &amp;#34;/get&amp;#34;,
}]&amp;#39;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Lets test it out by specifying a path apart from &lt;code>/get&lt;/code>&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ curl --header &amp;#34;Host: www.example.com&amp;#34; http://localhost:8888/find
Handling connection for 8888
could not find what you are looking for
&lt;/code>&lt;/pre>&lt;h2 id="debugging">Debugging&lt;/h2>
&lt;h3 id="runtime">Runtime&lt;/h3>
&lt;ul>
&lt;li>The &lt;code>Status&lt;/code> subresource should have information about the status of the resource. Make sure
&lt;code>Accepted=True&lt;/code> and &lt;code>Programmed=True&lt;/code> conditions are set to ensure that the policy has been
applied to Envoy Proxy.&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyPatchPolicy
metadata:
annotations:
kubectl.kubernetes.io/last-applied-configuration: |
{&amp;#34;apiVersion&amp;#34;:&amp;#34;gateway.envoyproxy.io/v1alpha1&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;EnvoyPatchPolicy&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{},&amp;#34;name&amp;#34;:&amp;#34;custom-response-patch-policy&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;spec&amp;#34;:{&amp;#34;jsonPatches&amp;#34;:[{&amp;#34;name&amp;#34;:&amp;#34;default/eg/http&amp;#34;,&amp;#34;operation&amp;#34;:{&amp;#34;op&amp;#34;:&amp;#34;add&amp;#34;,&amp;#34;path&amp;#34;:&amp;#34;/default_filter_chain/filters/0/typed_config/local_reply_config&amp;#34;,&amp;#34;value&amp;#34;:{&amp;#34;mappers&amp;#34;:[{&amp;#34;body&amp;#34;:{&amp;#34;inline_string&amp;#34;:&amp;#34;could not find what you are looking for&amp;#34;},&amp;#34;filter&amp;#34;:{&amp;#34;status_code_filter&amp;#34;:{&amp;#34;comparison&amp;#34;:{&amp;#34;op&amp;#34;:&amp;#34;EQ&amp;#34;,&amp;#34;value&amp;#34;:{&amp;#34;default_value&amp;#34;:404}}}}}]}},&amp;#34;type&amp;#34;:&amp;#34;type.googleapis.com/envoy.config.listener.v3.Listener&amp;#34;}],&amp;#34;priority&amp;#34;:0,&amp;#34;targetRef&amp;#34;:{&amp;#34;group&amp;#34;:&amp;#34;gateway.networking.k8s.io&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;Gateway&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;eg&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;type&amp;#34;:&amp;#34;JSONPatch&amp;#34;}}
creationTimestamp: &amp;#34;2023-07-31T21:47:53Z&amp;#34;
generation: 1
name: custom-response-patch-policy
namespace: default
resourceVersion: &amp;#34;10265&amp;#34;
uid: a35bda6e-a0cc-46d7-a63a-cee765174bc3
spec:
jsonPatches:
- name: default/eg/http
operation:
op: add
path: /default_filter_chain/filters/0/typed_config/local_reply_config
value:
mappers:
- body:
inline_string: could not find what you are looking for
filter:
status_code_filter:
comparison:
op: EQ
value:
default_value: 404
type: type.googleapis.com/envoy.config.listener.v3.Listener
priority: 0
targetRef:
group: gateway.networking.k8s.io
kind: Gateway
name: eg
namespace: default
type: JSONPatch
status:
conditions:
- lastTransitionTime: &amp;#34;2023-07-31T21:48:19Z&amp;#34;
message: EnvoyPatchPolicy has been accepted.
observedGeneration: 1
reason: Accepted
status: &amp;#34;True&amp;#34;
type: Accepted
- lastTransitionTime: &amp;#34;2023-07-31T21:48:19Z&amp;#34;
message: successfully applied patches.
reason: Programmed
status: &amp;#34;True&amp;#34;
type: Programmed
&lt;/code>&lt;/pre>&lt;h3 id="offline">Offline&lt;/h3>
&lt;ul>
&lt;li>You can use &lt;a href="https://gateway.envoyproxy.io/latest/user/egctl.html#egctl-experimental-translate">egctl x translate&lt;/a> to validate the translated xds output.&lt;/li>
&lt;/ul>
&lt;h2 id="caveats">Caveats&lt;/h2>
&lt;p>This API will always be an unstable API and the same outcome cannot be garunteed
across versions for these reasons&lt;/p>
&lt;ul>
&lt;li>The Envoy Proxy API might deprecate and remove API fields&lt;/li>
&lt;li>Envoy Gateway might alter the xDS translation creating a different xDS output
such as changing the &lt;code>name&lt;/code> field of resources.&lt;/li>
&lt;/ul></description></item><item><title>Docs: Envoy Patch Policy</title><link>http://gateway.xunzhuo.cafe/docs/v0.5.0/user/envoy-patch-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/v0.5.0/user/envoy-patch-policy/</guid><description>
&lt;p>This guide explains the usage of the &lt;a href="https://gateway.envoyproxy.io/v0.5.0/api/extension_types.html#envoypatchpolicy">EnvoyPatchPolicy&lt;/a> API.
&lt;strong>Note:&lt;/strong> This API is meant for users extremely familiar with Envoy &lt;a href="https://www.envoyproxy.io/docs/envoy/v0.5.0/intro/arch_overview/operations/dynamic_configuration">xDS&lt;/a> semantics.
Also before considering this API for production use cases, please be aware that this API
is unstable and the outcome may change across versions. Use at your own risk.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>The &lt;a href="https://gateway.envoyproxy.io/v0.5.0/api/extension_types.html#envoypatchpolicy">EnvoyPatchPolicy&lt;/a> API allows user to modify the output &lt;a href="https://www.envoyproxy.io/docs/envoy/v0.5.0/intro/arch_overview/operations/dynamic_configuration">xDS&lt;/a>
configuration generated by Envoy Gateway intended for EnvoyProxy,
using &lt;a href="https://datatracker.ietf.org/doc/html/rfc6902">JSON Patch&lt;/a> semantics.&lt;/p>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>This API was introduced to allow advanced users to be able to leverage Envoy Proxy functionality
not exposed by Envoy Gateway APIs today.&lt;/p>
&lt;h2 id="quickstart">Quickstart&lt;/h2>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;ul>
&lt;li>Follow the steps from the &lt;a href="quickstart.md">Quickstart&lt;/a> guide to install Envoy Gateway and the example manifest.
Before proceeding, you should be able to query the example backend using HTTP.&lt;/li>
&lt;/ul>
&lt;h3 id="enable-envoypatchpolicy">Enable EnvoyPatchPolicy&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>By default EnvoyPatchPolicy][] is disabled. Lets enable it in the &lt;a href="https://gateway.envoyproxy.io/v0.5.0/api/config_types.html#envoygateway">EnvoyGateway&lt;/a> startup configuration&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The default installation of Envoy Gateway installs a default &lt;a href="https://gateway.envoyproxy.io/v0.5.0/api/config_types.html#envoygateway">EnvoyGateway&lt;/a> configuration and attaches it
using a &lt;code>ConfigMap&lt;/code>. In the next step, we will update this resource to enable EnvoyPatchPolicy.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: ConfigMap
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: envoy-gateway-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: envoy-gateway-system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">data:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> envoy-gateway.yaml: |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> apiVersion: config.gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kind: EnvoyGateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> provider:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> gateway:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> controllerName: gateway.envoyproxy.io/gatewayclass-controller
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> extensionApis:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> enableEnvoyPatchPolicy: true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>After updating the &lt;code>ConfigMap&lt;/code>, you will need to restart the &lt;code>envoy-gateway&lt;/code> deployment so the configuration kicks in&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl rollout restart deployment envoy-gateway -n envoy-gateway-system
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="testing">Testing&lt;/h2>
&lt;h3 id="customize-response">Customize Response&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Lets use EnvoyProxy&amp;rsquo;s &lt;a href="https://www.envoyproxy.io/docs/envoy/v0.5.0/configuration/http/http_conn_man/local_reply">Local Reply Modification&lt;/a> feature to return a custom response back to the client when
the status code is &lt;code>404&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Lets apply the configuration&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">apiVersion: gateway.envoyproxy.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">kind: EnvoyPatchPolicy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: custom-response-patch-policy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: default
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> targetRef:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> group: gateway.networking.k8s.io
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> kind: Gateway
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: eg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> namespace: default
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> type: JSONPatch
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> jsonPatches:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - type: &amp;#34;type.googleapis.com/envoy.config.listener.v3.Listener&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> # The listener name is of the form &amp;lt;GatewayNamespace&amp;gt;/&amp;lt;GatewayName&amp;gt;/&amp;lt;GatewayListenerName&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> name: default/eg/http
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> operation:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> op: add
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> path: &amp;#34;/default_filter_chain/filters/0/typed_config/local_reply_config&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> value:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> mappers:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> - filter:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> status_code_filter:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> comparison:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> op: EQ
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> value:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> default_value: 404
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> runtime_key: key_b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> status_code: 406
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> body:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> inline_string: &amp;#34;could not find what you are looking for&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Lets edit the HTTPRoute resource from the Quickstart to only match on paths with value &lt;code>/get&lt;/code>&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>kubectl patch httproute backend --type=json --patch &amp;#39;[{
&amp;#34;op&amp;#34;: &amp;#34;add&amp;#34;,
&amp;#34;path&amp;#34;: &amp;#34;/spec/rules/0/matches/0/path/value&amp;#34;,
&amp;#34;value&amp;#34;: &amp;#34;/get&amp;#34;,
}]&amp;#39;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Lets test it out by specifying a path apart from &lt;code>/get&lt;/code>&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ curl --header &amp;#34;Host: www.example.com&amp;#34; http://localhost:8888/find
Handling connection for 8888
could not find what you are looking for
&lt;/code>&lt;/pre>&lt;h2 id="debugging">Debugging&lt;/h2>
&lt;h3 id="runtime">Runtime&lt;/h3>
&lt;ul>
&lt;li>The &lt;code>Status&lt;/code> subresource should have information about the status of the resource. Make sure
&lt;code>Accepted=True&lt;/code> and &lt;code>Programmed=True&lt;/code> conditions are set to ensure that the policy has been
applied to Envoy Proxy.&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyPatchPolicy
metadata:
annotations:
kubectl.kubernetes.io/last-applied-configuration: |
{&amp;#34;apiVersion&amp;#34;:&amp;#34;gateway.envoyproxy.io/v1alpha1&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;EnvoyPatchPolicy&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{},&amp;#34;name&amp;#34;:&amp;#34;custom-response-patch-policy&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;spec&amp;#34;:{&amp;#34;jsonPatches&amp;#34;:[{&amp;#34;name&amp;#34;:&amp;#34;default/eg/http&amp;#34;,&amp;#34;operation&amp;#34;:{&amp;#34;op&amp;#34;:&amp;#34;add&amp;#34;,&amp;#34;path&amp;#34;:&amp;#34;/default_filter_chain/filters/0/typed_config/local_reply_config&amp;#34;,&amp;#34;value&amp;#34;:{&amp;#34;mappers&amp;#34;:[{&amp;#34;body&amp;#34;:{&amp;#34;inline_string&amp;#34;:&amp;#34;could not find what you are looking for&amp;#34;},&amp;#34;filter&amp;#34;:{&amp;#34;status_code_filter&amp;#34;:{&amp;#34;comparison&amp;#34;:{&amp;#34;op&amp;#34;:&amp;#34;EQ&amp;#34;,&amp;#34;value&amp;#34;:{&amp;#34;default_value&amp;#34;:404}}}}}]}},&amp;#34;type&amp;#34;:&amp;#34;type.googleapis.com/envoy.config.listener.v3.Listener&amp;#34;}],&amp;#34;priority&amp;#34;:0,&amp;#34;targetRef&amp;#34;:{&amp;#34;group&amp;#34;:&amp;#34;gateway.networking.k8s.io&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;Gateway&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;eg&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;type&amp;#34;:&amp;#34;JSONPatch&amp;#34;}}
creationTimestamp: &amp;#34;2023-07-31T21:47:53Z&amp;#34;
generation: 1
name: custom-response-patch-policy
namespace: default
resourceVersion: &amp;#34;10265&amp;#34;
uid: a35bda6e-a0cc-46d7-a63a-cee765174bc3
spec:
jsonPatches:
- name: default/eg/http
operation:
op: add
path: /default_filter_chain/filters/0/typed_config/local_reply_config
value:
mappers:
- body:
inline_string: could not find what you are looking for
filter:
status_code_filter:
comparison:
op: EQ
value:
default_value: 404
type: type.googleapis.com/envoy.config.listener.v3.Listener
priority: 0
targetRef:
group: gateway.networking.k8s.io
kind: Gateway
name: eg
namespace: default
type: JSONPatch
status:
conditions:
- lastTransitionTime: &amp;#34;2023-07-31T21:48:19Z&amp;#34;
message: EnvoyPatchPolicy has been accepted.
observedGeneration: 1
reason: Accepted
status: &amp;#34;True&amp;#34;
type: Accepted
- lastTransitionTime: &amp;#34;2023-07-31T21:48:19Z&amp;#34;
message: successfully applied patches.
reason: Programmed
status: &amp;#34;True&amp;#34;
type: Programmed
&lt;/code>&lt;/pre>&lt;h3 id="offline">Offline&lt;/h3>
&lt;ul>
&lt;li>You can use &lt;a href="https://gateway.envoyproxy.io/v0.5.0/user/egctl.html#egctl-experimental-translate">egctl x translate&lt;/a> to validate the translated xds output.&lt;/li>
&lt;/ul>
&lt;h2 id="caveats">Caveats&lt;/h2>
&lt;p>This API will always be an unstable API and the same outcome cannot be garunteed
across versions for these reasons&lt;/p>
&lt;ul>
&lt;li>The Envoy Proxy API might deprecate and remove API fields&lt;/li>
&lt;li>Envoy Gateway might alter the xDS translation creating a different xDS output
such as changing the &lt;code>name&lt;/code> field of resources.&lt;/li>
&lt;/ul></description></item><item><title>Docs: EnvoyPatchPolicy</title><link>http://gateway.xunzhuo.cafe/docs/latest/design/envoy-patch-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://gateway.xunzhuo.cafe/docs/latest/design/envoy-patch-policy/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This design introduces the &lt;code>EnvoyPatchPolicy&lt;/code> API allowing users to modify the generated Envoy xDS Configuration
that Envoy Gateway generates before sending it to Envoy Proxy.&lt;/p>
&lt;p>Envoy Gateway allows users to configure networking and security intent using the
upstream &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> as well as implementation specific &lt;a href="https://gateway.envoyproxy.io/latest/api/extension_types.html">Extension APIs&lt;/a> defined in this project
to provide a more batteries included experience for application developers.&lt;/p>
&lt;ul>
&lt;li>These APIs are an abstracted version of the underlying Envoy xDS API to provide a better user experience for the application developer, exposing and setting only a subset of the fields for a specific feature, sometimes in a opinionated way (e.g &lt;a href="https://gateway.envoyproxy.io/latest/user/rate-limit.html">RateLimit&lt;/a>)&lt;/li>
&lt;li>These APIs do not expose all the features capabilities that Envoy has either because these features are desired but the API
is not defined yet or the project cannot support such an extensive list of features.
To alleviate this problem, and provide an interim solution for a small section of advanced users who are well versed in
Envoy xDS API and its capabilities, this API is being introduced.&lt;/li>
&lt;/ul>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;ul>
&lt;li>Add an API allowing users to modify the generated xDS Configuration&lt;/li>
&lt;/ul>
&lt;h2 id="non-goals">Non Goals&lt;/h2>
&lt;ul>
&lt;li>Support multiple patch mechanisims&lt;/li>
&lt;/ul>
&lt;h2 id="implementation">Implementation&lt;/h2>
&lt;p>&lt;code>EnvoyPatchPolicy&lt;/code> is a &lt;a href="https://gateway-api.sigs.k8s.io/references/policy-attachment/#direct-policy-attachment">Direct Policy Attachment&lt;/a> type API that can be used to extend &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a>
Modifications to the generated xDS configuration can be provided as a JSON Patch which is defined in
&lt;a href="https://datatracker.ietf.org/doc/html/rfc6902">RFC 6902&lt;/a>. This patching mechanism has been adopted in &lt;a href="https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/">Kubernetes&lt;/a> as well as &lt;a href="https://github.com/kubernetes-sigs/kustomize/blob/master/examples/jsonpatch.md">Kustomize&lt;/a> to update
resource objects.&lt;/p>
&lt;h3 id="example">Example&lt;/h3>
&lt;p>Here is an example highlighting how a user can configure global ratelimiting using an external rate limit service using this API.&lt;/p>
&lt;pre tabindex="0">&lt;code>apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
name: eg
spec:
controllerName: gateway.envoyproxy.io/gatewayclass-controller
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
name: eg
namespace: default
spec:
gatewayClassName: eg
listeners:
- name: http
protocol: HTTP
port: 80
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
name: backend
namespace: default
spec:
parentRefs:
- name: eg
hostnames:
- &amp;#34;www.example.com&amp;#34;
rules:
- backendRefs:
- group: &amp;#34;&amp;#34;
kind: Service
name: backend
port: 3000
weight: 1
matches:
- path:
type: PathPrefix
value: /
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyPatchPolicy
metadata:
name: ratelimit-patch-policy
namespace: default
spec:
targetRef:
group: gateway.networking.k8s.io
kind: Gateway
name: eg
namespace: default
type: JSONPatch
jsonPatches:
- type: &amp;#34;type.googleapis.com/envoy.config.listener.v3.Listener&amp;#34;
# The listener name is of the form &amp;lt;GatewayNamespace&amp;gt;/&amp;lt;GatewayName&amp;gt;/&amp;lt;GatewayListenerName&amp;gt;
name: default/eg/http
operation:
op: add
path: &amp;#34;/default_filter_chain/filters/0/typed_config/http_filters/0&amp;#34;
value:
name: &amp;#34;envoy.filters.http.ratelimit&amp;#34;
typed_config:
&amp;#34;@type&amp;#34;: &amp;#34;type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit&amp;#34;
domain: &amp;#34;eag-ratelimit&amp;#34;
failure_mode_deny: true
timeout: 1s
rate_limit_service:
grpc_service:
envoy_grpc:
cluster_name: rate-limit-cluster
transport_api_version: V3
- type: &amp;#34;type.googleapis.com/envoy.config.route.v3.RouteConfiguration&amp;#34;
# The route name is of the form &amp;lt;GatewayNamespace&amp;gt;/&amp;lt;GatewayName&amp;gt;/&amp;lt;GatewayListenerName&amp;gt;
name: default/eg/http
operation:
op: add
path: &amp;#34;/virtual_hosts/0/rate_limits&amp;#34;
value:
- actions:
- remote_address: {}
- type: &amp;#34;type.googleapis.com/envoy.config.cluster.v3.Cluster&amp;#34;
name: rate-limit-cluster
operation:
op: add
path: &amp;#34;&amp;#34;
value:
name: rate-limit-cluster
type: STRICT_DNS
connect_timeout: 10s
lb_policy: ROUND_ROBIN
http2_protocol_options: {}
load_assignment:
cluster_name: rate-limit-cluster
endpoints:
- lb_endpoints:
- endpoint:
address:
socket_address:
address: ratelimit.svc.cluster.local
port_value: 8081
&lt;/code>&lt;/pre>&lt;h2 id="verification">Verification&lt;/h2>
&lt;ul>
&lt;li>Offline - Leverage &lt;a href="https://gateway.envoyproxy.io/latest/user/egctl.html#egctl-experimental-translate">egctl x translate&lt;/a> to ensure that the &lt;code>EnvoyPatchPolicy&lt;/code> can be successfully applied and the desired
output xDS is created.&lt;/li>
&lt;li>Runtime - Use the &lt;code>Status&lt;/code> field within &lt;code>EnvoyPatchPolicy&lt;/code> to highlight whether the patch was applied successfully or not.&lt;/li>
&lt;/ul>
&lt;h2 id="state-of-the-world">State of the World&lt;/h2>
&lt;ul>
&lt;li>Istio - Supports the &lt;a href="https://istio.io/latest/docs/reference/config/networking/envoy-filter">EnvoyFilter&lt;/a> API which allows users to customize the output xDS using patches and proto based merge
semantics.&lt;/li>
&lt;/ul>
&lt;h2 id="design-decisions">Design Decisions&lt;/h2>
&lt;ul>
&lt;li>This API will only support a single &lt;code>targetRef&lt;/code> and can bind to only a &lt;code>Gateway&lt;/code> resource. This simplifies reasoning of how
patches will work.&lt;/li>
&lt;li>This API will always be an experimental API and cannot be graduated into a stable API because Envoy Gateway cannot garuntee
&lt;ul>
&lt;li>that the naming scheme for the generated resources names will not change across releases&lt;/li>
&lt;li>that the underlying Envoy Proxy API will not change across releases&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>This API needs to be explicitly enabled using the &lt;a href="https://gateway.envoyproxy.io/latest/api/config_types.html#envoygateway">EnvoyGateway&lt;/a> API&lt;/li>
&lt;/ul>
&lt;h2 id="open-questions">Open Questions&lt;/h2>
&lt;ul>
&lt;li>Should the value only support JSON or YAML as well (which is a JSON superset) ?&lt;/li>
&lt;/ul>
&lt;h2 id="alternatives">Alternatives&lt;/h2>
&lt;ul>
&lt;li>Users can customize the Envoy &lt;a href="https://gateway.envoyproxy.io/latest/user/customize-envoyproxy.html#customize-envoyproxy-bootstrap-config">Bootstrap configuration using EnvoyProxy API&lt;/a> and provide static xDS configuration.&lt;/li>
&lt;li>Users can extend functionality by &lt;a href="https://gateway.envoyproxy.io/latest/design/extending-envoy-gateway.html">Extending the Control Plane&lt;/a> and adding gRPC hooks to modify the generated xDS configuration.&lt;/li>
&lt;/ul></description></item></channel></rss>